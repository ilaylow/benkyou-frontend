{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/Router.svelte","../../src/components/Title.svelte","../../src/components/Button.svelte","../../src/components/Footer.svelte","../../src/services/user.js","../../src/components/Error.svelte","../../src/components/SignIn.svelte","../../src/utils/jwt.js","../../src/pages/Home.svelte","../../node_modules/wanakana/esm/index.js","../../src/services/translation.js","../../src/components/Loading.svelte","../../src/components/Toggle.svelte","../../src/components/Slider.svelte","../../src/components/PracticeInput.svelte","../../src/pages/PracticeTranslation.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && !$activeRoute.preserveScroll && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false, preserveScroll = false } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\", preserveScroll })\n            );\n            document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let viewtransition = null;\n    export let history = globalHistory;\n\n    const viewtransitionFn = (node, _, direction) => {\n        const vt = viewtransition(direction);\n        if (typeof vt?.fn === \"function\") return vt.fn(node, vt);\n        else return vt;\n    };\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n\n    let preserveScroll = false;\n\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) =>\n                Object.assign(r, { path: combinePaths(basepath, r._path) })\n            )\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch ? {...bestMatch, preserveScroll} : bestMatch);\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                preserveScroll = event.preserveScroll || false;\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n{#if viewtransition}\n    {#key $location.pathname}\n        <div in:viewtransitionFn out:viewtransitionFn>\n            <slot\n                route={$activeRoute && $activeRoute.uri}\n                location={$location}\n            />\n        </div>\n    {/key}\n{:else}\n    <slot route={$activeRoute && $activeRoute.uri} location={$location} />\n{/if}\n","<!-- src/components/Title.svelte -->\r\n<style>\r\n\t/* Typography Styles */\r\n\th1 {\r\n\t\tfont-size: clamp(65px, 5.5vw, 80px);\r\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\r\n\t\ttext-align: center;\r\n\t\ttext-shadow: 0.125rem 0.125rem 0.25rem #aaa;\r\n\t\tmargin-bottom: 0.2vh;\r\n\t}\r\n\r\n\t.typewriter {\r\n        display: inline-block;\r\n        max-width: 0;  /* Start with a max-width of 0 */\r\n        overflow: hidden;\r\n        white-space: nowrap;  /* Keep text on a single line */\r\n        border-right: 0.5rem solid #ffffff;\r\n\t\tfont-size: 1rem; /* Adjust the font-size to control the caret size */\r\n        animation: typing 1.2s steps(40, end) forwards,  /* Added forwards to keep text visible */\r\n                  blink-caret .75s step-end infinite;\r\n        margin-bottom: 0.5vh;\r\n    }\r\n\r\n    h3 {\r\n\t\tfont-size: clamp(15px, 1.2vw, 20px);\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n\t\tmargin: 0%;\r\n\t\ttext-decoration: underline;\r\n    }\r\n\r\n    /* Typewriter Effect */\r\n    @keyframes typing {\r\n        from { max-width: 0; }\r\n        to { max-width: 100%; }  /* Transition max-width to reveal the text */\r\n    }\r\n\r\n    @keyframes blink-caret {\r\n        from, to { border-color: transparent; }\r\n        50% { border-color: #ffffff; }\r\n    }\r\n</style>\r\n\r\n<h1>勉-You</h1>\r\n<div class=\"typewriter\">\r\n    <h3>An AI Powered Japanese Learning Experience</h3>\r\n</div>\r\n","<!-- src/components/Button.svelte -->\n<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let text = \"スタート\";  // Default text is \"スタート\"\n\texport let loading = false;\n\texport let style = \"button\";\n\n\tfunction handleClick() {\n\t\tdispatch('click');\n}\n\n</script>\n\n<style>\n\t/* Button Styles */\n\t.button {\n\t\tbackground-color: #ff4081;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1.2vh 1.3vw;\n\t\tfont-size: clamp(14px, 1.4vw, 18px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n\t\ttransition: background-color 0.3s;\n\t\tmargin-top: 1.5rem;  /* Space above button */\n\t\tmargin-bottom: 1.5rem;\n\t\twhite-space: nowrap;\n\t}\n\n\t.router {\n\t\tbackground-color: #2e2e2e;\n\t\tcolor: #5b5b5b;\n\t\tborder: none;\n\t\tpadding: 1.2vh 1.3vw;\n\t\tfont-size: clamp(30px, 4.7vw, 70px);\n\t\tfont-family: MS PMincho, Meiryo, Yu Gothic, sans-serif;\n\t\tfont-weight: bold;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n\t\twhite-space: nowrap;\n\t\tletter-spacing: 5px;\n\t\ttransition: color 0s;\n\t}\n\n\t.kanji{\n\t\tfont-size: clamp(30px, 10vw, 130px);\n\t}\n\n\t.sentence-analysis{\n\t\tfont-size: clamp(30px, 3.5vw, 50px);\n\t\tletter-spacing: 0px;\n\t}\n\n\t.error {\n        margin-left: 23%;\n        background-color: #be780f;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1.2vh 1.3vw;\n\t\tfont-size: clamp(14px, 1.4vw, 18px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n        text-decoration: bold;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n    }\n\n\t.retry {\n\t\tmargin-top: -0.1%;\n        background-color: #686868;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1vh 1.3vw;\n\t\tfont-size: clamp(15px, 0.9vw, 20px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n        text-decoration: bold;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n    }\n\n\t.logout {\n        background-color: #be780f;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1vh 1vw;\n\t\tfont-size: clamp(14px, 1vw, 16px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n        text-decoration: bold;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n    }\n\n\t.swap {\n\t\tbackground-color: #ff4081;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1.2vh 0.7vw;\n\t\tmargin-top: 0.2rem;\n\t\tfont-size: clamp(12px, 1vw, 14px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n\t\tborder-radius: 1.5rem;\n\t\tcursor: pointer;\n\t\ttransition: background-color 0.3s;\n\t}\n\n\t.home {\n        background-color: #ff4081;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tpadding: 1vh 1vw;\n\t\tfont-size: clamp(13px, 1vw, 16px);\n\t\tfont-family: Meiryo, Yu Gothic, sans-serif;\n        text-decoration: bold;\n\t\tborder-radius: 0.25rem;\n\t\tcursor: pointer;\n\t}\n\n\t.button:hover {\n\t\tbackground-color: rgb(116, 19, 51);\n\t}\n\n\t.button.router:hover {\n\t\tbackground-color: #2e2e2e;\n\t\tcolor: #ff4081;\n\t}\n\n\t.button.error:hover {\n\t\tbackground-color: rgb(168, 104, 8);\n\t}\n\n\t.button.retry:hover {\n\t\tbackground-color: rgb(5, 5, 5);\n\t}\n\n\t.button.logout:hover {\n\t\tbackground-color: rgb(139, 86, 6);\n\t}\n\n\t.button.home:hover {\n\t\tbackground-color: rgb(116, 19, 51);\n\t}\n\n</style>\n\n<button class=\"button {style}\" on:click={handleClick} disabled={loading}>{text}</button>\n","<!-- src/components/Footer.svelte -->\r\n<style>\r\n\tfooter {\r\n        position: fixed;  /* Fixed position */\r\n        bottom: 0;  /* Align to bottom */\r\n        width: 100%;  /* Full width */\r\n        background-color: #141414;  /* Background color */\r\n        color: #fff;  /* Text color */\r\n        text-align: center;  /* Center text */\r\n        padding: 1rem;  /* Padding */\r\n    }\r\n</style>\r\n\r\n<footer>\r\n    © 2023 勉You by ilaylow\r\n</footer>\r\n","const backendUrl = process.env.BACKEND_URL || 'http://localhost:5215';\r\nconst userSignInURL = `${backendUrl}/User/SignIn`;\r\n\r\nconst headers = new Headers({\r\n        'Content-Type': 'application/json'\r\n    })\r\n\r\n\r\nconst setSignInRequestOptions = (body) => {\r\n    return {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(body)\r\n    } \r\n};\r\n\r\nconst signInUser = async (body) => {\r\n    const response = await fetch(userSignInURL, setSignInRequestOptions(body));\r\n    let data = await response.json();\r\n\r\n    return data\r\n};\r\n\r\nexport {signInUser};","<!-- src/components/Error.svelte -->\r\n \r\n<script>\r\n    export let showError = false;\r\n    export let text = \"An error has occurred, please try again, or load a new set of questions.\"\r\n</script>\r\n\r\n<style>\r\n    .error {\r\n        display: none;\r\n    }\r\n\r\n    .error.is-shown {\r\n        margin-left: 2rem;\r\n        display: block;\r\n        word-wrap: break-word; /* This ensures text goes to the next line */\r\n        font-size: 80%;\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n        color: red;\r\n    }\r\n</style>\r\n\r\n<p class=\"error {showError ? 'is-shown' : ''}\">{text}</p>","<!-- src/components/SignIn.svelte -->\r\n<script>\r\n\timport { signInUser } from \"../services/user\";\r\n  import Button from \"./Button.svelte\";\r\n  import Error from \"./Error.svelte\";\r\n\r\n\tlet clicked = false;\r\n  let showSignInError = false;\r\n  let userCreds = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n\tasync function handleSignIn() {\r\n    clicked = true;\r\n    showSignInError = false;\r\n\t\ttry {\r\n      let loginData = await signInUser(userCreds);\r\n      localStorage.setItem('jwt_token', loginData.jwt);\r\n      localStorage.setItem('uid', loginData.uid);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      showSignInError = true;\r\n      clicked = false;\r\n      console.log(error)\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n    .login-form {\r\n      width: 28%;\r\n      max-width: 100%;\r\n      padding: 2rem;\r\n      background-color: #f3f3f3;\r\n      border-radius: 2%;\r\n    }\r\n  \r\n    .login-form-title {\r\n      margin-bottom: 0.5rem;\r\n      color: #333;\r\n      font-size: 1.2rem;\r\n    }\r\n  \r\n    .login-form-input {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      margin-bottom: 1rem;\r\n      border: 2% solid #ccc;\r\n      border-radius: 2%;\r\n      box-sizing: border-box; /* So padding doesn't affect width */\r\n    }\r\n  \r\n    .login-form-input::placeholder {\r\n      color: #888;\r\n    }\r\n  \r\n    .login-form-input:focus {\r\n      outline: none;\r\n      border-color: #007bff;\r\n      box-shadow: 0 0 0 0.1rem rgba(0,123,255,.25);\r\n    }\r\n\r\n    .button-container {\r\n        display: flex;\r\n        align-items: center; /* Align items vertically */\r\n        justify-content: flex-start; /* Align button to the start of the container */\r\n    }\r\n\r\n    .button-container.is-logging-in .loading-icon {\r\n        display: inline-block;\r\n    }\r\n\r\n    .loading-icon {\r\n        display: none; /* Hide by default */\r\n        margin-left: 3rem;\r\n        margin-top: 2.3rem;\r\n        border: 0.5rem solid #181818; /* Background color */\r\n        border-top: 0.5rem solid #ff4081; /* Foreground color */\r\n        border-radius: 50%;\r\n        width: 1vw;\r\n        height: 1vw;\r\n        transform: translate(-50%, -50%); /* Adjust the position */\r\n        animation: spin 2s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% { transform: translate(-50%, -50%) rotate(0deg); }\r\n        100% { transform: translate(-50%, -50%) rotate(360deg); }\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"login-form\">\r\n    <h3 class=\"login-form-title\">Email</h3>\r\n    <input class=\"login-form-input\" bind:value={userCreds.email} type=\"email\" placeholder=\"メール\"/>\r\n\r\n    <h3 class=\"login-form-title\">Password</h3>\r\n    <input class=\"login-form-input\" bind:value={userCreds.password} type=\"password\" placeholder=\"パスワード\"/>\r\n\r\n    <div class=\"button-container {clicked ? 'is-logging-in' : ''}\">\r\n      <Button text=\"ログイン\" on:click={handleSignIn} disabled={clicked}/>\r\n      <div class=\"loading-icon\"></div>\r\n      <Error showError={showSignInError} text=\"Error signing in. Please try again later.\"/>\r\n  </div>\r\n</div>\r\n","function isTokenPresentAndValid() {\r\n    const token = localStorage.getItem('jwt_token');\r\n\r\n    if (!token) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        // Decode the JWT token without verifying to get the payload\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n\r\n        // Get the current time and compare with the exp field in the token payload\r\n        const currentTime = Date.now() / 1000;\r\n        if (payload.exp < currentTime) {\r\n\r\n        // Token has expired\r\n        return false;\r\n        }\r\n\r\n        return true;\r\n    } catch (e) {\r\n        // If there's an error decoding the token, it's not valid\r\n        return false;\r\n    }\r\n}\r\n\r\nexport {isTokenPresentAndValid}","\n<!-- src/pages/Home.svelte -->\n<script>\n    import Title from '../components/Title.svelte';\n    import Button from '../components/Button.svelte';\n    import Footer from '../components/Footer.svelte';\n    import SignIn from '../components/SignIn.svelte';\n\n    import {isTokenPresentAndValid} from '../utils/jwt';\n\n    import { onMount } from 'svelte';\n    import { navigate } from 'svelte-routing';\n    function goToPractice() {\n        navigate(\"/practice\")\n    }\n\n    let isLoggedIn = false;\n    let isSignUp = false;\n\n    onMount(() => {\n        // Ensure this code runs only in the browser\n        if (typeof window !== 'undefined') {\n            if (!isTokenPresentAndValid()) {\n                isLoggedIn = false;\n            } else {\n                isLoggedIn = true;\n            }\n        }\n    });\n\n    function handleLogOut() {\n        localStorage.clear();\n        sessionStorage.clear();\n        setTimeout(() => window.location.reload(), 750)\n    }\n</script>\n\n<style>\n    \n    .logout-container {\n        position: fixed;\n        margin-bottom: 90vh;\n        margin-left: 65%;\n    }\n\n    .title-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n        margin-bottom: 25vh;\n    }\n\n    .translation-practice-button-container {\n        position: fixed;\n        margin-left: 63vw;\n        margin-top: 35vh;\n        transform: rotate(30deg);\n    }\n\n    .kanji-practice-button-container {\n        position: fixed;\n        margin-top: 36vh;\n        margin-right: 0vw;\n        transform: rotate(-15deg);\n    }\n\n    .sentence-analysis-button-container {\n        position: fixed;\n        margin-top: 25vh;\n        margin-right: 64vw;\n        transform: rotate(10deg);\n    }\n</style>\n\n<main>\n    {#if !isLoggedIn}\n        <SignIn/>\n    {:else if isSignUp}\n        <SignIn/>\n    {:else}\n        <div class=\"logout-container\">\n            <Button style=\"logout\" on:click={handleLogOut} text=\"ログアウト\"/>\n        </div> \n        <div class=\"title-container\">\n            <Title />\n            <div class=\"translation-practice-button-container\">\n                <Button style=\"router\" on:click={goToPractice} text=\"翻訳練習\"/> \n            </div>\n            <div class=\"kanji-practice-button-container\">\n                <Button style=\"router kanji\" on:click={goToPractice} text=\"漢字\"/> \n            </div>\n            <div class=\"sentence-analysis-button-container\">\n                <Button style=\"router sentence-analysis\" on:click={goToPractice} text=\"A.Iで文の分析\"/> \n            </div>\n        </div>\n        <Footer />\n    {/if}\n</main>\n","/**\n * Returns detailed type as string (instead of just 'object' for arrays etc)\n * @private\n * @param {any} value js value\n * @returns {String} type of value\n * @example\n * typeOf({}); // 'object'\n * typeOf([]); // 'array'\n * typeOf(function() {}); // 'function'\n * typeOf(/a/); // 'regexp'\n * typeOf(new Date()); // 'date'\n * typeOf(null); // 'null'\n * typeOf(undefined); // 'undefined'\n * typeOf('a'); // 'string'\n * typeOf(1); // 'number'\n * typeOf(true); // 'boolean'\n * typeOf(new Map()); // 'map'\n * typeOf(new Set()); // 'map'\n */\nfunction typeOf(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value !== Object(value)) {\n    return typeof value;\n  }\n  return {}.toString\n    .call(value)\n    .slice(8, -1)\n    .toLowerCase();\n}\n\n/**\n * Checks if input string is empty\n * @param  {String} input text input\n * @return {Boolean} true if no input\n */\nfunction isEmpty(input) {\n  if (typeOf(input) !== 'string') {\n    return true;\n  }\n  return !input.length;\n}\n\n/**\n * Takes a character and a unicode range. Returns true if the char is in the range.\n * @param  {String}  char  unicode character\n * @param  {Number}  start unicode start range\n * @param  {Number}  end   unicode end range\n * @return {Boolean}\n */\nfunction isCharInRange(char = '', start, end) {\n  if (isEmpty(char)) return false;\n  const code = char.charCodeAt(0);\n  return start <= code && code <= end;\n}\n\nconst VERSION = '5.2.0';\n\nconst TO_KANA_METHODS = {\n  HIRAGANA: 'toHiragana',\n  KATAKANA: 'toKatakana',\n};\n\nconst ROMANIZATIONS = {\n  HEPBURN: 'hepburn',\n};\n\n/**\n * Default config for WanaKana, user passed options will be merged with these\n * @type {DefaultOptions}\n * @name defaultOptions\n * @property {Boolean} [useObsoleteKana=false] - Set to true to use obsolete characters, such as ゐ and ゑ.\n * @example\n * toHiragana('we', { useObsoleteKana: true })\n * // => 'ゑ'\n * @property {Boolean} [passRomaji=false] - Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana()\n * @example\n * toHiragana('only convert the katakana: ヒラガナ', { passRomaji: true })\n * // => \"only convert the katakana: ひらがな\"\n * @property {Object} [convertLongVowelMark=true] - Set to false to prevent conversions of 'ー' to extended vowels with toHiragana()\n * @example\n * toHiragana('ラーメン', { convertLongVowelMark: false });\n * // => 'らーめん\n * @property {Boolean} [upcaseKatakana=false] - Set to true to convert katakana to uppercase using toRomaji()\n * @example\n * toRomaji('ひらがな カタカナ', { upcaseKatakana: true })\n * // => \"hiragana KATAKANA\"\n * @property {Boolean|String} [IMEMode=false] - Set to true, 'toHiragana', or 'toKatakana' to handle conversion while it is being typed.\n * @property {String} [romanization='hepburn'] - choose toRomaji() romanization map (currently only 'hepburn')\n * @property {Object} [customKanaMapping] - custom map will be merged with default conversion\n * @example\n * toKana('wanakana', { customKanaMapping: { na: 'に', ka: 'Bana' }) };\n * // => 'わにBanaに'\n * @property {Object} [customRomajiMapping] - custom map will be merged with default conversion\n * @example\n * toRomaji('つじぎり', { customRomajiMapping: { じ: 'zi', つ: 'tu', り: 'li' }) };\n * // => 'tuzigili'\n */\nconst DEFAULT_OPTIONS = {\n  useObsoleteKana: false,\n  passRomaji: false,\n  upcaseKatakana: false,\n  IMEMode: false,\n  convertLongVowelMark: true,\n  romanization: ROMANIZATIONS.HEPBURN,\n};\nconst LATIN_UPPERCASE_START = 0x41;\nconst LATIN_UPPERCASE_END = 0x5a;\nconst LOWERCASE_ZENKAKU_START = 0xff41;\nconst LOWERCASE_ZENKAKU_END = 0xff5a;\nconst UPPERCASE_ZENKAKU_START = 0xff21;\nconst UPPERCASE_ZENKAKU_END = 0xff3a;\nconst HIRAGANA_START = 0x3041;\nconst HIRAGANA_END = 0x3096;\nconst KATAKANA_START = 0x30a1;\nconst KATAKANA_END = 0x30fc;\nconst KANJI_START = 0x4e00;\nconst KANJI_END = 0x9faf;\n\nconst KANJI_ITERATION_MARK = 0x3005; // 々\nconst PROLONGED_SOUND_MARK = 0x30fc; // ー\nconst KANA_SLASH_DOT = 0x30fb; // ・\n\nconst ZENKAKU_NUMBERS = [0xff10, 0xff19];\nconst ZENKAKU_UPPERCASE = [UPPERCASE_ZENKAKU_START, UPPERCASE_ZENKAKU_END];\nconst ZENKAKU_LOWERCASE = [LOWERCASE_ZENKAKU_START, LOWERCASE_ZENKAKU_END];\nconst ZENKAKU_PUNCTUATION_1 = [0xff01, 0xff0f];\nconst ZENKAKU_PUNCTUATION_2 = [0xff1a, 0xff1f];\nconst ZENKAKU_PUNCTUATION_3 = [0xff3b, 0xff3f];\nconst ZENKAKU_PUNCTUATION_4 = [0xff5b, 0xff60];\nconst ZENKAKU_SYMBOLS_CURRENCY = [0xffe0, 0xffee];\n\nconst HIRAGANA_CHARS = [0x3040, 0x309f];\nconst KATAKANA_CHARS = [0x30a0, 0x30ff];\nconst HANKAKU_KATAKANA = [0xff66, 0xff9f];\nconst KATAKANA_PUNCTUATION = [0x30fb, 0x30fc];\nconst KANA_PUNCTUATION = [0xff61, 0xff65];\nconst CJK_SYMBOLS_PUNCTUATION = [0x3000, 0x303f];\nconst COMMON_CJK = [0x4e00, 0x9fff];\nconst RARE_CJK = [0x3400, 0x4dbf];\n\nconst KANA_RANGES = [\n  HIRAGANA_CHARS,\n  KATAKANA_CHARS,\n  KANA_PUNCTUATION,\n  HANKAKU_KATAKANA,\n];\n\nconst JA_PUNCTUATION_RANGES = [\n  CJK_SYMBOLS_PUNCTUATION,\n  KANA_PUNCTUATION,\n  KATAKANA_PUNCTUATION,\n  ZENKAKU_PUNCTUATION_1,\n  ZENKAKU_PUNCTUATION_2,\n  ZENKAKU_PUNCTUATION_3,\n  ZENKAKU_PUNCTUATION_4,\n  ZENKAKU_SYMBOLS_CURRENCY,\n];\n\n// All Japanese unicode start and end ranges\n// Includes kanji, kana, zenkaku latin chars, punctuation, and number ranges.\nconst JAPANESE_RANGES = [\n  ...KANA_RANGES,\n  ...JA_PUNCTUATION_RANGES,\n  ZENKAKU_UPPERCASE,\n  ZENKAKU_LOWERCASE,\n  ZENKAKU_NUMBERS,\n  COMMON_CJK,\n  RARE_CJK,\n];\n\nconst MODERN_ENGLISH = [0x0000, 0x007f];\nconst HEPBURN_MACRON_RANGES = [\n  [0x0100, 0x0101], // Ā ā\n  [0x0112, 0x0113], // Ē ē\n  [0x012a, 0x012b], // Ī ī\n  [0x014c, 0x014d], // Ō ō\n  [0x016a, 0x016b], // Ū ū\n];\nconst SMART_QUOTE_RANGES = [\n  [0x2018, 0x2019], // ‘ ’\n  [0x201c, 0x201d], // “ ”\n];\n\nconst ROMAJI_RANGES = [MODERN_ENGLISH, ...HEPBURN_MACRON_RANGES];\n\nconst EN_PUNCTUATION_RANGES = [\n  [0x20, 0x2f],\n  [0x3a, 0x3f],\n  [0x5b, 0x60],\n  [0x7b, 0x7e],\n  ...SMART_QUOTE_RANGES,\n];\n\n/**\n * Tests a character. Returns true if the character is [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanese(char = '') {\n  return JAPANESE_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\n/**\n * Test if `input` only includes [Kanji](https://en.wikipedia.org/wiki/Kanji), [Kana](https://en.wikipedia.org/wiki/Kana), zenkaku numbers, and JA punctuation/symbols.”\n * @param  {String} [input=''] text\n * @param  {Regexp} [allowed] additional test allowed to pass for each char\n * @return {Boolean} true if passes checks\n * @example\n * isJapanese('泣き虫')\n * // => true\n * isJapanese('あア')\n * // => true\n * isJapanese('２月') // Zenkaku numbers allowed\n * // => true\n * isJapanese('泣き虫。！〜＄') // Zenkaku/JA punctuation\n * // => true\n * isJapanese('泣き虫.!~$') // Latin punctuation fails\n * // => false\n * isJapanese('A泣き虫')\n * // => false\n * isJapanese('≪偽括弧≫', /[≪≫]/);\n * // => true\n */\nfunction isJapanese(input = '', allowed) {\n  const augmented = typeOf(allowed) === 'regexp';\n  return isEmpty(input)\n    ? false\n    : [...input].every((char) => {\n      const isJa = isCharJapanese(char);\n      return !augmented ? isJa : isJa || allowed.test(char);\n    });\n}\n\nvar safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nvar has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nfunction dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n\n/**\n * Easy re-use of merging with default options\n * @param {Object} opts user options\n * @returns user options merged over default options\n */\nconst mergeWithDefaultOptions = (opts = {}) => Object.assign({}, DEFAULT_OPTIONS, opts);\n\nfunction applyMapping(string, mapping, convertEnding) {\n  const root = mapping;\n\n  function nextSubtree(tree, nextChar) {\n    const subtree = tree[nextChar];\n    if (subtree === undefined) {\n      return undefined;\n    }\n    // if the next child node does not have a node value, set its node value to the input\n    return Object.assign({ '': tree[''] + nextChar }, tree[nextChar]);\n  }\n\n  function newChunk(remaining, currentCursor) {\n    // start parsing a new chunk\n    const firstChar = remaining.charAt(0);\n\n    return parse(\n      Object.assign({ '': firstChar }, root[firstChar]),\n      remaining.slice(1),\n      currentCursor,\n      currentCursor + 1\n    );\n  }\n\n  function parse(tree, remaining, lastCursor, currentCursor) {\n    if (!remaining) {\n      if (convertEnding || Object.keys(tree).length === 1) {\n        // nothing more to consume, just commit the last chunk and return it\n        // so as to not have an empty element at the end of the result\n        return tree[''] ? [[lastCursor, currentCursor, tree['']]] : [];\n      }\n      // if we don't want to convert the ending, because there are still possible continuations\n      // return null as the final node value\n      return [[lastCursor, currentCursor, null]];\n    }\n\n    if (Object.keys(tree).length === 1) {\n      return [[lastCursor, currentCursor, tree['']]].concat(\n        newChunk(remaining, currentCursor)\n      );\n    }\n\n    const subtree = nextSubtree(tree, remaining.charAt(0));\n\n    if (subtree === undefined) {\n      return [[lastCursor, currentCursor, tree['']]].concat(\n        newChunk(remaining, currentCursor)\n      );\n    }\n    // continue current branch\n    return parse(subtree, remaining.slice(1), lastCursor, currentCursor + 1);\n  }\n\n  return newChunk(string, 0);\n}\n\n// transform the tree, so that for example hepburnTree['ゔ']['ぁ'][''] === 'va'\n// or kanaTree['k']['y']['a'][''] === 'きゃ'\nfunction transform(tree) {\n  return Object.entries(tree).reduce((map, [char, subtree]) => {\n    const endOfBranch = typeOf(subtree) === 'string';\n    // eslint-disable-next-line no-param-reassign\n    map[char] = endOfBranch ? { '': subtree } : transform(subtree);\n    return map;\n  }, {});\n}\n\nfunction getSubTreeOf(tree, string) {\n  return string.split('').reduce((correctSubTree, char) => {\n    if (correctSubTree[char] === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      correctSubTree[char] = {};\n    }\n    return correctSubTree[char];\n  }, tree);\n}\n\n/**\n * Creates a custom mapping tree, returns a function that accepts a defaultMap which the newly created customMapping will be merged with and returned\n * (customMap) => (defaultMap) => mergedMap\n * @param  {Object} customMap { 'ka' : 'な' }\n * @return {Function} (defaultMap) => defaultMergedWithCustomMap\n * @example\n * const sillyMap = createCustomMapping({ 'ちゃ': 'time', '茎': 'cookie'　});\n * // sillyMap is passed defaultMapping to merge with when called in toRomaji()\n * toRomaji(\"It's 茎 ちゃ よ\", { customRomajiMapping: sillyMap });\n * // => 'It's cookie time yo';\n */\nfunction createCustomMapping(customMap = {}) {\n  const customTree = {};\n\n  if (typeOf(customMap) === 'object') {\n    Object.entries(customMap).forEach(([roma, kana]) => {\n      let subTree = customTree;\n      roma.split('').forEach((char) => {\n        if (subTree[char] === undefined) {\n          subTree[char] = {};\n        }\n        subTree = subTree[char];\n      });\n      subTree[''] = kana;\n    });\n  }\n\n  return function makeMap(map) {\n    const mapCopy = JSON.parse(JSON.stringify(map));\n\n    function transformMap(mapSubtree, customSubtree) {\n      if (mapSubtree === undefined || typeOf(mapSubtree) === 'string') {\n        return customSubtree;\n      }\n      return Object.entries(customSubtree).reduce(\n        (newSubtree, [char, subtree]) => {\n          // eslint-disable-next-line no-param-reassign\n          newSubtree[char] = transformMap(mapSubtree[char], subtree);\n          return newSubtree;\n        },\n        mapSubtree\n      );\n    }\n\n    return transformMap(mapCopy, customTree);\n  };\n}\n\n// allow consumer to pass either function or object as customMapping\nfunction mergeCustomMapping(map, customMapping) {\n  if (!customMapping) {\n    return map;\n  }\n  return typeOf(customMapping) === 'function'\n    ? customMapping(map)\n    : createCustomMapping(customMapping)(map);\n}\n\n// NOTE: not exactly kunrei shiki, for example ぢゃ -> dya instead of zya, to avoid name clashing\n/* eslint-disable */\n// prettier-ignore\nconst BASIC_KUNREI = {\n  a: 'あ', i: 'い', u: 'う', e: 'え', o: 'お',\n  k: { a: 'か', i: 'き', u: 'く', e: 'け', o: 'こ', },\n  s: { a: 'さ', i: 'し', u: 'す', e: 'せ', o: 'そ', },\n  t: { a: 'た', i: 'ち', u: 'つ', e: 'て', o: 'と', },\n  n: { a: 'な', i: 'に', u: 'ぬ', e: 'ね', o: 'の', },\n  h: { a: 'は', i: 'ひ', u: 'ふ', e: 'へ', o: 'ほ', },\n  m: { a: 'ま', i: 'み', u: 'む', e: 'め', o: 'も', },\n  y: { a: 'や', u: 'ゆ', o: 'よ' },\n  r: { a: 'ら', i: 'り', u: 'る', e: 'れ', o: 'ろ', },\n  w: { a: 'わ', i: 'ゐ', e: 'ゑ', o: 'を', },\n  g: { a: 'が', i: 'ぎ', u: 'ぐ', e: 'げ', o: 'ご', },\n  z: { a: 'ざ', i: 'じ', u: 'ず', e: 'ぜ', o: 'ぞ', },\n  d: { a: 'だ', i: 'ぢ', u: 'づ', e: 'で', o: 'ど', },\n  b: { a: 'ば', i: 'び', u: 'ぶ', e: 'べ', o: 'ぼ', },\n  p: { a: 'ぱ', i: 'ぴ', u: 'ぷ', e: 'ぺ', o: 'ぽ', },\n  v: { a: 'ゔぁ', i: 'ゔぃ', u: 'ゔ', e: 'ゔぇ', o: 'ゔぉ', },\n};\n\nconst SPECIAL_SYMBOLS$1 = {\n  '.': '。',\n  ',': '、',\n  ':': '：',\n  '/': '・',\n  '!': '！',\n  '?': '？',\n  '~': '〜',\n  '-': 'ー',\n  '‘': '「',\n  '’': '」',\n  '“': '『',\n  '”': '』',\n  '[': '［',\n  ']': '］',\n  '(': '（',\n  ')': '）',\n  '{': '｛',\n  '}': '｝',\n};\n\nconst CONSONANTS = {\n  k: 'き',\n  s: 'し',\n  t: 'ち',\n  n: 'に',\n  h: 'ひ',\n  m: 'み',\n  r: 'り',\n  g: 'ぎ',\n  z: 'じ',\n  d: 'ぢ',\n  b: 'び',\n  p: 'ぴ',\n  v: 'ゔ',\n  q: 'く',\n  f: 'ふ',\n};\nconst SMALL_Y$1 = { ya: 'ゃ', yi: 'ぃ', yu: 'ゅ', ye: 'ぇ', yo: 'ょ' };\nconst SMALL_VOWELS = { a: 'ぁ', i: 'ぃ', u: 'ぅ', e: 'ぇ', o: 'ぉ' };\n\n// typing one should be the same as having typed the other instead\nconst ALIASES = {\n  sh: 'sy', // sha -> sya\n  ch: 'ty', // cho -> tyo\n  cy: 'ty', // cyo -> tyo\n  chy: 'ty', // chyu -> tyu\n  shy: 'sy', // shya -> sya\n  j: 'zy', // ja -> zya\n  jy: 'zy', // jye -> zye\n\n  // exceptions to above rules\n  shi: 'si',\n  chi: 'ti',\n  tsu: 'tu',\n  ji: 'zi',\n  fu: 'hu',\n};\n\n// xtu -> っ\nconst SMALL_LETTERS = Object.assign(\n  {\n    tu: 'っ',\n    wa: 'ゎ',\n    ka: 'ヵ',\n    ke: 'ヶ',\n  },\n  SMALL_VOWELS,\n  SMALL_Y$1\n);\n\n// don't follow any notable patterns\nconst SPECIAL_CASES = {\n  yi: 'い',\n  wu: 'う',\n  ye: 'いぇ',\n  wi: 'うぃ',\n  we: 'うぇ',\n  kwa: 'くぁ',\n  whu: 'う',\n  // because it's not thya for てゃ but tha\n  // and tha is not てぁ, but てゃ\n  tha: 'てゃ',\n  thu: 'てゅ',\n  tho: 'てょ',\n  dha: 'でゃ',\n  dhu: 'でゅ',\n  dho: 'でょ',\n};\n\nconst AIUEO_CONSTRUCTIONS = {\n  wh: 'う',\n  kw: 'く',\n  qw: 'く',\n  q: 'く',\n  gw: 'ぐ',\n  sw: 'す',\n  ts: 'つ',\n  th: 'て',\n  tw: 'と',\n  dh: 'で',\n  dw: 'ど',\n  fw: 'ふ',\n  f: 'ふ',\n};\n\n/* eslint-enable */\nfunction createRomajiToKanaMap$1() {\n  const kanaTree = transform(BASIC_KUNREI);\n  // pseudo partial application\n  const subtreeOf = (string) => getSubTreeOf(kanaTree, string);\n\n  // add tya, sya, etc.\n  Object.entries(CONSONANTS).forEach(([consonant, yKana]) => {\n    Object.entries(SMALL_Y$1).forEach(([roma, kana]) => {\n      // for example kyo -> き + ょ\n      subtreeOf(consonant + roma)[''] = yKana + kana;\n    });\n  });\n\n  Object.entries(SPECIAL_SYMBOLS$1).forEach(([symbol, jsymbol]) => {\n    subtreeOf(symbol)[''] = jsymbol;\n  });\n\n  // things like うぃ, くぃ, etc.\n  Object.entries(AIUEO_CONSTRUCTIONS).forEach(([consonant, aiueoKana]) => {\n    Object.entries(SMALL_VOWELS).forEach(([vowel, kana]) => {\n      const subtree = subtreeOf(consonant + vowel);\n      subtree[''] = aiueoKana + kana;\n    });\n  });\n\n  // different ways to write ん\n  ['n', \"n'\", 'xn'].forEach((nChar) => {\n    subtreeOf(nChar)[''] = 'ん';\n  });\n\n  // c is equivalent to k, but not for chi, cha, etc. that's why we have to make a copy of k\n  kanaTree.c = JSON.parse(JSON.stringify(kanaTree.k));\n\n  Object.entries(ALIASES).forEach(([string, alternative]) => {\n    const allExceptLast = string.slice(0, string.length - 1);\n    const last = string.charAt(string.length - 1);\n    const parentTree = subtreeOf(allExceptLast);\n    // copy to avoid recursive containment\n    parentTree[last] = JSON.parse(JSON.stringify(subtreeOf(alternative)));\n  });\n\n  function getAlternatives(string) {\n    return [...Object.entries(ALIASES), ...[['c', 'k']]].reduce(\n      (list, [alt, roma]) => (string.startsWith(roma) ? list.concat(string.replace(roma, alt)) : list),\n      []\n    );\n  }\n\n  Object.entries(SMALL_LETTERS).forEach(([kunreiRoma, kana]) => {\n    const last = (char) => char.charAt(char.length - 1);\n    const allExceptLast = (chars) => chars.slice(0, chars.length - 1);\n    const xRoma = `x${kunreiRoma}`;\n    const xSubtree = subtreeOf(xRoma);\n    xSubtree[''] = kana;\n\n    // ltu -> xtu -> っ\n    const parentTree = subtreeOf(`l${allExceptLast(kunreiRoma)}`);\n    parentTree[last(kunreiRoma)] = xSubtree;\n\n    // ltsu -> ltu -> っ\n    getAlternatives(kunreiRoma).forEach((altRoma) => {\n      ['l', 'x'].forEach((prefix) => {\n        const altParentTree = subtreeOf(prefix + allExceptLast(altRoma));\n        altParentTree[last(altRoma)] = subtreeOf(prefix + kunreiRoma);\n      });\n    });\n  });\n\n  Object.entries(SPECIAL_CASES).forEach(([string, kana]) => {\n    subtreeOf(string)[''] = kana;\n  });\n\n  // add kka, tta, etc.\n  function addTsu(tree) {\n    return Object.entries(tree).reduce((tsuTree, [key, value]) => {\n      if (!key) {\n        // we have reached the bottom of this branch\n        // eslint-disable-next-line no-param-reassign\n        tsuTree[key] = `っ${value}`;\n      } else {\n        // more subtrees\n        // eslint-disable-next-line no-param-reassign\n        tsuTree[key] = addTsu(value);\n      }\n      return tsuTree;\n    }, {});\n  }\n  // have to explicitly name c here, because we made it a copy of k, not a reference\n  [...Object.keys(CONSONANTS), 'c', 'y', 'w', 'j'].forEach((consonant) => {\n    const subtree = kanaTree[consonant];\n    subtree[consonant] = addTsu(subtree);\n  });\n  // nn should not be っん\n  delete kanaTree.n.n;\n  // solidify the results, so that there there is referential transparency within the tree\n  return Object.freeze(JSON.parse(JSON.stringify(kanaTree)));\n}\n\nlet romajiToKanaMap = null;\n\nfunction getRomajiToKanaTree() {\n  if (romajiToKanaMap == null) {\n    romajiToKanaMap = createRomajiToKanaMap$1();\n  }\n  return romajiToKanaMap;\n}\n\nconst USE_OBSOLETE_KANA_MAP = createCustomMapping({\n  wi: 'ゐ',\n  we: 'ゑ',\n});\n\nfunction IME_MODE_MAP(map) {\n  // in IME mode, we do not want to convert single ns\n  const mapCopy = JSON.parse(JSON.stringify(map));\n  mapCopy.n.n = { '': 'ん' };\n  mapCopy.n[' '] = { '': 'ん' };\n  return mapCopy;\n}\n\n/**\n * Tests if char is in English unicode uppercase range\n * @param  {String} char\n * @return {Boolean}\n */\nfunction isCharUpperCase(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharInRange(char, LATIN_UPPERCASE_START, LATIN_UPPERCASE_END);\n}\n\n/**\n * Returns true if char is 'ー'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharLongDash(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === PROLONGED_SOUND_MARK;\n}\n\n/**\n * Tests if char is '・'\n * @param  {String} char\n * @return {Boolean} true if '・'\n */\nfunction isCharSlashDot(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === KANA_SLASH_DOT;\n}\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharHiragana(char = '') {\n  if (isEmpty(char)) return false;\n  if (isCharLongDash(char)) return true;\n  return isCharInRange(char, HIRAGANA_START, HIRAGANA_END);\n}\n\n/**\n * Convert [Hiragana](https://en.wikipedia.org/wiki/Hiragana) to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * Passes through any non-hiragana chars\n * @private\n * @param  {String} [input=''] text input\n * @return {String} converted text\n * @example\n * hiraganaToKatakana('ひらがな')\n * // => \"ヒラガナ\"\n * hiraganaToKatakana('ひらがな is a type of kana')\n * // => \"ヒラガナ is a type of kana\"\n */\nfunction hiraganaToKatakana(input = '') {\n  const kata = [];\n  input.split('').forEach((char) => {\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (isCharLongDash(char) || isCharSlashDot(char)) {\n      kata.push(char);\n    } else if (isCharHiragana(char)) {\n      // Shift charcode.\n      const code = char.charCodeAt(0) + (KATAKANA_START - HIRAGANA_START);\n      const kataChar = String.fromCharCode(code);\n      kata.push(kataChar);\n    } else {\n      // Pass non-hiragana chars through\n      kata.push(char);\n    }\n  });\n  return kata.join('');\n}\n\n// memoize and deeply compare args so we only recreate when necessary\nconst createRomajiToKanaMap = memoizeOne(\n  (IMEMode, useObsoleteKana, customKanaMapping) => {\n    let map = getRomajiToKanaTree();\n\n    map = IMEMode ? IME_MODE_MAP(map) : map;\n    map = useObsoleteKana ? USE_OBSOLETE_KANA_MAP(map) : map;\n\n    if (customKanaMapping) {\n      map = mergeCustomMapping(map, customKanaMapping);\n    }\n\n    return map;\n  },\n  dequal\n);\n\n/**\n * Convert [Romaji](https://en.wikipedia.org/wiki/Romaji) to [Kana](https://en.wikipedia.org/wiki/Kana), lowercase text will result in [Hiragana](https://en.wikipedia.org/wiki/Hiragana) and uppercase text will result in [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @return {String} converted text\n * @example\n * toKana('onaji BUTTSUUJI')\n * // => 'おなじ ブッツウジ'\n * toKana('ONAJI buttsuuji')\n * // => 'オナジ ぶっつうじ'\n * toKana('座禅‘zazen’スタイル')\n * // => '座禅「ざぜん」スタイル'\n * toKana('batsuge-mu')\n * // => 'ばつげーむ'\n * toKana('!?.:/,~-‘’“”[](){}') // Punctuation conversion\n * // => '！？。：・、〜ー「」『』［］（）｛｝'\n * toKana('we', { useObsoleteKana: true })\n * // => 'ゑ'\n * toKana('wanakana', { customKanaMapping: { na: 'に', ka: 'bana' } });\n * // => 'わにbanaに'\n */\nfunction toKana(input = '', options = {}, map) {\n  let config;\n  if (!map) {\n    config = mergeWithDefaultOptions(options);\n    map = createRomajiToKanaMap(\n      config.IMEMode,\n      config.useObsoleteKana,\n      config.customKanaMapping\n    );\n  } else {\n    config = options;\n  }\n\n  // throw away the substring index information and just concatenate all the kana\n  return splitIntoConvertedKana(input, config, map)\n    .map((kanaToken) => {\n      const [start, end, kana] = kanaToken;\n      if (kana === null) {\n        // haven't converted the end of the string, since we are in IME mode\n        return input.slice(start);\n      }\n      const enforceHiragana = config.IMEMode === TO_KANA_METHODS.HIRAGANA;\n      const enforceKatakana = config.IMEMode === TO_KANA_METHODS.KATAKANA\n        || [...input.slice(start, end)].every(isCharUpperCase);\n\n      return enforceHiragana || !enforceKatakana\n        ? kana\n        : hiraganaToKatakana(kana);\n    })\n    .join('');\n}\n\n/**\n *\n * @private\n * @param {String} [input=''] input text\n * @param {DefaultOptions} [options=defaultOptions] toKana options\n * @param {Object} [map] custom mapping\n * @returns {Array[]} [[start, end, token]]\n * @example\n * splitIntoConvertedKana('buttsuuji')\n * // => [[0, 2, 'ぶ'], [2, 6, 'っつ'], [6, 7, 'う'], [7, 9, 'じ']]\n */\nfunction splitIntoConvertedKana(input = '', options = {}, map) {\n  const { IMEMode, useObsoleteKana, customKanaMapping } = options;\n\n  if (!map) {\n    map = createRomajiToKanaMap(IMEMode, useObsoleteKana, customKanaMapping);\n  }\n\n  return applyMapping(input.toLowerCase(), map, !IMEMode);\n}\n\nlet LISTENERS = [];\n/**\n * Automagically replaces input values with converted text to kana\n * @param  {defaultOptions} [options] user config overrides, default conversion is toKana()\n * @return {Function} event handler with bound options\n * @private\n */\nfunction makeOnInput(options) {\n  let prevInput;\n\n  // Enforce IMEMode if not already specified\n  const mergedConfig = Object.assign({}, mergeWithDefaultOptions(options), {\n    IMEMode: options.IMEMode || true,\n  });\n\n  const preConfiguredMap = createRomajiToKanaMap(\n    mergedConfig.IMEMode,\n    mergedConfig.useObsoleteKana,\n    mergedConfig.customKanaMapping\n  );\n\n  const triggers = [\n    ...Object.keys(preConfiguredMap),\n    ...Object.keys(preConfiguredMap).map((char) => char.toUpperCase()),\n  ];\n\n  return function onInput({ target }) {\n    if (\n      target.value !== prevInput\n      && target.dataset.ignoreComposition !== 'true'\n    ) {\n      convertInput(target, mergedConfig, preConfiguredMap, triggers);\n    }\n  };\n}\n\nfunction convertInput(target, options, map, triggers, prevInput) {\n  const [head, textToConvert, tail] = splitInput(\n    target.value,\n    target.selectionEnd,\n    triggers\n  );\n  const convertedText = toKana(textToConvert, options, map);\n  const changed = textToConvert !== convertedText;\n\n  if (changed) {\n    const newCursor = head.length + convertedText.length;\n    const newValue = head + convertedText + tail;\n    // eslint-disable-next-line no-param-reassign\n    target.value = newValue;\n\n    if (tail.length) {\n      // push later on event loop (otherwise mid-text insertion can be 1 char too far to the right)\n      setTimeout(() => target.setSelectionRange(newCursor, newCursor), 1);\n    } else {\n      target.setSelectionRange(newCursor, newCursor);\n    }\n  }\n}\n\nfunction onComposition({ type, target, data }) {\n  // navigator.platform is not 100% reliable for singling out all OS,\n  // but for determining desktop \"Mac OS\" it is effective enough.\n  const isMacOS = /Mac/.test(window.navigator && window.navigator.platform);\n  // We don't want to ignore on Android:\n  // https://github.com/WaniKani/WanaKana/issues/82\n  // But MacOS IME auto-closes if we don't ignore:\n  // https://github.com/WaniKani/WanaKana/issues/71\n  // Other platform Japanese IMEs pass through happily\n  if (isMacOS) {\n    if (type === 'compositionupdate' && isJapanese(data)) {\n      // eslint-disable-next-line no-param-reassign\n      target.dataset.ignoreComposition = 'true';\n    }\n\n    if (type === 'compositionend') {\n      // eslint-disable-next-line no-param-reassign\n      target.dataset.ignoreComposition = 'false';\n    }\n  }\n}\n\nfunction trackListeners(id, inputHandler, compositionHandler) {\n  LISTENERS = LISTENERS.concat({\n    id,\n    inputHandler,\n    compositionHandler,\n  });\n}\n\nfunction untrackListeners({ id: targetId }) {\n  LISTENERS = LISTENERS.filter(({ id }) => id !== targetId);\n}\n\nfunction findListeners(el) {\n  return (\n    el && LISTENERS.find(({ id }) => id === el.getAttribute('data-wanakana-id'))\n  );\n}\n\n// Handle non-terminal inserted input conversion:\n// | -> わ| -> わび| -> わ|び -> わs|び -> わsh|び -> わshi|び -> わし|び\n// or multiple ambiguous positioning (to select which \"s\" to work from)\n// こsこs|こsこ -> こsこso|こsこ -> こsこそ|こsこ\nfunction splitInput(text = '', cursor = 0, triggers = []) {\n  let head;\n  let toConvert;\n  let tail;\n\n  if (cursor === 0 && triggers.includes(text[0])) {\n    [head, toConvert, tail] = workFromStart(text, triggers);\n  } else if (cursor > 0) {\n    [head, toConvert, tail] = workBackwards(text, cursor);\n  } else {\n    [head, toConvert] = takeWhileAndSlice(\n      text,\n      (char) => !triggers.includes(char)\n    );\n    [toConvert, tail] = takeWhileAndSlice(\n      toConvert,\n      (char) => !isJapanese(char)\n    );\n  }\n\n  return [head, toConvert, tail];\n}\n\nfunction workFromStart(text, catalystChars) {\n  return [\n    '',\n    ...takeWhileAndSlice(\n      text,\n      (char) => catalystChars.includes(char) || !isJapanese(char, /[0-9]/)\n    ),\n  ];\n}\n\nfunction workBackwards(text = '', startIndex = 0) {\n  const [toConvert, head] = takeWhileAndSlice(\n    [...text.slice(0, startIndex)].reverse(),\n    (char) => !isJapanese(char)\n  );\n  return [\n    head.reverse().join(''),\n    toConvert\n      .split('')\n      .reverse()\n      .join(''),\n    text.slice(startIndex),\n  ];\n}\n\nfunction takeWhileAndSlice(source = {}, predicate = (x) => !!x) {\n  const result = [];\n  const { length } = source;\n  let i = 0;\n  while (i < length && predicate(source[i], i)) {\n    result.push(source[i]);\n    i += 1;\n  }\n  return [result.join(''), source.slice(i)];\n}\n\n/* eslint-disable no-console */\nconst onInput = ({ target: { value, selectionStart, selectionEnd } }) => console.log('input:', { value, selectionStart, selectionEnd });\nconst onCompositionStart = () => console.log('compositionstart');\nconst onCompositionUpdate = ({\n  target: { value, selectionStart, selectionEnd },\n  data,\n}) => console.log('compositionupdate', {\n  data,\n  value,\n  selectionStart,\n  selectionEnd,\n});\nconst onCompositionEnd = () => console.log('compositionend');\n\nconst events = {\n  input: onInput,\n  compositionstart: onCompositionStart,\n  compositionupdate: onCompositionUpdate,\n  compositionend: onCompositionEnd,\n};\n\nconst addDebugListeners = (input) => {\n  Object.entries(events).forEach(([event, handler]) => input.addEventListener(event, handler)\n  );\n};\n\nconst removeDebugListeners = (input) => {\n  Object.entries(events).forEach(([event, handler]) => input.removeEventListener(event, handler)\n  );\n};\n\nconst ELEMENTS = ['TEXTAREA', 'INPUT'];\n\nlet idCounter = 0;\nconst newId = () => {\n  idCounter += 1;\n  return `${Date.now()}${idCounter}`;\n};\n\n/**\n * Binds eventListener for 'input' events to an input field to automagically replace values with kana\n * Can pass `{ IMEMode: 'toHiragana' || 'toKatakana' }` to enforce kana conversion type\n * @param  {HTMLElement} element textarea, input[type=\"text\"] etc\n * @param  {DefaultOptions} [options=defaultOptions] defaults to { IMEMode: true } using `toKana`\n * @example\n * bind(document.querySelector('#myInput'));\n */\nfunction bind(element = {}, options = {}, debug = false) {\n  if (!ELEMENTS.includes(element.nodeName)) {\n    throw new Error(\n      `Element provided to Wanakana bind() was not a valid input or textarea element.\\n Received: (${JSON.stringify(\n        element\n      )})`\n    );\n  }\n  if (element.hasAttribute('data-wanakana-id')) {\n    return;\n  }\n  const onInput = makeOnInput(options);\n  const id = newId();\n  const attributes = [\n    { name: 'data-wanakana-id', value: id },\n    { name: 'lang', value: 'ja' },\n    { name: 'autoCapitalize', value: 'none' },\n    { name: 'autoCorrect', value: 'off' },\n    { name: 'autoComplete', value: 'off' },\n    { name: 'spellCheck', value: 'false' },\n  ];\n  const previousAttributes = {};\n  attributes.forEach((attribute) => {\n    previousAttributes[attribute.name] = element.getAttribute(attribute.name);\n    element.setAttribute(attribute.name, attribute.value);\n  });\n  element.dataset.previousAttributes = JSON.stringify(previousAttributes);\n  element.addEventListener('input', onInput);\n  element.addEventListener('compositionupdate', onComposition);\n  element.addEventListener('compositionend', onComposition);\n  trackListeners(id, onInput, onComposition);\n  if (debug === true) {\n    addDebugListeners(element);\n  }\n}\n\n/**\n * Unbinds eventListener from input field\n * @param  {HTMLElement} element textarea, input\n */\nfunction unbind(element, debug = false) {\n  const listeners = findListeners(element);\n  if (listeners == null) {\n    throw new Error(\n      `Element provided to Wanakana unbind() had no listener registered.\\n Received: ${JSON.stringify(\n        element\n      )}`\n    );\n  }\n  const { inputHandler, compositionHandler } = listeners;\n  const attributes = JSON.parse(element.dataset.previousAttributes);\n  Object.keys(attributes).forEach((key) => {\n    if (attributes[key]) {\n      element.setAttribute(key, attributes[key]);\n    } else {\n      element.removeAttribute(key);\n    }\n  });\n  element.removeAttribute('data-previous-attributes');\n  element.removeAttribute('data-ignore-composition');\n  element.removeEventListener('input', inputHandler);\n  element.removeEventListener('compositionstart', compositionHandler);\n  element.removeEventListener('compositionupdate', compositionHandler);\n  element.removeEventListener('compositionend', compositionHandler);\n  untrackListeners(listeners);\n  if (debug === true) {\n    removeDebugListeners(element);\n  }\n}\n\n/**\n * Tests a character. Returns true if the character is [Romaji](https://en.wikipedia.org/wiki/Romaji) (allowing [Hepburn romanisation](https://en.wikipedia.org/wiki/Hepburn_romanization))\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharRomaji(char = '') {\n  if (isEmpty(char)) return false;\n  return ROMAJI_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\n/**\n * Test if `input` is [Romaji](https://en.wikipedia.org/wiki/Romaji) (allowing [Hepburn romanisation](https://en.wikipedia.org/wiki/Hepburn_romanization))\n * @param  {String} [input=''] text\n * @param  {Regexp} [allowed] additional test allowed to pass for each char\n * @return {Boolean} true if [Romaji](https://en.wikipedia.org/wiki/Romaji)\n * @example\n * isRomaji('Tōkyō and Ōsaka')\n * // => true\n * isRomaji('12a*b&c-d')\n * // => true\n * isRomaji('あアA')\n * // => false\n * isRomaji('お願い')\n * // => false\n * isRomaji('a！b&cーd') // Zenkaku punctuation fails\n * // => false\n * isRomaji('a！b&cーd', /[！ー]/)\n * // => true\n */\nfunction isRomaji(input = '', allowed) {\n  const augmented = typeOf(allowed) === 'regexp';\n  return isEmpty(input)\n    ? false\n    : [...input].every((char) => {\n      const isRoma = isCharRomaji(char);\n      return !augmented ? isRoma : isRoma || allowed.test(char);\n    });\n}\n\n/**\n * Tests a character. Returns true if the character is [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKatakana(char = '') {\n  return isCharInRange(char, KATAKANA_START, KATAKANA_END);\n}\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana) or [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKana(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharHiragana(char) || isCharKatakana(char);\n}\n\n/**\n * Test if `input` is [Kana](https://en.wikipedia.org/wiki/Kana) ([Katakana](https://en.wikipedia.org/wiki/Katakana) and/or [Hiragana](https://en.wikipedia.org/wiki/Hiragana))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kana](https://en.wikipedia.org/wiki/Kana)\n * @example\n * isKana('あ')\n * // => true\n * isKana('ア')\n * // => true\n * isKana('あーア')\n * // => true\n * isKana('A')\n * // => false\n * isKana('あAア')\n * // => false\n */\nfunction isKana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKana);\n}\n\n/**\n * Test if `input` is [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @example\n * isHiragana('げーむ')\n * // => true\n * isHiragana('A')\n * // => false\n * isHiragana('あア')\n * // => false\n */\nfunction isHiragana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharHiragana);\n}\n\n/**\n * Test if `input` is [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @example\n * isKatakana('ゲーム')\n * // => true\n * isKatakana('あ')\n * // => false\n * isKatakana('A')\n * // => false\n * isKatakana('あア')\n * // => false\n */\nfunction isKatakana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKatakana);\n}\n\n/**\n * Returns true if char is '々'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharIterationMark(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === KANJI_ITERATION_MARK;\n}\n\n/**\n * Tests a character. Returns true if the character is a CJK ideograph (kanji).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKanji(char = '') {\n  return isCharInRange(char, KANJI_START, KANJI_END) || isCharIterationMark(char);\n}\n\n/**\n * Tests if `input` is [Kanji](https://en.wikipedia.org/wiki/Kanji) ([Japanese CJK ideographs](https://en.wikipedia.org/wiki/CJK_Unified_Ideographs))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @example\n * isKanji('刀')\n * // => true\n * isKanji('切腹')\n * // => true\n * isKanji('勢い')\n * // => false\n * isKanji('あAア')\n * // => false\n * isKanji('🐸')\n * // => false\n */\nfunction isKanji(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKanji);\n}\n\n/**\n * Test if `input` contains a mix of [Romaji](https://en.wikipedia.org/wiki/Romaji) *and* [Kana](https://en.wikipedia.org/wiki/Kana), defaults to pass through [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @param  {String} input text\n * @param  {Object} [options={ passKanji: true }] optional config to pass through kanji\n * @return {Boolean} true if mixed\n * @example\n * isMixed('Abあア'))\n * // => true\n * isMixed('お腹A')) // ignores kanji by default\n * // => true\n * isMixed('お腹A', { passKanji: false }))\n * // => false\n * isMixed('ab'))\n * // => false\n * isMixed('あア'))\n * // => false\n */\nfunction isMixed(input = '', options = { passKanji: true }) {\n  const chars = [...input];\n  let hasKanji = false;\n  if (!options.passKanji) {\n    hasKanji = chars.some(isKanji);\n  }\n  return (chars.some(isHiragana) || chars.some(isKatakana)) && chars.some(isRomaji) && !hasKanji;\n}\n\nconst isCharInitialLongDash = (char, index) => isCharLongDash(char) && index < 1;\nconst isCharInnerLongDash = (char, index) => isCharLongDash(char) && index > 0;\nconst isKanaAsSymbol = (char) => ['ヶ', 'ヵ'].includes(char);\nconst LONG_VOWELS = {\n  a: 'あ',\n  i: 'い',\n  u: 'う',\n  e: 'え',\n  o: 'う',\n};\n\n// inject toRomaji to avoid circular dependency between toRomaji <-> katakanaToHiragana\nfunction katakanaToHiragana(\n  input = '',\n  toRomaji,\n  { isDestinationRomaji, convertLongVowelMark } = {}\n) {\n  let previousKana = '';\n\n  return input\n    .split('')\n    .reduce((hira, char, index) => {\n      // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n      if (\n        isCharSlashDot(char)\n        || isCharInitialLongDash(char, index)\n        || isKanaAsSymbol(char)\n      ) {\n        return hira.concat(char);\n      }\n\n      // Transform long vowels: 'オー' to 'おう'\n      if (\n        convertLongVowelMark\n        && previousKana\n        && isCharInnerLongDash(char, index)\n      ) {\n        // Transform previousKana back to romaji, and slice off the vowel\n        const romaji = toRomaji(previousKana).slice(-1);\n        // However, ensure 'オー' => 'おお' => 'oo' if this is a transform on the way to romaji\n        if (\n          isCharKatakana(input[index - 1])\n          && romaji === 'o'\n          && isDestinationRomaji\n        ) {\n          return hira.concat('お');\n        }\n        return hira.concat(LONG_VOWELS[romaji]);\n        // Transform all other chars\n      }\n\n      if (!isCharLongDash(char) && isCharKatakana(char)) {\n        const code = char.charCodeAt(0) + (HIRAGANA_START - KATAKANA_START);\n        const hiraChar = String.fromCharCode(code);\n        previousKana = hiraChar;\n        return hira.concat(hiraChar);\n      }\n\n      // Pass non katakana chars through\n      previousKana = '';\n      return hira.concat(char);\n    }, [])\n    .join('');\n}\n\nlet kanaToHepburnMap = null;\n\n/* eslint-disable */\n// prettier-ignore\nconst BASIC_ROMAJI = {\n  あ:'a',    い:'i',   う:'u',   え:'e',    お:'o',\n  か:'ka',   き:'ki',  く:'ku',  け:'ke',   こ:'ko',\n  さ:'sa',   し:'shi', す:'su',  せ:'se',   そ:'so',\n  た:'ta',   ち:'chi', つ:'tsu', て:'te',   と:'to',\n  な:'na',   に:'ni',  ぬ:'nu',  ね:'ne',   の:'no',\n  は:'ha',   ひ:'hi',  ふ:'fu',  へ:'he',   ほ:'ho',\n  ま:'ma',   み:'mi',  む:'mu',  め:'me',   も:'mo',\n  ら:'ra',   り:'ri',  る:'ru',  れ:'re',   ろ:'ro',\n  や:'ya',   ゆ:'yu',  よ:'yo',\n  わ:'wa',   ゐ:'wi',  ゑ:'we',  を:'wo',\n  ん: 'n',\n  が:'ga',   ぎ:'gi',  ぐ:'gu',  げ:'ge',   ご:'go',\n  ざ:'za',   じ:'ji',  ず:'zu',  ぜ:'ze',   ぞ:'zo',\n  だ:'da',   ぢ:'ji',  づ:'zu',  で:'de',   ど:'do',\n  ば:'ba',   び:'bi',  ぶ:'bu',  べ:'be',   ぼ:'bo',\n  ぱ:'pa',   ぴ:'pi',  ぷ:'pu',  ぺ:'pe',   ぽ:'po',\n  ゔぁ:'va', ゔぃ:'vi', ゔ:'vu',  ゔぇ:'ve', ゔぉ:'vo',\n};\n/* eslint-enable  */\n\nconst SPECIAL_SYMBOLS = {\n  '。': '.',\n  '、': ',',\n  '：': ':',\n  '・': '/',\n  '！': '!',\n  '？': '?',\n  '〜': '~',\n  'ー': '-',\n  '「': '‘',\n  '」': '’',\n  '『': '“',\n  '』': '”',\n  '［': '[',\n  '］': ']',\n  '（': '(',\n  '）': ')',\n  '｛': '{',\n  '｝': '}',\n  '　': ' ',\n};\n\n// んい -> n'i\nconst AMBIGUOUS_VOWELS = ['あ', 'い', 'う', 'え', 'お', 'や', 'ゆ', 'よ'];\nconst SMALL_Y = { ゃ: 'ya', ゅ: 'yu', ょ: 'yo' };\nconst SMALL_Y_EXTRA = { ぃ: 'yi', ぇ: 'ye' };\nconst SMALL_AIUEO = {\n  ぁ: 'a',\n  ぃ: 'i',\n  ぅ: 'u',\n  ぇ: 'e',\n  ぉ: 'o',\n};\nconst YOON_KANA = [\n  'き',\n  'に',\n  'ひ',\n  'み',\n  'り',\n  'ぎ',\n  'び',\n  'ぴ',\n  'ゔ',\n  'く',\n  'ふ',\n];\nconst YOON_EXCEPTIONS = {\n  し: 'sh',\n  ち: 'ch',\n  じ: 'j',\n  ぢ: 'j',\n};\nconst SMALL_KANA = {\n  っ: '',\n  ゃ: 'ya',\n  ゅ: 'yu',\n  ょ: 'yo',\n  ぁ: 'a',\n  ぃ: 'i',\n  ぅ: 'u',\n  ぇ: 'e',\n  ぉ: 'o',\n};\n\n// going with the intuitive (yet incorrect) solution where っや -> yya and っぃ -> ii\n// in other words, just assume the sokuon could have been applied to anything\nconst SOKUON_WHITELIST = {\n  b: 'b',\n  c: 't',\n  d: 'd',\n  f: 'f',\n  g: 'g',\n  h: 'h',\n  j: 'j',\n  k: 'k',\n  m: 'm',\n  p: 'p',\n  q: 'q',\n  r: 'r',\n  s: 's',\n  t: 't',\n  v: 'v',\n  w: 'w',\n  x: 'x',\n  z: 'z',\n};\n\nfunction getKanaToHepburnTree() {\n  if (kanaToHepburnMap == null) {\n    kanaToHepburnMap = createKanaToHepburnMap();\n  }\n  return kanaToHepburnMap;\n}\n\nfunction getKanaToRomajiTree(romanization) {\n  switch (romanization) {\n    case ROMANIZATIONS.HEPBURN:\n      return getKanaToHepburnTree();\n    default:\n      return {};\n  }\n}\n\nfunction createKanaToHepburnMap() {\n  const romajiTree = transform(BASIC_ROMAJI);\n\n  const subtreeOf = (string) => getSubTreeOf(romajiTree, string);\n  const setTrans = (string, transliteration) => {\n    subtreeOf(string)[''] = transliteration;\n  };\n\n  Object.entries(SPECIAL_SYMBOLS).forEach(([jsymbol, symbol]) => {\n    subtreeOf(jsymbol)[''] = symbol;\n  });\n\n  [...Object.entries(SMALL_Y), ...Object.entries(SMALL_AIUEO)].forEach(\n    ([roma, kana]) => {\n      setTrans(roma, kana);\n    }\n  );\n\n  // きゃ -> kya\n  YOON_KANA.forEach((kana) => {\n    const firstRomajiChar = subtreeOf(kana)[''][0];\n    Object.entries(SMALL_Y).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, firstRomajiChar + yRoma);\n    });\n    // きぃ -> kyi\n    Object.entries(SMALL_Y_EXTRA).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, firstRomajiChar + yRoma);\n    });\n  });\n\n  Object.entries(YOON_EXCEPTIONS).forEach(([kana, roma]) => {\n    // じゃ -> ja\n    Object.entries(SMALL_Y).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, roma + yRoma[1]);\n    });\n    // じぃ -> jyi, じぇ -> je\n    setTrans(`${kana}ぃ`, `${roma}yi`);\n    setTrans(`${kana}ぇ`, `${roma}e`);\n  });\n\n  romajiTree['っ'] = resolveTsu(romajiTree);\n\n  Object.entries(SMALL_KANA).forEach(([kana, roma]) => {\n    setTrans(kana, roma);\n  });\n\n  AMBIGUOUS_VOWELS.forEach((kana) => {\n    setTrans(`ん${kana}`, `n'${subtreeOf(kana)['']}`);\n  });\n\n  // NOTE: could be re-enabled with an option?\n  // // んば -> mbo\n  // const LABIAL = [\n  //   'ば', 'び', 'ぶ', 'べ', 'ぼ',\n  //   'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ',\n  //   'ま', 'み', 'む', 'め', 'も',\n  // ];\n  // LABIAL.forEach((kana) => {\n  //   setTrans(`ん${kana}`, `m${subtreeOf(kana)['']}`);\n  // });\n\n  return Object.freeze(JSON.parse(JSON.stringify(romajiTree)));\n}\n\nfunction resolveTsu(tree) {\n  return Object.entries(tree).reduce((tsuTree, [key, value]) => {\n    if (!key) {\n      // we have reached the bottom of this branch\n      const consonant = value.charAt(0);\n      // eslint-disable-next-line no-param-reassign\n      tsuTree[key] = Object.keys(SOKUON_WHITELIST).includes(consonant)\n        ? SOKUON_WHITELIST[consonant] + value\n        : value;\n    } else {\n      // more subtrees\n      // eslint-disable-next-line no-param-reassign\n      tsuTree[key] = resolveTsu(value);\n    }\n    return tsuTree;\n  }, {});\n}\n\n// memoize and deeply compare args so we only recreate when necessary\nconst createKanaToRomajiMap = memoizeOne(\n  (romanization, customRomajiMapping) => {\n    let map = getKanaToRomajiTree(romanization);\n\n    if (customRomajiMapping) {\n      map = mergeCustomMapping(map, customRomajiMapping);\n    }\n\n    return map;\n  },\n  dequal\n);\n\n/**\n * Convert kana to romaji\n * @param  {String} kana text input\n * @param  {DefaultOptions} [options=defaultOptions]\n * @param  {Object} map custom mapping\n * @return {String} converted text\n * @example\n * toRomaji('ひらがな　カタカナ')\n * // => 'hiragana katakana'\n * toRomaji('げーむ　ゲーム')\n * // => 'ge-mu geemu'\n * toRomaji('ひらがな　カタカナ', { upcaseKatakana: true })\n * // => 'hiragana KATAKANA'\n * toRomaji('つじぎり', { customRomajiMapping: { じ: 'zi', つ: 'tu', り: 'li' } });\n * // => 'tuzigili'\n */\nfunction toRomaji(input = '', options = {}, map) {\n  const config = mergeWithDefaultOptions(options);\n\n  if (!map) {\n    map = createKanaToRomajiMap(\n      config.romanization,\n      config.customRomajiMapping\n    );\n  }\n\n  // just throw away the substring index information and simply concatenate all the kana\n  return splitIntoRomaji(input, config, map)\n    .map((romajiToken) => {\n      const [start, end, romaji] = romajiToken;\n      const makeUpperCase = config.upcaseKatakana && isKatakana(input.slice(start, end));\n      return makeUpperCase ? romaji.toUpperCase() : romaji;\n    })\n    .join('');\n}\n\nfunction splitIntoRomaji(input, options, map) {\n  if (!map) {\n    map = createKanaToRomajiMap(\n      options.romanization,\n      options.customRomajiMapping\n    );\n  }\n\n  const config = Object.assign({}, { isDestinationRomaji: true }, options);\n\n  return applyMapping(\n    katakanaToHiragana(input, toRomaji, config),\n    map,\n    !options.IMEMode\n  );\n}\n\n/**\n * Tests a character. Returns true if the character is considered English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharEnglishPunctuation(char = '') {\n  if (isEmpty(char)) return false;\n  return EN_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\n/**\n * Convert input to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @return {String} converted text\n * @example\n * toHiragana('toukyou, オオサカ')\n * // => 'とうきょう、　おおさか'\n * toHiragana('only カナ', { passRomaji: true })\n * // => 'only かな'\n * toHiragana('wi')\n * // => 'うぃ'\n * toHiragana('wi', { useObsoleteKana: true })\n * // => 'ゐ'\n */\nfunction toHiragana(input = '', options = {}) {\n  const config = mergeWithDefaultOptions(options);\n  if (config.passRomaji) {\n    return katakanaToHiragana(input, toRomaji, config);\n  }\n\n  if (isMixed(input, { passKanji: true })) {\n    const convertedKatakana = katakanaToHiragana(input, toRomaji, config);\n    return toKana(convertedKatakana.toLowerCase(), config);\n  }\n\n  if (isRomaji(input) || isCharEnglishPunctuation(input)) {\n    return toKana(input.toLowerCase(), config);\n  }\n\n  return katakanaToHiragana(input, toRomaji, config);\n}\n\n/**\n * Convert input to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @return {String} converted text\n * @example\n * toKatakana('toukyou, おおさか')\n * // => 'トウキョウ、　オオサカ'\n * toKatakana('only かな', { passRomaji: true })\n * // => 'only カナ'\n * toKatakana('wi')\n * // => 'ウィ'\n * toKatakana('wi', { useObsoleteKana: true })\n * // => 'ヰ'\n */\nfunction toKatakana(input = '', options = {}) {\n  const mergedOptions = mergeWithDefaultOptions(options);\n  if (mergedOptions.passRomaji) {\n    return hiraganaToKatakana(input);\n  }\n\n  if (isMixed(input) || isRomaji(input) || isCharEnglishPunctuation(input)) {\n    const hiragana = toKana(input.toLowerCase(), mergedOptions);\n    return hiraganaToKatakana(hiragana);\n  }\n\n  return hiraganaToKatakana(input);\n}\n\n/**\n * Tests a character. Returns true if the character is considered Japanese punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanesePunctuation(char = '') {\n  if (isEmpty(char) || isCharIterationMark(char)) return false;\n  return JA_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nconst isCharEnSpace = (x) => x === ' ';\nconst isCharJaSpace = (x) => x === '　';\nconst isCharJaNum = (x) => /[０-９]/.test(x);\nconst isCharEnNum = (x) => /[0-9]/.test(x);\n\nconst TOKEN_TYPES = {\n  EN: 'en',\n  JA: 'ja',\n  EN_NUM: 'englishNumeral',\n  JA_NUM: 'japaneseNumeral',\n  EN_PUNC: 'englishPunctuation',\n  JA_PUNC: 'japanesePunctuation',\n  KANJI: 'kanji',\n  HIRAGANA: 'hiragana',\n  KATAKANA: 'katakana',\n  SPACE: 'space',\n  OTHER: 'other',\n};\n\n// prettier-ignore\nfunction getType(input, compact = false) {\n  const {\n    EN, JA, EN_NUM, JA_NUM, EN_PUNC, JA_PUNC, KANJI, HIRAGANA, KATAKANA, SPACE, OTHER,\n  } = TOKEN_TYPES;\n\n  if (compact) {\n    switch (true) {\n      case isCharJaNum(input): return OTHER;\n      case isCharEnNum(input): return OTHER;\n      case isCharEnSpace(input): return EN;\n      case isCharEnglishPunctuation(input): return OTHER;\n      case isCharJaSpace(input): return JA;\n      case isCharJapanesePunctuation(input): return OTHER;\n      case isCharJapanese(input): return JA;\n      case isCharRomaji(input): return EN;\n      default: return OTHER;\n    }\n  } else {\n    switch (true) {\n      case isCharJaSpace(input): return SPACE;\n      case isCharEnSpace(input): return SPACE;\n      case isCharJaNum(input): return JA_NUM;\n      case isCharEnNum(input): return EN_NUM;\n      case isCharEnglishPunctuation(input): return EN_PUNC;\n      case isCharJapanesePunctuation(input): return JA_PUNC;\n      case isCharKanji(input): return KANJI;\n      case isCharHiragana(input): return HIRAGANA;\n      case isCharKatakana(input): return KATAKANA;\n      case isCharJapanese(input): return JA;\n      case isCharRomaji(input): return EN;\n      default: return OTHER;\n    }\n  }\n}\n\n/**\n * Splits input into array of strings separated by opinionated token types\n * `'en', 'ja', 'englishNumeral', 'japaneseNumeral','englishPunctuation', 'japanesePunctuation','kanji', 'hiragana', 'katakana', 'space', 'other'`.\n * If `{ compact: true }` then many same-language tokens are combined (spaces + text, kanji + kana, numeral + punctuation).\n * If `{ detailed: true }` then return array will contain `{ type, value }` instead of `'value'`\n * @param  {String} input text\n * @param  {Object} [options={ compact: false, detailed: false}] options to modify output style\n * @return {String|Object[]} text split into tokens containing values, or detailed object\n * @example\n * tokenize('ふふフフ')\n * // ['ふふ', 'フフ']\n *\n * tokenize('感じ')\n * // ['感', 'じ']\n *\n * tokenize('人々')\n * // ['人々']\n *\n * tokenize('truly 私は悲しい')\n * // ['truly', ' ', '私', 'は', '悲', 'しい']\n *\n * tokenize('truly 私は悲しい', { compact: true })\n * // ['truly ', '私は悲しい']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！')\n * // [ '5', 'romaji', ' ', 'here', '...!?', '人々漢字', 'ひらがな', 'カタ', '　', 'カナ', '４', '「', 'ＳＨＩＯ', '」。！']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！', { compact: true })\n * // [ '5', 'romaji here', '...!?', '人々漢字ひらがなカタ　カナ', '４「', 'ＳＨＩＯ', '」。！']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！ لنذهب', { detailed: true })\n * // [\n *  { type: 'englishNumeral', value: '5' },\n *  { type: 'en', value: 'romaji' },\n *  { type: 'space', value: ' ' },\n *  { type: 'en', value: 'here' },\n *  { type: 'englishPunctuation', value: '...!?' },\n *  { type: 'kanji', value: '人々漢字' },\n *  { type: 'hiragana', value: 'ひらがな' },\n *  { type: 'katakana', value: 'カタ' },\n *  { type: 'space', value: '　' },\n *  { type: 'katakana', value: 'カナ' },\n *  { type: 'japaneseNumeral', value: '４' },\n *  { type: 'japanesePunctuation', value: '「' },\n *  { type: 'ja', value: 'ＳＨＩＯ' },\n *  { type: 'japanesePunctuation', value: '」。！' },\n *  { type: 'space', value: ' ' },\n *  { type: 'other', value: 'لنذهب' },\n * ]\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！ لنذهب', { compact: true, detailed: true})\n * // [\n *  { type: 'other', value: '5' },\n *  { type: 'en', value: 'romaji here' },\n *  { type: 'other', value: '...!?' },\n *  { type: 'ja', value: '人々漢字ひらがなカタ　カナ' },\n *  { type: 'other', value: '４「' },\n *  { type: 'ja', value: 'ＳＨＩＯ' },\n *  { type: 'other', value: '」。！' },\n *  { type: 'en', value: ' ' },\n *  { type: 'other', value: 'لنذهب' },\n *]\n */\nfunction tokenize(input, { compact = false, detailed = false } = {}) {\n  if (input == null || isEmpty(input)) {\n    return [];\n  }\n  const chars = [...input];\n  let initial = chars.shift();\n  let prevType = getType(initial, compact);\n  initial = detailed ? { type: prevType, value: initial } : initial;\n\n  const result = chars.reduce(\n    (tokens, char) => {\n      const currType = getType(char, compact);\n      const sameType = currType === prevType;\n      prevType = currType;\n      let newValue = char;\n\n      if (sameType) {\n        newValue = (detailed ? tokens.pop().value : tokens.pop()) + newValue;\n      }\n\n      return detailed\n        ? tokens.concat({ type: currType, value: newValue })\n        : tokens.concat(newValue);\n    },\n    [initial]\n  );\n  return result;\n}\n\nconst isLeadingWithoutInitialKana = (input, leading) => leading && !isKana(input[0]);\nconst isTrailingWithoutFinalKana = (input, leading) => !leading && !isKana(input[input.length - 1]);\nconst isInvalidMatcher = (input, matchKanji) =>\n  (matchKanji && ![...matchKanji].some(isKanji)) || (!matchKanji && isKana(input));\n\n/**\n * Strips [Okurigana](https://en.wikipedia.org/wiki/Okurigana)\n * @param  {String} input text\n * @param  {Object} [options={ leading: false, matchKanji: '' }] optional config\n * @return {String} text with okurigana removed\n * @example\n * stripOkurigana('踏み込む')\n * // => '踏み込'\n * stripOkurigana('お祝い')\n * // => 'お祝'\n * stripOkurigana('お腹', { leading: true });\n * // => '腹'\n * stripOkurigana('ふみこむ', { matchKanji: '踏み込む' });\n * // => 'ふみこ'\n * stripOkurigana('おみまい', { matchKanji: 'お祝い', leading: true });\n * // => 'みまい'\n */\nfunction stripOkurigana(input = '', { leading = false, matchKanji = '' } = {}) {\n  if (\n    !isJapanese(input) ||\n    isLeadingWithoutInitialKana(input, leading) ||\n    isTrailingWithoutFinalKana(input, leading) ||\n    isInvalidMatcher(input, matchKanji)\n  ) {\n    return input;\n  }\n\n  const chars = matchKanji || input;\n  const okuriganaRegex = new RegExp(\n    leading ? `^${tokenize(chars).shift()}` : `${tokenize(chars).pop()}$`\n  );\n  return input.replace(okuriganaRegex, '');\n}\n\nexport { ROMANIZATIONS, TO_KANA_METHODS, VERSION, bind, isHiragana, isJapanese, isKana, isKanji, isKatakana, isMixed, isRomaji, stripOkurigana, toHiragana, toKana, toKatakana, toRomaji, tokenize, unbind };\n//# sourceMappingURL=index.js.map\n","import * as wanakana from 'wanakana';\r\n\r\nconst backendUrl = process.env.BACKEND_URL || 'http://localhost:5215';\r\n\r\nconst getQuestionUrl = `${backendUrl}/Translation/GetQuestion`;\r\nconst markQuestionUrl = `${backendUrl}/Translation/MarkQuestion`;\r\n\r\nconst setHeaders = (jwt) => {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + jwt\r\n    })\r\n}\r\n\r\nconst getQuestionRequestOptions = (body, headers) => {\r\n    return {\r\n        method: 'POST',  \r\n        headers: headers,\r\n        body: JSON.stringify(body)\r\n    }\r\n};\r\n\r\nconst getMarkRequestOptions = (body, headers) => {\r\n    return {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(body)\r\n    }\r\n}\r\n\r\nconst getTranslationQuestion = async (fromLanguage, difficulty, subject) => {\r\n    let jwt = localStorage.getItem('jwt_token');\r\n    let request = {\r\n        japanese_level: `N${difficulty}`, // Change this after\r\n        from_language: fromLanguage,\r\n        subject: subject.trim(),\r\n    }\r\n    const response = await fetch(getQuestionUrl, getQuestionRequestOptions(request, setHeaders(jwt)));\r\n    return await response.json();\r\n};\r\n\r\nconst getTranslationMark = async (translations) => {\r\n    // Remove tokenized questions before sending to server for marking\r\n    let sendTranslations = structuredClone(translations);\r\n    for (let pair of sendTranslations.sentence_pairs) {\r\n        delete pair.tokenized_question;\r\n    }\r\n\r\n    let jwt = localStorage.getItem('jwt_token');\r\n\r\n    const response = await fetch(markQuestionUrl, getMarkRequestOptions(translations, setHeaders(jwt)));\r\n    let markedTranslations = await response.json();\r\n\r\n    for (let pair of markedTranslations.sentence_pairs) {\r\n        const matchPair = translations.sentence_pairs.find(p => p.id == pair.id)\r\n        if (translations.language == \"Japanese\") {\r\n            pair.tokenized_question = matchPair.tokenized_question\r\n        }\r\n    }\r\n\r\n    return markedTranslations\r\n}\r\n\r\n// Tokenize the question if the language is in Japanese, so that the user can select furigana for the question.\r\n// Otherwise, if the language is English, we want to tokenize only the solution, as the solution will be the japanese translation of the english question.\r\n// Also helps to attach back tokenized questions when marked translations are received, but only if language is japanese\r\nconst tokenizeTranslations = (translations, tokenizer) => {\r\n    let tokenized_sentence_pairs = []\r\n    for (let pair of translations.sentence_pairs) {\r\n        let tokenized_sentence = null;\r\n        if (translations.language == \"Japanese\") {\r\n            tokenized_sentence = tokenizer.tokenize(pair.question);\r\n        } else {\r\n            tokenized_sentence = pair.solution != null ? tokenizer.tokenize(pair.solution) : \"\";\r\n        }\r\n\r\n        // Convert reading strings of each kanji to hiragana, for some reason they're set to katakana?\r\n        for (let token of tokenized_sentence) {\r\n            let hiragana_reading = wanakana.toHiragana(token.reading);\r\n            token.reading = hiragana_reading;\r\n        }   \r\n\r\n        if (translations.language == \"Japanese\") {\r\n            pair.tokenized_question = tokenized_sentence;\r\n        } else {\r\n            pair.tokenized_solution = tokenized_sentence;\r\n        }\r\n\r\n        tokenized_sentence_pairs.push(pair)\r\n    }\r\n    translations.sentence_pairs = tokenized_sentence_pairs;\r\n}\r\n\r\nexport { getTranslationQuestion, getTranslationMark, tokenizeTranslations };","<!-- src/components/Loading.svelte -->\r\n<style>\r\n    .container {\r\n        display: grid;\r\n        place-items: center;\r\n    }\r\n\r\n    .loading-spinner {\r\n        border: 0.5rem solid #181818; /* Background color */\r\n        border-top: 0.5rem solid #ff4081; /* Foreground color */\r\n        border-radius: 50%;\r\n        width: 3vw;\r\n        height: 3vw;\r\n        animation: spin 2s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    h2 {\r\n        font-size: 1rem;\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n        text-align: center;\r\n        margin-top: 10%;\r\n        margin-left: 2%;\r\n        color: #6d6d6d;\r\n    }\r\n</style>\r\n\r\n<div class=\"container\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <h2>This may take up to 30 seconds...</h2>\r\n</div>\r\n","<script>\r\n    // Taken from: https://svelte.dev/repl/d65a4e9f0ae74d1eb1b08d13e428af32?version=3.35.0\r\n    // based on suggestions from:\r\n    // Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\r\n    // On Designing and Building Toggle Switches by Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\r\n    // and this example by Scott O'hara https://codepen.io/scottohara/pen/zLZwNv \r\n\r\n\r\n    export let label;\r\n    export let design = 'inner label'\r\n    export let options = [];\r\n\texport let fontSize = 16;\r\n\texport let value = false;\r\n\r\n    let checked = false;\r\n\r\n\tconst uniqueID = Math.floor(Math.random() * 100)\r\n\r\n    function handleClick(event){\r\n        const target = event.target\r\n\r\n        const state = target.getAttribute('aria-checked')\r\n\r\n        checked = state === 'true' ? false : true\r\n\r\n        value = checked === true ? true : false\r\n    }\r\n\t\r\n\t  const slugify = (str = \"\") =>\r\n    str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"\");\r\n\r\n</script>\r\n\r\n{#if design == 'inner'}\r\n<div class=\"s s--inner\">\r\n    <span id={`switch-${uniqueID}`}>{label}</span>\r\n    <button\r\n        role=\"switch\"\r\n        aria-checked={checked}\r\n        aria-labelledby={`switch-${uniqueID}`}\r\n        on:click={handleClick}>\r\n            <span>on</span>\r\n            <span>off</span>\r\n    </button>\r\n</div>\r\n{:else if design == 'slider'}\r\n<div class=\"s s--slider\">\r\n    <span id={`switch-${uniqueID}`}>{label}</span>\r\n    <button\r\n        role=\"switch\"\r\n        aria-checked={checked}\r\n        aria-labelledby={`switch-${uniqueID}`}\r\n        on:click={handleClick}>\r\n    </button>\r\n</div>\r\n{:else}\r\n<div class=\"s s--multi\">\r\n    <div role='radiogroup'\r\n\t\t\t\t class=\"group-container\"\r\n\t\t\t\t aria-labelledby={`label-${uniqueID}`}\r\n\t\t\t\t style=\"font-size:{fontSize}px\" \r\n\t\t\t\t id={`group-${uniqueID}`}>\r\n    <div class='legend' id={`label-${uniqueID}`}>{label}</div>\r\n        {#each options as option}\r\n            <input type=\"radio\" id={`${option}-${uniqueID}`} value={option} bind:group={value}>\r\n            <label for={`${option}-${uniqueID}`}>\r\n                {option}\r\n            </label> \r\n        {/each}\r\n    </div>\r\n</div>\r\n\r\n{/if}\r\n\r\n<style>\r\n\t\t\t:root {\r\n\t\t--accent-color: #ff4081;\r\n\t\t--gray: #ccc;\r\n\t}\r\n    /* Inner Design Option */\r\n    .s--inner button {\r\n        padding: 0.5em;\r\n        background-color: #fff;\r\n        border: 1px solid var(--gray);\r\n    }\r\n    [role='switch'][aria-checked='true'] :first-child,\r\n    [role='switch'][aria-checked='false'] :last-child {\r\n        display: none;\r\n        color: #fff;\r\n    }\r\n\r\n    .s--inner button span {\r\n        user-select: none;\r\n        pointer-events:none;\r\n        padding: 0.25em;\r\n    }\r\n\r\n    .s--inner button:focus {\r\n        outline: var(--accent-color) solid 1px;\r\n    }\r\n\r\n    /* Slider Design Option */\r\n\r\n    .s--slider {\r\n        margin-bottom: 1.5rem;\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: clamp(13px, 1vw, 15px);\r\n        background-color: #504f4f;\r\n        padding: 1.2vh 0.7vw;\r\n        border-radius: 1rem;\r\n    }\r\n\r\n    .s--slider button {\r\n        width: 3em;\r\n        height: 1.6em;\r\n        position: relative;\r\n        margin: 0 0 0 0.5em;\r\n        background: var(--gray);\r\n        border: none;\r\n    }\r\n\r\n    .s--slider button::before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 1.3em;\r\n        height: 1.3em;\r\n        background: #fff;\r\n        top: 0.1em;\r\n        right: 1.5em;\r\n        transition: transform 0.3s;\r\n    }\r\n\r\n    .s--slider button[aria-checked='true']{\r\n        background-color: var(--accent-color)\r\n    }\r\n\r\n    .s--slider button[aria-checked='true']::before{\r\n        transform: translateX(1.3em);\r\n        transition: transform 0.3s;\r\n    }\r\n\r\n    .s--slider button:focus {\r\n        box-shadow: 0 0px 0px 1px var(--accent-color);\r\n    }\r\n\r\n    /* Multi Design Option */\r\n\r\n    /* Based on suggestions from Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\r\n    and this example from Scott O'hara https://codepen.io/scottohara/pen/zLZwNv */\r\n\r\n    .s--multi .group-container {\r\n        border: none;\r\n        padding: 0;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    /* .s--multi legend {\r\n    font-size: 2px;\r\n    opacity: 0;\r\n    position: absolute;\r\n    } */\r\n\r\n    .s--multi label {\r\n        display: inline-block;\r\n        line-height: 1.6;\r\n        position: relative;\r\n        z-index: 2;\r\n    }\r\n\r\n    .s--multi input {\r\n        opacity: 0;\r\n        position: absolute;\r\n    }\r\n\r\n    .s--multi label:first-of-type {\r\n        padding-right: 5em;\r\n    }\r\n\r\n    .s--multi label:last-child {\r\n        margin-left: -5em;\r\n        padding-left: 5em;\r\n    }\r\n\r\n    .s--multi:focus-within label:first-of-type:after {\r\n        box-shadow: 0 0px 8px var(--accent-color);\r\n        border-radius: 1.5em;\r\n    }\r\n\r\n\r\n\r\n    /* making the switch UI.  */\r\n    .s--multi label:first-of-type:before,\r\n    .s--multi label:first-of-type:after {\r\n        content: \"\";\r\n        height: 1.25em;\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .s--multi label:first-of-type:before {\r\n        border-radius: 100%;\r\n        z-index: 2;\r\n        position: absolute;\r\n        width: 1.2em;\r\n        height: 1.2em;\r\n        background: #fff;\r\n        top: 0.2em;\r\n        right: 1.2em;\r\n        transition: transform 0.3s;\r\n    }\r\n\r\n    .s--multi label:first-of-type:after {\r\n        background: var(--accent-color);\r\n        border-radius: 1em;\r\n        margin: 0 1em;\r\n        transition: background .2s ease-in-out;\r\n        width: 3em;\r\n        height: 1.6em;\r\n    }\r\n\r\n    .s--multi input:first-of-type:checked ~ label:first-of-type:after {\r\n        background: var(--gray);\r\n    }\r\n\r\n    .s--multi input:first-of-type:checked ~ label:first-of-type:before {\r\n        transform: translateX(-1.4em);\r\n    }\r\n\r\n    .s--multi input:last-of-type:checked ~ label:last-of-type {\r\n        z-index: 1;\r\n    }\r\n\r\n    .s--multi input:focus {\r\n        box-shadow: 0 0px 8px var(--accent-color);\r\n        border-radius: 1.5em;\r\n    }\r\n\r\n    /* gravy */ \r\n\r\n    /* Inner Design Option */\r\n    [role='switch'][aria-checked='true'] :first-child,\r\n    [role='switch'][aria-checked='false'] :last-child {\r\n        border-radius: 0.25em;\r\n        background: var(--accent-color);\r\n        display: inline-block;\r\n    }\r\n\r\n    .s--inner button:focus {\r\n        box-shadow: 0 0px 8px var(--accent-color);\r\n        border-radius: 0.1em;\r\n    }\r\n\r\n    /* Slider Design Option */\r\n    .s--slider button {\r\n        border-radius: 1.5em;\r\n    } \r\n    \r\n    .s--slider button::before {\r\n        border-radius: 100%;\r\n    }\r\n\r\n    .s--slider button:focus {\r\n        box-shadow: 0 0px 8px var(--accent-color);\r\n        border-radius: 1.5em;\r\n    }\r\n   \r\n\r\n</style>","<!-- src/components/Slider.svelte -->\r\n<script>\r\n    // Local state for the slider value\r\n    export let value = sessionStorage.getItem(\"difficulty\") || 3;\r\n    export let childFunction = null;\r\n\r\n    $: trackColor = `linear-gradient(to right, white 0%, white ${(value - 1) * 25}%, #ff4081 ${(value - 1) * 25}%, #ff4081 100%)`;\r\n\r\n    // Function to handle value changes\r\n    function handleChange(event) {\r\n        value = event.target.value;\r\n        if (childFunction) {\r\n            childFunction(event);\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    div {\r\n        display: flex;\r\n        align-items: center; /* This aligns items vertically at the center */\r\n    }\r\n\r\n    input[type=range] {\r\n        height: 5%;\r\n        appearance: none;\r\n        margin: 0.5% 0;\r\n        width: 25%;\r\n        background-color: rgb(78, 78, 78);\r\n        border-radius: 5rem;\r\n        border: none;\r\n        transform: rotate(180deg); /* Rotates the slider */\r\n    }\r\n    input[type=range]:focus {\r\n        outline: none;\r\n    }\r\n    input[type=range]::-webkit-slider-runnable-track {\r\n        width: 100%;\r\n        height: 30%;\r\n        cursor: pointer;\r\n        box-shadow: 0px 0px 0px #000000;\r\n        background: var(--track-color);\r\n        border-radius: 5rem;\r\n    }\r\n    input[type=range]::-webkit-slider-thumb {\r\n        height: 1.2rem;\r\n        width: 1.2rem;\r\n        border-radius: 5rem;\r\n        background: #FFFFFF;\r\n        cursor: pointer;\r\n        -webkit-appearance: none;\r\n        margin-top: -0.55rem;\r\n    }\r\n\r\n    p {\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n        text-decoration: bold;\r\n        margin-left: 1rem;\r\n        font-size: 110%;\r\n    }\r\n\r\n    .para-reminder {\r\n        font-size: 70%;\r\n        margin-left: 2%;\r\n        color: #807e7e;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <!-- Slider input -->\r\n    <input style=\"--track-color: {trackColor};\" type=\"range\" min=\"1\" max=\"5\" step=\"1\" value={value} on:input={handleChange} />\r\n\r\n    <!-- Display the current value -->\r\n    <p>難易度: N{value}</p>\r\n    <p class=\"para-reminder\">＊レベルが変わったら、ページを更新してください</p>\r\n</div>\r\n\r\n","<!-- src/components/PracticeInput.svelte -->\r\n<script>\r\n    import { onMount } from 'svelte';\r\n    import { getTranslationMark, tokenizeTranslations } from \"../services/translation\";\r\n    import * as wanakana from 'wanakana';\r\n    import Button from \"./Button.svelte\";\r\n    import Toggle from \"./Toggle.svelte\";\r\n    import Error from \"./Error.svelte\";\r\n    import Slider from \"./Slider.svelte\";\r\n\r\n    export let translations = [];\r\n    export let tokenizer = null;\r\n    let subject = sessionStorage.getItem(\"subject\") || \"\";\r\n    // Reactive variable for loading state\r\n    let isMarking = false;\r\n    let showSolution = false;\r\n    let showFurigana = false;\r\n    let showError = false;\r\n\r\n    onMount(async () => {\r\n        if (translations.sentence_pairs[0].solution != \"\") {\r\n            showSolution = true;\r\n        }\r\n    })\r\n\r\n    // A function to handle the input event\r\n    function handleInput(event, id) {\r\n        // Find the sentence pair by id\r\n        const pair = translations.sentence_pairs.find(p => p.id === id);\r\n        if (pair) {\r\n            pair.answer = event.target.value; // Update the answer property\r\n        }\r\n        const nextPairs = translations.sentence_pairs.map(p => {\r\n            if (p.id == pair.id) {\r\n                return {\r\n                    ...p,\r\n                    answer: pair.answer\r\n                }\r\n            } else {\r\n                return p;\r\n            }\r\n        })\r\n        translations.sentence_pairs = nextPairs;\r\n    }\r\n\r\n    async function handleMark() {\r\n        showError = false;\r\n        isMarking = true;\r\n        try {\r\n            const markedTranslations = await getTranslationMark(translations);\r\n            tokenizeTranslations(markedTranslations, tokenizer);\r\n            translations = markedTranslations;\r\n            showSolution = true;\r\n\r\n            sessionStorage.setItem(\"translations\", JSON.stringify(translations))\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            showError = true;\r\n        }\r\n        isMarking = false;   \r\n    }\r\n\r\n    function handleRefreshQuestions() {\r\n        sessionStorage.removeItem(\"translations\")\r\n        window.location.reload()\r\n    }\r\n\r\n    function getNextFromLanguage() {\r\n        let currLanguage = sessionStorage.getItem(\"from_language\") || \"Japanese\";\r\n        let nextLanguage = currLanguage == \"Japanese\" ? \"English\" : \"Japanese\";\r\n        return nextLanguage;\r\n    }\r\n\r\n    function handleSwapFromLanguage() {\r\n        sessionStorage.setItem(\"from_language\", getNextFromLanguage());\r\n        sessionStorage.removeItem(\"translations\")\r\n        window.location.reload();\r\n    }\r\n\r\n    function handleDifficultyChange(event) {\r\n        sessionStorage.setItem(\"difficulty\", event.target.value);\r\n    }\r\n\r\n    function handleSubjectInput(event) {\r\n        console.log(event.target.value)\r\n        sessionStorage.setItem(\"subject\", event.target.value);\r\n    }\r\n\r\n    function tokenShouldShowFurigana(token) {\r\n        for (const char of token) {\r\n            if (wanakana.isKanji(char)) {\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    } \r\n  </script>\r\n\r\n<style>\r\n    .container {\r\n        margin-top: 0%; /* Adjusted to be relative to the parent container */\r\n        margin-left: -6%; /* Adjusted to be relative to the parent container */\r\n        width: 60%; /* Set a fixed width relative to the parent container */\r\n        height: 90%;\r\n    }\r\n\r\n    .header-container {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: -1%;\r\n        gap: 2.5%;\r\n    }\r\n    \r\n    .question {\r\n        margin-bottom: 0.5em;\r\n    }\r\n\r\n    .subject-container {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 45rem;\r\n        margin-bottom: -1%;\r\n    }\r\n\r\n    .subject-container .subject {\r\n        height: 1.8rem;\r\n    }\r\n\r\n    .subject-container .note{\r\n        margin-bottom: 1.75rem;\r\n        margin-left: 1rem;\r\n        font-size: 68%;\r\n        color: #807e7e;\r\n        white-space: nowrap;\r\n        font-weight: normal;\r\n    }\r\n  \r\n    input[type=\"text\"] {\r\n      width: 100%;\r\n      padding: 8px;\r\n      margin-bottom: 1em;\r\n      box-sizing: border-box; /* ensures padding doesn't affect width */\r\n      border: none;\r\n    }\r\n\r\n    input[type=\"text\"]:focus {\r\n        outline: none;\r\n    }\r\n\r\n    h1 {\r\n        font-size: clamp(25px, 3vw, 40px);\r\n        margin-right: auto;\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n        text-decoration: underline;\r\n        text-decoration-color: currentColor; /* optional, to specify the color of the underline */\r\n        text-decoration-thickness: 18%; /* controls the thickness of the underline */\r\n        text-underline-offset: 0.2em; /* controls the distance between text and underline */\r\n    }\r\n\r\n    h2 {\r\n        color: #969494;\r\n        font-size: clamp(15px, 2vw, 25px);\r\n        margin-bottom: 3%;\r\n    }\r\n\r\n    ruby {\r\n      word-wrap: break-word; /* This ensures text goes to the next line */\r\n      hyphens: auto; /* Optional: This will hyphenate words if necessary */\r\n      font-size: clamp(17px, 1.1vw, 20px);\r\n      font-family: Meiryo, Yu Gothic, sans-serif;\r\n      font-weight: bold;\r\n    }\r\n\r\n    p {\r\n      word-wrap: break-word; /* This ensures text goes to the next line */\r\n      hyphens: auto; /* Optional: This will hyphenate words if necessary */\r\n      font-size: clamp(15px, 1.1vw, 17px);\r\n      font-family: Meiryo, Yu Gothic, sans-serif;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .button-container {\r\n        display: flex;\r\n        align-items: center; /* Align items vertically */\r\n        justify-content: flex-start; /* Align button to the start of the container */\r\n    }\r\n\r\n    .button-container.is-marking .loading-icon {\r\n        display: inline-block;\r\n    }\r\n\r\n    .loading-icon {\r\n        display: none; /* Hide by default */\r\n        margin-left: 3rem;\r\n        margin-top: 2rem;\r\n        border: 0.5rem solid #181818; /* Background color */\r\n        border-top: 0.5rem solid #ff4081; /* Foreground color */\r\n        border-radius: 50%;\r\n        width: 1vw;\r\n        height: 1vw;\r\n        transform: translate(-50%, -50%); /* Adjust the position */\r\n        animation: spin 2s linear infinite;\r\n    }\r\n\r\n    .container.is-marking .loading-icon {\r\n        display: block;\r\n    }\r\n\r\n    .solution-container {\r\n        display: none;\r\n    }\r\n\r\n    .solution-container.is-shown {\r\n        display: block;\r\n        font-size: 70%;\r\n        margin-bottom: 2%;\r\n        border-bottom: 0.01rem solid #ccc;\r\n\t    border-radius: 1%;\r\n    }\r\n\r\n    .question-para {\r\n        font-size: 100%;\r\n    }\r\n\r\n    .score-para {\r\n        display: block;\r\n        width: fit-content;\r\n        padding: 7px;\r\n        border-radius: 0.5rem;\r\n        background-color: #5f5e5e;\r\n        font-size: clamp(15px, 0.5vw, 17px);\r\n    }\r\n\r\n    .solution-ruby {\r\n        word-wrap: break-word;\r\n        font-size: clamp(14px, 1.1vw, 15px);\r\n    }\r\n\r\n    .solution-rt {\r\n        font-size: clamp(9px, 0.7vw, 10px);\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% { transform: translate(-50%, -50%) rotate(0deg); }\r\n        100% { transform: translate(-50%, -50%) rotate(360deg); }\r\n    }\r\n</style>\r\n  \r\n<div class=\"container {isMarking ? 'is-marking' : ''}\">\r\n    <h1>翻訳練習しましょう</h1>\r\n    <div class=\"subject-container\">\r\n        <input class=\"subject\" type=\"text\" bind:value={subject} on:input={(event) => handleSubjectInput(event)} placeholder=\"サブジェクト\">\r\n        <p class=\"note\">＊強調したい所（任意）（e.g. Sports, School, Travelling） ＊入力してから、ページを更新してください</p>\r\n    </div>\r\n    <Slider childFunction={handleDifficultyChange}/>\r\n    <div class=\"header-container\">\r\n        <h2>下一つ一つの文を翻訳して答えを入力してください。</h2>\r\n        <Button style=\"swap\" on:click={handleSwapFromLanguage} text=\"Translate from {getNextFromLanguage()}\"/>\r\n        <Toggle bind:value={showFurigana} label=\"Furigana\" design=\"slider\" />\r\n        <Button style=\"retry\" on:click={handleRefreshQuestions} text=\"更新\"/>\r\n    </div>\r\n    {#each translations.sentence_pairs as { id, question, tokenized_question, answer, solution, tokenized_solution, score }}\r\n        <div class=\"question\">\r\n            {#if tokenized_question == null}\r\n                <p class=\"question-para\">{question}</p>\r\n            {:else}    \r\n                {#each tokenized_question as { surface_form, reading }}\r\n                    {#if tokenShouldShowFurigana(surface_form) && showFurigana}\r\n                        <ruby>\r\n                            {surface_form}<rt>{reading}</rt>\r\n                        </ruby>\r\n                    {:else}\r\n                        <ruby>\r\n                            {surface_form}\r\n                        </ruby>\r\n                    {/if}\r\n                {/each}\r\n            {/if}\r\n            <input type=\"text\" bind:value={answer} on:input={(event) => handleInput(event, id)} placeholder=\"答え。。。\">\r\n            <div class=\"solution-container {showSolution ? 'is-shown' : ''}\">\r\n                {#if tokenized_solution == null}\r\n                    <p>{solution}</p>\r\n                {:else}    \r\n                    {#each tokenized_solution as { surface_form, reading }}\r\n                        {#if tokenShouldShowFurigana(surface_form) && showFurigana}\r\n                            <ruby class=\"solution-ruby\">\r\n                                {surface_form}<rt class=\"solution-rt\">{reading}</rt>\r\n                            </ruby>\r\n                        {:else}\r\n                            <ruby class=\"solution-ruby\">\r\n                                {surface_form}\r\n                            </ruby>\r\n                        {/if}\r\n                    {/each}\r\n                {/if}\r\n                <p class=\"score-para\">Score: {score}/5</p>\r\n            </div>\r\n        </div>\r\n    {/each}\r\n    <div class=\"button-container {isMarking ? 'is-marking' : ''}\">\r\n        <Button text=\"確認\" on:click={handleMark} loading={isMarking}/>\r\n        <div class=\"loading-icon\"></div>\r\n        <Error showError={showError}/>\r\n    </div>\r\n</div>","<!-- src/pages/PracticeTranslation.svelte -->\r\n<script>\r\n    import { onMount } from 'svelte';\r\n    import {getTranslationQuestion, tokenizeTranslations} from '../services/translation';\r\n    import Button from '../components/Button.svelte';\r\n    import Loading  from '../components/Loading.svelte';\r\n    import PracticeInput from '../components/PracticeInput.svelte';\r\n    import { navigate } from 'svelte-routing/src/history';\r\n    import {isTokenPresentAndValid} from \"../utils/jwt\";\r\n\r\n    let data = null;\r\n    let error = false;\r\n    let tokenizer = null;\r\n\r\n    onMount(async () => {\r\n        if (typeof window !== 'undefined') {\r\n            if (!isTokenPresentAndValid()) {\r\n                navigate('/');\r\n            }\r\n        }\r\n\r\n        // Async load tokenizer\r\n        tokenizer = await new Promise((resolve, reject) => {\r\n            kuromoji.builder({ dicPath: \"/dict/\" }).build((err, builtTokenizer) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(builtTokenizer);\r\n                }\r\n            });\r\n        });\r\n\r\n        try {\r\n            // Get current \"from\" language\r\n            let fromLanguage = sessionStorage.getItem('from_language') || \"Japanese\";\r\n            let difficulty = sessionStorage.getItem('difficulty') || 3;\r\n            let subject = sessionStorage.getItem(\"subject\") || \"\";\r\n            let storageData = JSON.parse(sessionStorage.getItem(\"translations\"));\r\n            if (storageData != null) {\r\n                data = storageData;\r\n            } else {\r\n                data = await getTranslationQuestion(fromLanguage, difficulty, subject);\r\n                sessionStorage.setItem(\"translations\", JSON.stringify(data));\r\n            }\r\n\r\n            // data = {\r\n            //     id: \"123123123123123\",\r\n            //     uid: \"\",\r\n            //     user: null,\r\n            //     sentence_pairs: [\r\n            //         {\r\n            //             id: \"12345\",\r\n            //             question: \"彼が部屋に入ってきた時、私はテレビを見ていたわけではなく、ラジオを聴いていた。彼が部屋に入ってきた時、私はテレビを見ていたわけではなく、ラジオを聴いていた。彼が部屋に入ってきた時、私はテレビを見ていたわけではなく、ラジオを聴いていた。\",\r\n            //             answer: \"\",\r\n            //             solution: \"\",\r\n            //             score: 0,\r\n            //         },\r\n            //         {\r\n            //             id: \"123456\",\r\n            //             question: \"この小説は直訳すると意味がよくわからないが、読み手が感じたことを大切にすれば、非常に面白い作品であるといえる。\",\r\n            //             answer: \"\",\r\n            //             solution: \"\",\r\n            //             score: 0,\r\n            //         },\r\n            //         {\r\n            //             id: \"1234567\",\r\n            //             question: \"私が知りたいことは、あなたがその問題を解決するために何を考えているか、そして具体的にどのような行動を取るつもりなのかです。\",\r\n            //             answer: \"\",\r\n            //             solution: \"\",\r\n            //             score: 0,\r\n            //         }\r\n            //     ],\r\n            //     language: \"Japanese\",\r\n            // }\r\n            // data = {\r\n            //     id: \"dab93d8f-200e-4875-9e83-25073fee9fa1\",\r\n            //     uid: \"\",\r\n            //     user: null,\r\n            //     sentence_pairs: [\r\n            //         {\r\n            //             id: \"acc8bd96-52b1-4f7b-90dd-3a32678aa129\",\r\n            //             question: \"The cherry blossoms in Japan bloom beautifully in the spring, attracting tourists from all around the world.\",\r\n            //             answer: \"\",\r\n            //             score: 0,\r\n            //             solution: \"\"\r\n            //         },\r\n            //         {\r\n            //             id: \"d49f0502-95f8-4ab9-9e93-713d63debf7b\",\r\n            //             question: \"The restaurant was so crowded that we had to wait for about an hour to get a table, but the food was definitely worth the wait.\",\r\n            //             answer: \"\",\r\n            //             score: 0,\r\n            //             solution: \"\"\r\n            //         },\r\n            //         {\r\n            //             id: \"9c1b08be-8a35-414e-9c63-a86df5e78801\",\r\n            //             question: \"My grandmother, who lives in the countryside, loves to grow her own vegetables and fruits in her large garden.\",\r\n            //             answer: \"\",\r\n            //             score: 0,\r\n            //             solution: \"\"\r\n            //         }\r\n            //     ],\r\n            //     language: \"English\"\r\n            // }\r\n            tokenizeTranslations(data, tokenizer);\r\n        } catch (e) {\r\n            console.error('Error fetching translation question:', e);\r\n            error = true;\r\n        }\r\n    });\r\n\r\n    function reloadPage() {\r\n        window.location.reload()\r\n    }\r\n\r\n    function reloadPageFromError() {\r\n        sessionStorage.removeItem(\"translations\")\r\n        reloadPage()\r\n    }\r\n\r\n    function handleHome() {\r\n        navigate('/')\r\n    }\r\n\r\n    function handleLogOut() {\r\n        setTimeout(() => navigate('/'), 750)\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        // localStorage.removeItem('difficulty');\r\n        // localStorage.removeItem('from_language');\r\n        // localStorage.removeItem('jwt_token');\r\n        // localStorage.removeItem('uid');\r\n    }\r\n</script>\r\n\r\n<style>\r\n    h1 {\r\n        margin: 0%;\r\n        padding: 0%;\r\n        font-family: Meiryo, Yu Gothic, sans-serif;\r\n    }\r\n\r\n    .error-header {\r\n\t\tfont-size: clamp(25px, 3vw, 35px);\r\n    }\r\n\r\n    .button-container {\r\n        display: flexbox;\r\n    }\r\n\r\n    .button-container-logout {\r\n        width: 15rem;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-left: 55vw;\r\n        gap: 5%;\r\n    }\r\n\r\n</style>\r\n\r\n<main>\r\n    {#if error}\r\n        <!-- Error Page -->\r\n        <div>\r\n            <h1 class=\"error-header\">An error has occurred.</h1>\r\n            <div class=\"button-container\">\r\n                <Button on:click={reloadPageFromError} text=\"再試行\"/>\r\n                <Button style=\"error\" on:click={handleHome} text=\"ホーム\"/>\r\n            </div>\r\n        </div>\r\n    {:else if data === null}\r\n        <!-- Loading Page -->\r\n        <Loading />\r\n    {:else}\r\n        <!-- Practice Page -->\r\n        <div class=\"button-container-logout\">\r\n            <Button style=\"home\" on:click={handleHome} text=\"ホーム\"/>\r\n            <Button style=\"logout\" on:click={handleLogOut} text=\"ログアウト\"/>\r\n        </div>\r\n        <PracticeInput translations={data} tokenizer={tokenizer}/>\r\n    {/if}   \r\n</main>","<!-- src/App.svelte -->\n<script>\n\timport './global.css';  // Import the global stylesheet\n    import { Router, Route } from 'svelte-routing';\n    import Home from './pages/Home.svelte';\n    import PracticeTranslation from './pages/PracticeTranslation.svelte';\n</script>\n\n<Router>\n    <Route path=\"/\" component={Home} />\n    <Route path=\"/practice\" component={PracticeTranslation} />\n</Router>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","removeProperty","setProperty","custom_event","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","construct_svelte_component","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","getContext","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","handle_promise","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","get_spread_object","spread_props","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","splice","$set","$$props","obj","$$set","keys","LOCATION","ROUTER","HISTORY","PARAM","segmentize","uri","replace","stripSlashes","string","rankRoute","route","score","default","path","reduce","segment","test","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","dynamicMatch","exec","combinePaths","basepath","canUseDOM","switch_instance_spread_levels","levels","updates","to_null_out","accounted_for","n","if_block","create_if_block","routeParams","routeProps","registerRoute","unregisterRoute","activeRoute","$activeRoute","$$invalidate","toString","startsWith","preserveScroll","scrollTo","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","isArray","stores_array","auto","started","values","cleanup","sync","unsubscribers","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replaceState","pushState","activeElement","blur","createHistory","initialPathname","stack","pathname","search","states","entries","_","createMemorySource","previous_key","div","animation_name","config","running","go","easing","tick","css","start_time","end_time","end","group","reset","url","viewtransition","locationContext","routerContext","hasActiveRoute","base","routerBase","$base","_path","matchingRoute","$location","rs","bestMatch","$routes","vt","h1","button","call","defaultPrevented","createEventDispatcher","loading","footer","headers","Headers","signInUser","async","body","response","fetch","method","JSON","stringify","setSignInRequestOptions","json","showError","div2","h30","input0","email","h31","input1","password","div1","div0","clicked","showSignInError","userCreds","loginData","localStorage","setItem","jwt","reload","console","log","isTokenPresentAndValid","getItem","payload","parse","atob","currentTime","exp","handleLogOut","div4","div3","main","sessionStorage","setTimeout","isLoggedIn","typeOf","toLowerCase","isEmpty","isCharInRange","char","code","TO_KANA_METHODS","HIRAGANA","KATAKANA","ROMANIZATIONS","DEFAULT_OPTIONS","useObsoleteKana","passRomaji","upcaseKatakana","IMEMode","convertLongVowelMark","romanization","LATIN_UPPERCASE_START","LATIN_UPPERCASE_END","HIRAGANA_START","HIRAGANA_END","KATAKANA_START","KATAKANA_END","KANJI_START","KANJI_END","KANJI_ITERATION_MARK","PROLONGED_SOUND_MARK","KANA_SLASH_DOT","ROMAJI_RANGES","EN_PUNCTUATION_RANGES","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","cache","memoized","newArgs","_i","arguments","lastThis","lastArgs","lastResult","apply","prototype","hasOwnProperty","find","iter","dequal","foo","bar","ctor","tmp","constructor","getTime","RegExp","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","mergeWithDefaultOptions","opts","applyMapping","mapping","convertEnding","newChunk","remaining","currentCursor","firstChar","charAt","tree","lastCursor","concat","subtree","nextChar","nextSubtree","transform","endOfBranch","getSubTreeOf","correctSubTree","createCustomMapping","customMap","customTree","roma","kana","subTree","transformMap","mapSubtree","customSubtree","newSubtree","mergeCustomMapping","customMapping","BASIC_KUNREI","u","s","h","y","w","g","z","v","SPECIAL_SYMBOLS$1","CONSONANTS","q","SMALL_Y$1","ya","yi","yu","ye","yo","SMALL_VOWELS","ALIASES","sh","ch","cy","chy","shy","j","jy","shi","chi","tsu","ji","fu","SMALL_LETTERS","tu","wa","ka","ke","SPECIAL_CASES","wu","wi","we","kwa","whu","tha","thu","tho","dha","dhu","dho","AIUEO_CONSTRUCTIONS","wh","kw","qw","gw","sw","ts","th","tw","dh","dw","fw","createRomajiToKanaMap$1","kanaTree","subtreeOf","addTsu","tsuTree","consonant","yKana","symbol","jsymbol","aiueoKana","vowel","nChar","alternative","allExceptLast","last","kunreiRoma","chars","xSubtree","list","alt","altRoma","prefix","freeze","romajiToKanaMap","USE_OBSOLETE_KANA_MAP","isCharUpperCase","isCharLongDash","isCharSlashDot","isCharHiragana","createRomajiToKanaMap","customKanaMapping","mapCopy","IME_MODE_MAP","toKana","splitIntoConvertedKana","kanaToken","enforceHiragana","enforceKatakana","every","kata","kataChar","String","fromCharCode","hiraganaToKatakana","isRomaji","allowed","augmented","isRoma","some","isCharRomaji","isCharKatakana","isHiragana","isKatakana","isCharKanji","isCharIterationMark","isKanji","isCharInitialLongDash","isCharInnerLongDash","isKanaAsSymbol","includes","LONG_VOWELS","katakanaToHiragana","toRomaji","isDestinationRomaji","previousKana","hira","romaji","hiraChar","kanaToHepburnMap","BASIC_ROMAJI","SPECIAL_SYMBOLS","AMBIGUOUS_VOWELS","SMALL_Y","SMALL_Y_EXTRA","SMALL_AIUEO","YOON_KANA","YOON_EXCEPTIONS","SMALL_KANA","SOKUON_WHITELIST","getKanaToHepburnTree","romajiTree","setTrans","transliteration","firstRomajiChar","yRoma","resolveTsu","createKanaToHepburnMap","createKanaToRomajiMap","customRomajiMapping","getKanaToRomajiTree","splitIntoRomaji","romajiToken","toUpperCase","toHiragana","passKanji","hasKanji","isMixed","isCharEnglishPunctuation","backendUrl","getQuestionUrl","markQuestionUrl","setHeaders","Authorization","getTranslationQuestion","fromLanguage","difficulty","subject","request","japanese_level","from_language","trim","getQuestionRequestOptions","getTranslationMark","translations","sendTranslations","structuredClone","pair","sentence_pairs","tokenized_question","getMarkRequestOptions","markedTranslations","matchPair","id","language","tokenizeTranslations","tokenizer","tokenized_sentence_pairs","tokenized_sentence","tokenize","question","solution","hiragana_reading","wanakana.toHiragana","reading","tokenized_solution","span","span0","span1","span2","_inputs","inputs","input_id_value","label_1","label_1_for_value","t1","t1_value","create_if_block_1","label","design","fontSize","checked","uniqueID","floor","random","__value","p0","p1","childFunction","trackColor","t_value","ruby","t0","t0_value","rt","create_if_block_2","t4","t4_value","handleDifficultyChange","getNextFromLanguage","handleSwapFromLanguage","handleRefreshQuestions","each_value","h2","removeItem","isMarking","showSolution","showFurigana","handleInput","answer","nextPairs","wanakana.isKanji","handleSubjectInput","reloadPageFromError","reject","kuromoji","builder","dicPath","build","err","builtTokenizer","storageData","Home","PracticeTranslation"],"mappings":"gCAAA,SAASA,IAAU,CACnB,MAAMC,EAAWC,GAAKA,EACtB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,CACX,CAWA,SAASG,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CAoBA,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOrB,EAEX,MAAMuB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,CAC3D,CAMA,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,GAClD,CACA,SAASI,EAAYC,EAAYC,EAAKC,EAAS1B,GAC3C,GAAIwB,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAC5D,OAAOwB,EAAW,GAAGG,EACxB,CACL,CACA,SAASC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAChD,OAAOwB,EAAW,IAAMxB,EAClBL,EAAO+B,EAAQD,IAAII,QAASL,EAAW,GAAGxB,EAAGyB,KAC7CC,EAAQD,GAClB,CACA,SAASK,EAAiBN,EAAYE,EAASK,EAAO/B,GAClD,GAAIwB,EAAW,IAAMxB,EAAI,CACrB,MAAMgC,EAAOR,EAAW,GAAGxB,EAAG+B,IAC9B,QAAsBE,IAAlBP,EAAQK,MACR,OAAOC,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIX,EAAQK,MAAMO,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKb,EAAQK,MAAMQ,GAAKP,EAAKO,GAExC,OAAOL,CACV,CACD,OAAOR,EAAQK,MAAQC,CAC1B,CACD,OAAON,EAAQK,KACnB,CACA,SAASS,EAAiBC,EAAMC,EAAiBjB,EAAKC,EAASiB,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAejB,EAAiBc,EAAiBjB,EAAKC,EAASkB,GACrEH,EAAKK,EAAED,EAAcF,EACxB,CACL,CAKA,SAASI,EAAyBrB,GAC9B,GAAIA,EAAQD,IAAIa,OAAS,GAAI,CACzB,MAAMP,EAAQ,GACRO,EAASZ,EAAQD,IAAIa,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBR,EAAMQ,IAAM,EAEhB,OAAOR,CACV,CACD,OAAQ,CACZ,CACA,SAASiB,EAAuBC,GAC5B,MAAMC,EAAS,CAAA,EACf,IAAK,MAAMpD,KAAKmD,EACC,MAATnD,EAAE,KACFoD,EAAOpD,GAAKmD,EAAMnD,IAC1B,OAAOoD,CACX,CA0CA,MAAMC,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMjE,EASxD,MAAMmE,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMrD,SAAQwD,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,IACR,IAEc,IAAfN,EAAMO,MACNV,EAAIK,EACZ,CAWA,SAASM,EAAKhD,GACV,IAAI2C,EAGJ,OAFmB,IAAfH,EAAMO,MACNV,EAAIK,GACD,CACHO,QAAS,IAAIC,SAAQC,IACjBX,EAAMY,IAAIT,EAAO,CAAEC,EAAG5C,EAAU8C,EAAGK,GAAU,IAEjD,KAAAE,GACIb,EAAMK,OAAOF,EAChB,EAET,CA6IA,SAASW,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAUA,SAASE,EAAmBF,GACxB,IAAKA,EACD,OAAOG,SACX,MAAMC,EAAOJ,EAAKK,YAAcL,EAAKK,cAAgBL,EAAKM,cAC1D,OAAIF,GAAQA,EAAKG,KACNH,EAEJJ,EAAKM,aAChB,CACA,SAASE,EAAwBR,GAC7B,MAAMS,EAAgBC,EAAQ,SAE9B,OAEJ,SAA2BV,EAAMW,GAC7Bb,EAAOE,EAAKY,MAAQZ,EAAMW,GACnBA,EAAME,KACjB,CANIC,CAAkBZ,EAAmBF,GAAOS,GACrCA,EAAcI,KACzB,CA6BA,SAASE,EAAOhB,EAAQC,EAAMgB,GAC1BjB,EAAOkB,aAAajB,EAAMgB,GAAU,KACxC,CASA,SAASE,EAAOlB,GACRA,EAAKmB,YACLnB,EAAKmB,WAAWC,YAAYpB,EAEpC,CACA,SAASqB,EAAaC,EAAYC,GAC9B,IAAK,IAAI3D,EAAI,EAAGA,EAAI0D,EAAW3D,OAAQC,GAAK,EACpC0D,EAAW1D,IACX0D,EAAW1D,GAAG4D,EAAED,EAE5B,CACA,SAASb,EAAQe,GACb,OAAOtB,SAASuB,cAAcD,EAClC,CAmBA,SAASE,EAAKC,GACV,OAAOzB,SAAS0B,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CAIA,SAASK,EAAOhC,EAAMiC,EAAOC,EAASC,GAElC,OADAnC,EAAKoC,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnC,EAAKqC,oBAAoBJ,EAAOC,EAASC,EAC1D,CAoCA,SAASG,EAAKtC,EAAMuC,EAAWC,GACd,MAATA,EACAxC,EAAKyC,gBAAgBF,GAChBvC,EAAK0C,aAAaH,KAAeC,GACtCxC,EAAK2C,aAAaJ,EAAWC,EACrC,CAsPA,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IAElBD,EAAKC,KAAOA,EAChB,CAeA,SAASiB,EAAgBC,EAAON,GAC5BM,EAAMN,MAAiB,MAATA,EAAgB,GAAKA,CACvC,CASA,SAASO,EAAU/C,EAAMgD,EAAKR,EAAOS,GACpB,MAATT,EACAxC,EAAKW,MAAMuC,eAAeF,GAG1BhD,EAAKW,MAAMwC,YAAYH,EAAKR,EAAOS,EAAY,YAAc,GAErE,CAwFA,SAASG,EAAaC,EAAMC,GAAQC,QAAEA,GAAU,EAAKC,WAAEA,GAAa,GAAU,IAC1E,MAAMC,EAAItD,SAASuD,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,EAAME,EAASC,EAAYF,GACtCG,CACX,CAkGA,SAASG,EAA2BrH,EAAW+B,GAC3C,OAAO,IAAI/B,EAAU+B,EACzB,CAIA,MAAMuF,EAAiB,IAAIC,IAC3B,IAmIIC,EAnIAC,EAAS,EAcb,SAASC,EAAYjE,EAAMjE,EAAGC,EAAGkI,EAAUC,EAAOC,EAAM/I,EAAIgJ,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIpG,EAAI,EAAGA,GAAK,EAAGA,GAAKmG,EAAM,CAC/B,MAAME,EAAIzI,GAAKC,EAAID,GAAKqI,EAAKjG,GAC7BoG,GAAiB,IAAJpG,EAAU,KAAK9C,EAAGmJ,EAAG,EAAIA,OACzC,CACD,MAAMC,EAAOF,EAAY,SAASlJ,EAAGW,EAAG,EAAIA,SACtCyF,EAAO,YApBjB,SAAciD,GACV,IAAIC,EAAO,KACP/G,EAAI8G,EAAI/G,OACZ,KAAOC,KACH+G,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAWhH,GACjD,OAAO+G,IAAS,CACpB,CAc6BA,CAAKF,MAASJ,IACjCQ,EAAM3E,EAAmBF,IACzB8E,WAAEA,EAAUC,MAAEA,GAAUlB,EAAemB,IAAIH,IAfrD,SAAkCA,EAAK7E,GACnC,MAAMiF,EAAO,CAAEH,WAAYtE,EAAwBR,GAAO+E,MAAO,CAAA,GAEjE,OADAlB,EAAeqB,IAAIL,EAAKI,GACjBA,CACX,CAW6DE,CAAyBN,EAAK7E,GAClF+E,EAAMtD,KACPsD,EAAMtD,IAAQ,EACdqD,EAAWM,WAAW,cAAc3D,KAAQgD,IAAQK,EAAWO,SAAS1H,SAE5E,MAAM2H,EAAYtF,EAAKW,MAAM2E,WAAa,GAG1C,OAFAtF,EAAKW,MAAM2E,UAAY,GAAGA,EAAY,GAAGA,MAAgB,KAAK7D,KAAQyC,cAAqBC,aAC3FH,GAAU,EACHvC,CACX,CACA,SAAS8D,EAAYvF,EAAMyB,GACvB,MAAM+D,GAAYxF,EAAKW,MAAM2E,WAAa,IAAIG,MAAM,MAC9CC,EAAOF,EAASG,OAAOlE,EACvBmE,GAAQA,EAAKC,QAAQpE,GAAQ,EAC7BmE,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAAS7H,OAAS+H,EAAK/H,OACnCmI,IACA9F,EAAKW,MAAM2E,UAAYI,EAAKK,KAAK,MACjC/B,GAAU8B,EACL9B,GAKTnF,GAAI,KACImF,IAEJH,EAAelI,SAAQsJ,IACnB,MAAMe,UAAEA,GAAcf,EAAKH,WAEvBkB,GACA9E,EAAO8E,EAAU,IAEzBnC,EAAeoC,QAAO,IAX9B,CAqFA,SAASC,EAAsB3J,GAC3BwH,EAAoBxH,CACxB,CACA,SAAS4J,IACL,IAAKpC,EACD,MAAM,IAAIqC,MAAM,oDACpB,OAAOrC,CACX,CAoBA,SAASsC,EAAQhL,GACb8K,IAAwB1J,GAAG6J,SAAS3J,KAAKtB,EAC7C,CAyDA,SAASkL,EAAWvD,EAAKwD,GAErB,OADAL,IAAwB1J,GAAG+J,QAAQtB,IAAIlC,EAAKwD,GACrCA,CACX,CAOA,SAASC,EAAWzD,GAChB,OAAOmD,IAAwB1J,GAAG+J,QAAQxB,IAAIhC,EAClD,CA+BA,MAAM0D,EAAmB,GAEnBC,EAAoB,GAC1B,IAAIC,EAAmB,GACvB,MAAMC,EAAkB,GAClBC,EAAmCpH,QAAQqH,UACjD,IAAIC,IAAmB,EAWvB,SAASC,GAAoB5L,GACzBuL,EAAiBjK,KAAKtB,EAC1B,CAsBA,MAAM6L,GAAiB,IAAIjI,IAC3B,IAwEIQ,GAxEA0H,GAAW,EACf,SAASC,KAIL,GAAiB,IAAbD,GACA,OAEJ,MAAME,EAAkBtD,EACxB,EAAG,CAGC,IACI,KAAOoD,GAAWT,EAAiB/I,QAAQ,CACvC,MAAMpB,EAAYmK,EAAiBS,IACnCA,KACAjB,EAAsB3J,GACtB+K,GAAO/K,EAAUE,GACpB,CACJ,CACD,MAAOgH,GAIH,MAFAiD,EAAiB/I,OAAS,EAC1BwJ,GAAW,EACL1D,CACT,CAID,IAHAyC,EAAsB,MACtBQ,EAAiB/I,OAAS,EAC1BwJ,GAAW,EACJR,EAAkBhJ,QACrBgJ,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAI/I,EAAI,EAAGA,EAAIgJ,EAAiBjJ,OAAQC,GAAK,EAAG,CACjD,MAAMpB,EAAWoK,EAAiBhJ,GAC7BsJ,GAAeM,IAAIhL,KAEpB0K,GAAetH,IAAIpD,GACnBA,IAEP,CACDoK,EAAiBjJ,OAAS,CAClC,OAAa+I,EAAiB/I,QAC1B,KAAOkJ,EAAgBlJ,QACnBkJ,EAAgBU,KAAhBV,GAEJG,IAAmB,EACnBE,GAAejB,QACfC,EAAsBmB,EAC1B,CACA,SAASC,GAAO7K,GACZ,GAAoB,OAAhBA,EAAGgL,SAAmB,CACtBhL,EAAG6K,SACH7L,EAAQgB,EAAGiL,eACX,MAAMtK,EAAQX,EAAGW,MACjBX,EAAGW,MAAQ,EAAE,GACbX,EAAGgL,UAAYhL,EAAGgL,SAAStJ,EAAE1B,EAAGK,IAAKM,GACrCX,EAAGkL,aAAahM,QAAQsL,GAC3B,CACL,CAaA,SAASW,KAOL,OANKnI,KACDA,GAAUC,QAAQqH,UAClBtH,GAAQoI,MAAK,KACTpI,GAAU,IAAI,KAGfA,EACX,CACA,SAASqI,GAAS9H,EAAM+H,EAAWC,GAC/BhI,EAAKiI,cAAc7E,EAAa,GAAG2E,EAAY,QAAU,UAAUC,KACvE,CACA,MAAME,GAAW,IAAIjJ,IACrB,IAAIkJ,GACJ,SAASC,KACLD,GAAS,CACLE,EAAG,EACHjJ,EAAG,GACHjB,EAAGgK,GAEX,CACA,SAASG,KACAH,GAAOE,GACR5M,EAAQ0M,GAAO/I,GAEnB+I,GAASA,GAAOhK,CACpB,CACA,SAASoK,GAAcC,EAAOC,GACtBD,GAASA,EAAM5K,IACfsK,GAAS7I,OAAOmJ,GAChBA,EAAM5K,EAAE6K,GAEhB,CACA,SAASC,GAAeF,EAAOC,EAAOvH,EAAQ1E,GAC1C,GAAIgM,GAASA,EAAMG,EAAG,CAClB,GAAIT,GAASV,IAAIgB,GACb,OACJN,GAAStI,IAAI4I,GACbL,GAAO/I,EAAEzC,MAAK,KACVuL,GAAS7I,OAAOmJ,GACZhM,IACI0E,GACAsH,EAAMhH,EAAE,GACZhF,IACH,IAELgM,EAAMG,EAAEF,EACX,MACQjM,GACLA,GAER,CACA,MAAMoM,GAAkB,CAAE1E,SAAU,GAqOpC,SAAS2E,GAAepJ,EAASwF,GAC7B,MAAM6D,EAAQ7D,EAAK6D,MAAQ,GAC3B,SAASxB,EAAOjE,EAAM0F,EAAO/F,EAAKR,GAC9B,GAAIyC,EAAK6D,QAAUA,EACf,OACJ7D,EAAK+D,SAAWxG,EAChB,IAAIyG,EAAYhE,EAAKnI,SACTQ,IAAR0F,IACAiG,EAAYA,EAAU/L,QACtB+L,EAAUjG,GAAOR,GAErB,MAAMgG,EAAQnF,IAAS4B,EAAKiE,QAAU7F,GAAM4F,GAC5C,IAAIE,GAAc,EACdlE,EAAKuD,QACDvD,EAAKmE,OACLnE,EAAKmE,OAAOzN,SAAQ,CAAC6M,EAAO5K,KACpBA,IAAMmL,GAASP,IACfJ,KACAM,GAAeF,EAAO,EAAG,GAAG,KACpBvD,EAAKmE,OAAOxL,KAAO4K,IACnBvD,EAAKmE,OAAOxL,GAAK,KACpB,IAEL0K,KACH,IAILrD,EAAKuD,MAAMhH,EAAE,GAEjBgH,EAAMpJ,IACNmJ,GAAcC,EAAO,GACrBA,EAAMa,EAAEpE,EAAKqE,QAASrE,EAAKjE,QAC3BmI,GAAc,GAElBlE,EAAKuD,MAAQA,EACTvD,EAAKmE,SACLnE,EAAKmE,OAAOL,GAASP,GACrBW,GACA/B,IAEP,CACD,KA3oDgB5E,EA2oDD/C,IA1oDqB,iBAAV+C,GAAuC,mBAAVA,GAA+C,mBAAfA,EAAMqF,KA8pDxF,CACD,GAAI5C,EAAKiE,UAAYjE,EAAK4C,KAEtB,OADAP,EAAOrC,EAAK4C,KAAM,EAAG5C,EAAKzC,MAAO/C,IAC1B,EAEXwF,EAAK+D,SAAWvJ,CACnB,KA1BwB,CACrB,MAAMsE,EAAoBoC,IAc1B,GAbA1G,EAAQoI,MAAKrF,IACT0D,EAAsBnC,GACtBuD,EAAOrC,EAAK4C,KAAM,EAAG5C,EAAKzC,MAAOA,GACjC0D,EAAsB,KAAK,IAC5BqD,IAIC,GAHArD,EAAsBnC,GACtBuD,EAAOrC,EAAKuE,MAAO,EAAGvE,EAAKsE,MAAOA,GAClCrD,EAAsB,OACjBjB,EAAKwE,SACN,MAAMF,CACT,IAGDtE,EAAKiE,UAAYjE,EAAKyE,QAEtB,OADApC,EAAOrC,EAAKyE,QAAS,IACd,CAEd,CA9pDL,IAAoBlH,CAsqDpB,CAwJA,SAASmH,GAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,EACtF,CA8NA,SAASC,GAAiBrB,GACtBA,GAASA,EAAMpJ,GACnB,CAIA,SAAS0K,GAAgBvN,EAAWwD,EAAQiB,EAAQ+I,GAChD,MAAMtC,SAAEA,EAAQE,aAAEA,GAAiBpL,EAAUE,GAC7CgL,GAAYA,EAAS4B,EAAEtJ,EAAQiB,GAC1B+I,GAED9C,IAAoB,KAChB,MAAM+C,EAAiBzN,EAAUE,GAAG6J,SAAS2D,IAAI7O,GAAKuK,OAAO/J,GAIzDW,EAAUE,GAAGC,WACbH,EAAUE,GAAGC,WAAWC,QAAQqN,GAKhCvO,EAAQuO,GAEZzN,EAAUE,GAAG6J,SAAW,EAAE,IAGlCqB,EAAahM,QAAQsL,GACzB,CACA,SAASiD,GAAkB3N,EAAWgF,GAClC,MAAM9E,EAAKF,EAAUE,GACD,OAAhBA,EAAGgL,YA9vBX,SAAgC/L,GAC5B,MAAMyO,EAAW,GACXC,EAAU,GAChBxD,EAAiBjL,SAASyD,IAA0B,IAApB1D,EAAImK,QAAQzG,GAAY+K,EAASxN,KAAKyC,GAAKgL,EAAQzN,KAAKyC,KACxFgL,EAAQzO,SAASyD,GAAMA,MACvBwH,EAAmBuD,CACvB,CAyvBQE,CAAuB5N,EAAGkL,cAC1BlM,EAAQgB,EAAGC,YACXD,EAAGgL,UAAYhL,EAAGgL,SAASjG,EAAED,GAG7B9E,EAAGC,WAAaD,EAAGgL,SAAW,KAC9BhL,EAAGK,IAAM,GAEjB,CACA,SAASwN,GAAW/N,EAAWqB,IACI,IAA3BrB,EAAUE,GAAGW,MAAM,KACnBsJ,EAAiB/J,KAAKJ,GA52BrByK,KACDA,IAAmB,EACnBF,EAAiBe,KAAKT,KA42BtB7K,EAAUE,GAAGW,MAAMmN,KAAK,IAE5BhO,EAAUE,GAAGW,MAAOQ,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAAS4M,GAAKjO,EAAW4F,EAASsI,EAAUC,EAAiBC,EAAWrM,EAAOsM,EAAexN,EAAQ,EAAE,IACpG,MAAMyN,EAAmB9G,EACzBmC,EAAsB3J,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtBgL,SAAU,KACV3K,IAAK,GAELwB,QACAgJ,OAAQzM,EACR8P,YACAG,MAAOxP,IAEPgL,SAAU,GACV5J,WAAY,GACZqO,cAAe,GACfrD,cAAe,GACfC,aAAc,GACdnB,QAAS,IAAI1C,IAAI3B,EAAQqE,UAAYqE,EAAmBA,EAAiBpO,GAAG+J,QAAU,KAEtFrK,UAAWb,IACX8B,QACA4N,YAAY,EACZ5K,KAAM+B,EAAQpC,QAAU8K,EAAiBpO,GAAG2D,MAEhDwK,GAAiBA,EAAcnO,EAAG2D,MAClC,IAAI6K,GAAQ,EAkBZ,GAjBAxO,EAAGK,IAAM2N,EACHA,EAASlO,EAAW4F,EAAQ7D,OAAS,CAAE,GAAE,CAACV,EAAGsN,KAAQC,KACnD,MAAM3I,EAAQ2I,EAAKxN,OAASwN,EAAK,GAAKD,EAOtC,OANIzO,EAAGK,KAAO6N,EAAUlO,EAAGK,IAAIc,GAAInB,EAAGK,IAAIc,GAAK4E,MACtC/F,EAAGuO,YAAcvO,EAAGqO,MAAMlN,IAC3BnB,EAAGqO,MAAMlN,GAAG4E,GACZyI,GACAX,GAAW/N,EAAWqB,IAEvBsN,CAAG,IAEZ,GACNzO,EAAG6K,SACH2D,GAAQ,EACRxP,EAAQgB,EAAGiL,eAEXjL,EAAGgL,WAAWiD,GAAkBA,EAAgBjO,EAAGK,KAC/CqF,EAAQpC,OAAQ,CAChB,GAAIoC,EAAQiJ,QAAS,CAEjB,MAAMC,EAvhDlB,SAAkB3K,GACd,OAAO4K,MAAMC,KAAK7K,EAAQ8K,WAC9B,CAqhD0BC,CAAStJ,EAAQpC,QAE/BtD,EAAGgL,UAAYhL,EAAGgL,SAASiE,EAAEL,GAC7BA,EAAM1P,QAAQuF,EACjB,MAGGzE,EAAGgL,UAAYhL,EAAGgL,SAASrI,IAE3B+C,EAAQwJ,OACRpD,GAAchM,EAAUE,GAAGgL,UAC/BqC,GAAgBvN,EAAW4F,EAAQpC,OAAQoC,EAAQnB,OAAQmB,EAAQ4H,eAEnE3C,IACH,CACDlB,EAAsB2E,EAC1B,CAoDA,MAAMe,GACF,QAAAC,GACI3B,GAAkB4B,KAAM,GACxBA,KAAKD,SAAWhR,CACnB,CACD,GAAAkR,CAAI1I,EAAM7G,GACN,IAAKZ,EAAYY,GACb,OAAO3B,EAEX,MAAMsB,EAAa2P,KAAKrP,GAAGN,UAAUkH,KAAUyI,KAAKrP,GAAGN,UAAUkH,GAAQ,IAEzE,OADAlH,EAAUQ,KAAKH,GACR,KACH,MAAMuM,EAAQ5M,EAAU0J,QAAQrJ,IACjB,IAAXuM,GACA5M,EAAU6P,OAAOjD,EAAO,EAAE,CAErC,CACD,IAAAkD,CAAKC,GAhrET,IAAkBC,EAirENL,KAAKM,QAjrECD,EAirEkBD,EAhrEG,IAA5B3Q,OAAO8Q,KAAKF,GAAKxO,UAirEhBmO,KAAKrP,GAAGuO,YAAa,EACrBc,KAAKM,MAAMF,GACXJ,KAAKrP,GAAGuO,YAAa,EAE5B,EChuEE,MAAMsB,GAAW,CAAA,EACXC,GAAS,CAAA,EACTC,GAAU,CAAE,ECCnBC,GAAQ,SAaRC,GAAcC,GAAQA,EAAIC,QAAQ,eAAgB,IAAInH,MAAM,KAM5DoH,GAAgBC,GAAWA,EAAOF,QAAQ,eAAgB,IAO1DG,GAAY,CAACC,EAAOjE,KAmBf,CAAEiE,QAAOC,MAlBFD,EAAME,QACd,EACAR,GAAWM,EAAMG,MAAMC,QAAO,CAACH,EAAOI,KAClCJ,GA7BS,EA+BO,KAAZI,EACAJ,GA5BE,EA6BKR,GAAMa,KAAKD,GAClBJ,GAhCK,EAiCiB,MAAfI,EAAQ,GACfJ,GAASM,EAETN,GArCI,EAwCDA,IACR,GAEclE,UAoCrByE,GAAO,CAACC,EAAQd,KAClB,IAAIe,EACAC,EAEJ,MAAOC,GAAejB,EAAIlH,MAAM,KAC1BoI,EAAcnB,GAAWkB,GACzBE,EAA+B,KAAnBD,EAAY,GACxBE,EAnCS,CAACN,GAChBA,EACKxD,IAAI8C,IACJiB,MAAK,CAACjS,EAAGC,IACND,EAAEkR,MAAQjR,EAAEiR,MAAQ,EAAIlR,EAAEkR,MAAQjR,EAAEiR,OAAS,EAAIlR,EAAEgN,MAAQ/M,EAAE+M,QA+BtDkF,CAAWR,GAE1B,IAAK,IAAI7P,EAAI,EAAG8N,EAAIqC,EAAOpQ,OAAQC,EAAI8N,EAAG9N,IAAK,CAC3C,MAAMoP,EAAQe,EAAOnQ,GAAGoP,MACxB,IAAIkB,GAAS,EAEb,GAAIlB,EAAME,QAAS,CACfS,EAAW,CACPX,QACAmB,OAAQ,CAAE,EACVxB,OAEJ,QACH,CAED,MAAMyB,EAAgB1B,GAAWM,EAAMG,MACjCgB,EAAS,CAAA,EACTzQ,EAAMD,KAAKC,IAAImQ,EAAYlQ,OAAQyQ,EAAczQ,QACvD,IAAIoL,EAAQ,EAEZ,KAAOA,EAAQrL,EAAKqL,IAAS,CACzB,MAAMsF,EAAeD,EAAcrF,GAC7BuF,EAAaT,EAAY9E,GAE/B,GAAIsF,GAAoC,MAApBA,EAAa,GAAY,CAOzCF,EAFqB,MAAjBE,EAAuB,IAAMA,EAAanR,MAAM,IAEhC2Q,EACf3Q,MAAM6L,GACNkB,IAAIsE,oBACJxI,KAAK,KACV,KACH,CAED,QAA0B,IAAfuI,EAA4B,CAInCJ,GAAS,EACT,KACH,CAED,MAAMM,EAAe/B,GAAMgC,KAAKJ,GAEhC,GAAIG,IAAiBV,EAAW,CAC5B,MAAMtL,EAAQ+L,mBAAmBD,GACjCH,EAAOK,EAAa,IAAMhM,CAC1C,MAAmB,GAAI6L,IAAiBC,EAAY,CAIpCJ,GAAS,EACT,KACH,CACJ,CAED,IAAKA,EAAQ,CACTR,EAAQ,CACJV,QACAmB,SACAxB,IAAK,IAAMkB,EAAY3Q,MAAM,EAAG6L,GAAOhD,KAAK,MAEhD,KACH,CACJ,CAED,OAAO2H,GAASC,GAAY,IAAI,EA4E9Be,GAAe,CAACC,EAAUxB,IAC5B,GAAGN,GACU,MAATM,EACMwB,EACA,GAAG9B,GAAa8B,MAAa9B,GAAaM,SAqBlDyB,GAAY,IACI,oBAAXnQ,QACP,aAAcA,QACd,aAAcA,2CCxNI3B,EAAW,4EATxBA,EAAS,GAAA,+pBACFA,EAAS,GAAAmI,4IAATnI,EAAS,KAAA+L,GAAApJ,EAAAwF,IHsoDzB,SAAmCA,EAAMnI,EAAKM,GAC1C,MAAM6L,EAAYnM,EAAII,SAChB8L,SAAEA,GAAa/D,EACjBA,EAAKiE,UAAYjE,EAAK4C,OACtBoB,EAAUhE,EAAKzC,OAASwG,GAExB/D,EAAKiE,UAAYjE,EAAKuE,QACtBP,EAAUhE,EAAKsE,OAASP,GAE5B/D,EAAKuD,MAAMrK,EAAE8K,EAAW7L,EAC5B,+MG7oDoB,MAAAyR,EAAA,CAAA/R,KACAA,EAAU,UAFRA,EAAiB,KAAEoQ,SAAWpQ,EAAiB,kMH0vDrE,SAA2BgS,EAAQC,GAC/B,MAAMzH,EAAS,CAAA,EACT0H,EAAc,CAAA,EACdC,EAAgB,CAAElS,QAAS,GACjC,IAAIa,EAAIkR,EAAOnR,OACf,KAAOC,KAAK,CACR,MAAM+K,EAAImG,EAAOlR,GACXsR,EAAIH,EAAQnR,GAClB,GAAIsR,EAAG,CACH,IAAK,MAAMlM,KAAO2F,EACR3F,KAAOkM,IACTF,EAAYhM,GAAO,GAE3B,IAAK,MAAMA,KAAOkM,EACTD,EAAcjM,KACfsE,EAAOtE,GAAOkM,EAAElM,GAChBiM,EAAcjM,GAAO,GAG7B8L,EAAOlR,GAAKsR,CACf,MAEG,IAAK,MAAMlM,KAAO2F,EACdsG,EAAcjM,GAAO,CAGhC,CACD,IAAK,MAAMA,KAAOgM,EACRhM,KAAOsE,IACTA,EAAOtE,QAAO1F,GAEtB,OAAOgK,CACX,aGzxDoBxK,EAAW,YACXA,EAAU,wBAFRA,EAAiB,KAAEoQ,SAAWpQ,EAAiB,KAAA,8UAJhEqS,EAAArS,EAAgB,IAAAA,EAAa,GAAAkQ,QAAUlQ,EAAK,IAAAsS,GAAAtS,yEAA5CA,EAAgB,IAAAA,EAAa,GAAAkQ,QAAUlQ,EAAK,uOApClCqQ,KAAAA,EAAO,IAAEjB,GACT3P,UAAAA,EAAY,MAAI2P,EAEvBmD,EAAW,CAAA,EACXC,EAAU,CAAA,EAEN,MAAAC,cAAAA,EAAaC,gBAAEA,EAAeC,YAAEA,GAAgBhJ,EAAW8F,+BAE7DS,EAAK,CACPG,OAGAD,QAAkB,KAATC,GH2nCjB,IAAmB9R,SG1mCfkU,EAAcvC,GH0mCC3R,EGxmCN,KACLmU,EAAgBxC,EAAK,EHwmCzB7G,IAAwB1J,GAAGC,WAAWC,KAAKtB,0JGznCpCqU,GAAgBA,EAAa1C,QAAUA,EAAK,KAC/CqC,EAAcK,EAAavB,QAEnB,MAAA5R,UAAW6C,EAAC+N,KAAEA,KAAShC,GAASe,EACxCyD,EAAA,EAAAL,EAAanE,GAET/L,IACIA,EAAEwQ,WAAWC,WAAW,UAAWF,EAAA,EAAApT,EAAY6C,GAC9CuQ,EAAA,EAAApT,EAAY6C,MAGrBwP,OAAgBc,EAAaI,gBAAkBrR,QAAQsR,SAAS,EAAG,oHC5B3E,MAAMC,GAAmB,GAgBzB,SAASC,GAASzN,EAAO0N,EAAQrV,GAC7B,IAAIsV,EACJ,MAAMC,EAAc,IAAInR,IACxB,SAASiG,EAAImL,GACT,GAAIvU,EAAe0G,EAAO6N,KACtB7N,EAAQ6N,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBrS,OACpC,IAAK,MAAM4S,KAAcH,EACrBG,EAAW,KACXP,GAAiBrT,KAAK4T,EAAY/N,GAEtC,GAAI8N,EAAW,CACX,IAAK,IAAI1S,EAAI,EAAGA,EAAIoS,GAAiBrS,OAAQC,GAAK,EAC9CoS,GAAiBpS,GAAG,GAAGoS,GAAiBpS,EAAI,IAEhDoS,GAAiBrS,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAEuH,MAAKoC,OAlBd,SAAgBjM,GACZ6J,EAAI7J,EAAGmH,GACV,EAgBqBvG,UAftB,SAAmBb,EAAKoV,EAAa3V,GACjC,MAAM0V,EAAa,CAACnV,EAAKoV,GAMzB,OALAJ,EAAYxQ,IAAI2Q,GACS,IAArBH,EAAY7Q,OACZ4Q,EAAOD,EAAMhL,IAAQrK,GAEzBO,EAAIoH,GACG,KACH4N,EAAY/Q,OAAOkR,GACM,IAArBH,EAAY7Q,MAAc4Q,IAC1BA,IACAA,EAAO,KACV,CAER,EAEL,CACA,SAASM,GAAQC,EAAQrV,EAAIsV,GACzB,MAAMC,GAAUtF,MAAMuF,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAO1V,EAAGsC,OAAS,EACzB,OAzDqBuS,EAyDWhL,IAC5B,IAAI8L,GAAU,EACd,MAAMC,EAAS,GACf,IAAIvH,EAAU,EACVwH,EAAUrW,EACd,MAAMsW,EAAO,KACT,GAAIzH,EACA,OAEJwH,IACA,MAAM3S,EAASlD,EAAGuV,EAASK,EAAO,GAAKA,EAAQ/L,GAC3C6L,EACA7L,EAAI3G,GAGJ2S,EAAUtV,EAAY2C,GAAUA,EAAS1D,CAC5C,EAECuW,EAAgBN,EAAa7G,KAAI,CAAC/N,EAAO0B,IAAM3B,EAAUC,GAAQsG,IACnEyO,EAAOrT,GAAK4E,EACZkH,KAAa,GAAK9L,GACdoT,GACAG,GACH,IACF,KACCzH,GAAY,GAAK9L,CAAE,MAIvB,OAFAoT,GAAU,EACVG,IACO,WACH1V,EAAQ2V,GACRF,IAIAF,GAAU,CACtB,CAAS,EA5FE,CACH/U,UAAWgU,GAuDCU,EAvDeT,GAAOjU,WAF1C,IAAyBiU,CA+FzB,CClGA,MAAMmB,GAAeC,IACV,IACAA,EAAOC,SACVC,MAAOF,EAAOG,QAAQD,MACtBxO,IAAMsO,EAAOG,QAAQD,OAASF,EAAOG,QAAQD,MAAMxO,KAAQ,YAoF7D0O,GAjFgB,CAACJ,IACnB,MAAMK,EAAY,GAClB,IAAIJ,EAAWF,GAAYC,GAE3B,MAAO,CACH,YAAIC,GACA,OAAOA,CACV,EAED,MAAAvP,CAAO4P,GACHD,EAAUhV,KAAKiV,GAEf,MAAMC,EAAmB,KACrBN,EAAWF,GAAYC,GACvBM,EAAS,CAAEL,WAAUO,OAAQ,OAAQ,EAKzC,OAFAR,EAAOlP,iBAAiB,WAAYyP,GAE7B,KACHP,EAAOjP,oBAAoB,WAAYwP,GACvC,MAAM9I,EAAQ4I,EAAU9L,QAAQ+L,GAChCD,EAAU3F,OAAOjD,EAAO,EAAE,CAEjC,EAED,QAAAgJ,CAASC,GAAIR,MAAEA,EAAK5E,QAAEA,GAAU,EAAKkD,eAAEA,GAAiB,GAAU,IAC9D0B,EAAQ,IAAKA,EAAOxO,IAAKpE,KAAKF,MAAQ,IAEtC,IACQkO,EAAS0E,EAAOG,QAAQQ,aAAaT,EAAO,GAAIQ,GAC/CV,EAAOG,QAAQS,UAAUV,EAAO,GAAIQ,EAC5C,CAAC,MAAOvO,GACL6N,EAAOC,SAAS3E,EAAU,UAAY,UAAUoF,EACnD,CACDT,EAAWF,GAAYC,GACvBK,EAAUhW,SAASiW,GACfA,EAAS,CAAEL,WAAUO,OAAQ,OAAQhC,qBAEzC3P,SAASgS,cAAcC,MAC1B,EACJ,EAwCiBC,CAClBzD,KAAcnQ,OAtCS,EAAC6T,EAAkB,OAC1C,IAAIvJ,EAAQ,EACZ,MAAMwJ,EAAQ,CAAC,CAAEC,SAAUF,EAAiBG,OAAQ,KAC9CC,EAAS,GAEf,MAAO,CACH,YAAInB,GACA,OAAOgB,EAAMxJ,EAChB,EACD,gBAAA3G,CAAiBX,EAAMpG,GAAM,EAC7B,mBAAAgH,CAAoBZ,EAAMpG,GAAM,EAChCoW,QAAS,CACL,WAAIkB,GACA,OAAOJ,CACV,EACD,SAAIxJ,GACA,OAAOA,CACV,EACD,SAAIyI,GACA,OAAOkB,EAAO3J,EACjB,EACD,SAAAmJ,CAAUV,EAAOoB,EAAGjG,GAChB,MAAO6F,EAAUC,EAAS,IAAM9F,EAAIlH,MAAM,KAC1CsD,IACAwJ,EAAM5V,KAAK,CAAE6V,WAAUC,WACvBC,EAAO/V,KAAK6U,EACf,EACD,YAAAS,CAAaT,EAAOoB,EAAGjG,GACnB,MAAO6F,EAAUC,EAAS,IAAM9F,EAAIlH,MAAM,KAC1C8M,EAAMxJ,GAAS,CAAEyJ,WAAUC,UAC3BC,EAAO3J,GAASyI,CACnB,GAER,EAKsBqB,KAErBd,SAAEA,IAAaL,kDC4CJ5U,EAAY,IAAIA,EAAY,GAAC6P,aAAe7P,EAAS,oDAN/CA,EAAY,IAAIA,EAAY,GAAC6P,aAC1B7P,EAAS,uQAJzB,QAAAgW,EAAAhW,KAAU0V,+EAAV,EAAApV,GAAAtB,EAAAgX,EAAAA,EAAAhW,KAAU0V,6PACZzR,EAKMhB,EAAAgT,EAAA/R,gJN6vCd,SAA8BhB,EAAM3E,EAAI8S,GACpC,MAAMhM,EAAU,CAAE4F,UAAW,MAC7B,IAEIiL,EACA7T,EAHA8T,EAAS5X,EAAG2E,EAAMmO,EAAQhM,GAC1B+Q,GAAU,EAGV7O,EAAM,EACV,SAAS6M,IACD8B,GACAzN,EAAYvF,EAAMgT,EACzB,CACD,SAASG,IACL,MAAMhP,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGkP,OAAEA,EAAStY,EAAQuY,KAAEA,EAAOxY,EAAIyY,IAAEA,GAAQL,GAAUrK,GACjF0K,IACAN,EAAiB/O,EAAYjE,EAAM,EAAG,EAAGkE,EAAUC,EAAOiP,EAAQE,EAAKjP,MAC3EgP,EAAK,EAAG,GACR,MAAME,EAAa7U,IAAQyF,EACrBqP,EAAWD,EAAarP,EAC1B/E,GACAA,EAAKU,QACTqT,GAAU,EACVjM,IAAoB,IAAMa,GAAS9H,GAAM,EAAM,WAC/Cb,EAAOK,GAAKd,IACR,GAAIwU,EAAS,CACT,GAAIxU,GAAO8U,EAIP,OAHAH,EAAK,EAAG,GACRvL,GAAS9H,GAAM,EAAM,OACrBkR,IACOgC,GAAU,EAErB,GAAIxU,GAAO6U,EAAY,CACnB,MAAM/O,EAAI4O,GAAQ1U,EAAM6U,GAAcrP,GACtCmP,EAAK7O,EAAG,EAAIA,EACf,CACJ,CACD,OAAO0O,CAAO,GAErB,CACD,IAAIlC,GAAU,EACd,MAAO,CACH,KAAAd,GACQc,IAEJA,GAAU,EACVzL,EAAYvF,GACRpE,EAAYqX,IACZA,EAASA,EAAO9Q,GAChByF,KAAOC,KAAKsL,IAGZA,IAEP,EACD,UAAA3C,GACIQ,GAAU,CACb,EACD,GAAAyC,GACQP,IACAhC,IACAgC,GAAU,EAEjB,EAET,mEACA,SAA+BlT,EAAM3E,EAAI8S,GACrC,MAAMhM,EAAU,CAAE4F,UAAW,OAC7B,IAEIiL,EAFAC,EAAS5X,EAAG2E,EAAMmO,EAAQhM,GAC1B+Q,GAAU,EAEd,MAAMQ,EAAQvL,GAEd,SAASgL,IACL,MAAMhP,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGkP,OAAEA,EAAStY,EAAQuY,KAAEA,EAAOxY,EAAIyY,IAAEA,GAAQL,GAAUrK,GACjF0K,IACAN,EAAiB/O,EAAYjE,EAAM,EAAG,EAAGkE,EAAUC,EAAOiP,EAAQE,IACtE,MAAMC,EAAa7U,IAAQyF,EACrBqP,EAAWD,EAAarP,EAC9B+C,IAAoB,IAAMa,GAAS9H,GAAM,EAAO,WAChDR,GAAKd,IACD,GAAIwU,EAAS,CACT,GAAIxU,GAAO8U,EAQP,OAPAH,EAAK,EAAG,GACRvL,GAAS9H,GAAM,EAAO,SACf0T,EAAMrL,GAGT5M,EAAQiY,EAAMtU,IAEX,EAEX,GAAIV,GAAO6U,EAAY,CACnB,MAAM/O,EAAI4O,GAAQ1U,EAAM6U,GAAcrP,GACtCmP,EAAK,EAAI7O,EAAGA,EACf,CACJ,CACD,OAAO0O,CAAO,GAErB,CAWD,OAtCAQ,EAAMrL,GAAK,EA4BPzM,EAAYqX,GACZrL,KAAOC,MAAK,KAERoL,EAASA,EAAO9Q,GAChBgR,GAAI,IAIRA,IAEG,CACH,GAAAM,CAAIE,GACIA,GAASV,EAAOI,MAChBJ,EAAOI,KAAK,EAAG,GAEfH,IACIF,GACAzN,EAAYvF,EAAMgT,GACtBE,GAAU,EAEjB,EAET,iIM53CKpW,EAAc,GAAA,2WA5HJ6R,SAAAA,EAAW,KAAGzC,GACd0H,IAAAA,EAAM,MAAI1H,GACV2H,eAAAA,EAAiB,MAAI3H,GACrBuF,QAAAA,EAAUC,IAAaxF,EAQlC3F,EAAWiG,GAASiF,SAEdqC,EAAkBrN,EAAW6F,IAC7ByH,EAAgBtN,EAAW8F,IAE3BkB,EAASwC,GAAQ,gCACjBR,EAAcQ,GAAS,2BACzB,IAAA+D,GAAiB,EAIf,MAAAzC,EACFuC,GAAmB7D,GAAS2D,EAAQ,CAAApB,SAAUoB,GAAQnC,EAAQF,+BAM5D,MAAA0C,EAAOF,EACPA,EAAcG,WACdjE,IACI9C,KAAMwB,EACNhC,IAAKgC,gCAGTuF,EAAazD,GAAS,CAAAwD,EAAMxE,IAAW,EAAKwE,EAAMxE,MAE/C,IAAAA,SAAoBwE,QAEjB9G,KAAMwB,GAAasF,SACnBjH,EAAKL,IAAEA,GAAQ8C,EAId,MAAA,CAAAtC,KADIH,EAAME,QAAUyB,EAAW3B,EAAMG,KAAKP,QAAQ,QAAS,IACrDD,MAAG,IAkClB,IAAAmD,GAAiB,SAqBhBgE,IAGDzN,GAAO,IACcoL,EAAQzP,QAAQC,IAC7B0N,EAAA,GAAAG,EAAiB7N,EAAM6N,iBAAkB,GACzCyB,EAASrM,IAAIjD,EAAMsP,SAAQ,MAMnChL,EAAW+F,GAAUiF,IAGzBhL,EAAWgG,GAAM,CACbkD,cACAwE,OACAC,aACA3E,cAvEmBvC,UACXG,KAAMwB,GAAawF,EACrB,IAAAhH,KAAAA,GAASH,EAQJ,GAHXA,EAAMoH,MAAQjH,EACdH,EAAMG,KAAOuB,GAAaC,EAAUxB,GAEd,oBAAX1O,OAAsB,IAIzBuV,EAAc,OAEZ,MAAAK,EAAgB7G,GAAI,CAAER,GAAQsH,EAAU9B,UAE1C6B,IACA5E,EAAYvK,IAAImP,GAChBL,GAAiB,QAGrBvG,EAAOnG,QAAQiN,GAAW,IAAAA,EAAIvH,MAiDlCwC,gBA7CqBxC,IACrBS,EAAOnG,QAAQiN,GAAOA,EAAG5O,QAAQ0C,GAAMA,IAAM2E,KAAK,+NAOrD,OACWG,KAAMwB,GAAawF,EAC3B1G,EAAOnG,QAAQiN,GACXA,EAAGtK,KAAK5B,GACJ9M,OAAOP,OAAOqN,EAAC,CAAI8E,KAAMuB,GAAaC,EAAUtG,EAAE+L,gCAQ7D,CACS,MAAAI,EAAYhH,GAAKiH,EAASH,EAAU9B,UAChD/C,EAAYvK,IAAIsP,MAAgBA,EAAW1E,kBAAkB0E,YA5FjC,CAAAxU,EAAM4S,EAAG7K,WACzB2M,EAAKb,EAAe9L,GACf,MAAW,mBAAX2M,GAAIrZ,GAA0BqZ,EAAGrZ,GAAG2E,EAAM0U,GACzCA,CAAE,sYC2BtB3T,EAAchB,EAAA4U,EAAA3T,YACdD,EAEMhB,EAAAgT,EAAA/R,6KCsGoElE,EAAI,4BAAvDA,EAAK,GAAA,8BAAoCA,EAAO,WAAvEiE,EAAwFhB,EAAA6U,EAAA5T,4BAA/ClE,EAAW,6BAAsBA,EAAI,0BAAvDA,EAAK,GAAA,oDAAoCA,EAAO,wDA/IhE,MAAAgL,ERupCP,WACI,MAAMvL,EAAY4J,IAClB,MAAO,CAAC9C,EAAMC,GAAUE,cAAa,GAAU,MAC3C,MAAMrH,EAAYI,EAAUE,GAAGN,UAAUkH,GACzC,GAAIlH,EAAW,CAGX,MAAM8F,EAAQmB,EAAaC,EAAMC,EAAQ,CAAEE,eAI3C,OAHArH,EAAUe,QAAQvB,SAAQN,IACtBA,EAAGwZ,KAAKtY,EAAW0F,EAAM,KAErBA,EAAM6S,gBACjB,CACD,OAAO,CAAI,CAEnB,CQtqCkBC,GAEN,IAAApT,KAAAA,EAAO,QAAMuK,GACb8I,QAAAA,GAAU,GAAK9I,GACfvL,MAAAA,EAAQ,UAAQuL,8HAG1BpE,EAAS,+NCEX/G,EAEShB,EAAAkV,EAAAjU,mGCfT,MAGMkU,GAAU,IAAIC,QAAQ,CACpB,eAAgB,qBAYlBC,GAAaC,MAAOC,IACtB,MAAMC,QAAiBC,MAhBL,oCAOU,CAACF,IACtB,CACHG,OAAQ,OACRP,QAASA,GACTI,KAAMI,KAAKC,UAAUL,KAKmBM,CAAwBN,IAGpE,aAFiBC,EAASM,MAEnBjU,mDCEqC9E,EAAI,4BAAnCA,EAAS,GAAG,WAAa,IAAE,2BAA5CiE,EAAyDhB,EAAA5B,EAAA6C,6BAATlE,EAAI,0BAAnCA,EAAS,GAAG,WAAa,IAAE,8EAnB7B,IAAAgZ,UAAAA,GAAY,GAAK5J,GACjBvK,KAAAA,EAAO,4EAA0EuK,yRCkGpCpP,EAAO,oBAA/BA,EAAY,+BAExBA,EAAe,2mBAHLA,EAAO,GAAG,gBAAkB,IAAE,oEAPhEiE,EAYMhB,EAAAgW,EAAA/U,GAXFlB,EAAuCiW,EAAAC,UACvClW,EAA6FiW,EAAAE,GAAjDpT,EAAAoT,EAAAnZ,KAAUoZ,cAEtDpW,EAA0CiW,EAAAI,UAC1CrW,EAAqGiW,EAAAK,GAAzDvT,EAAAuT,EAAAtZ,KAAUuZ,iBAEtDvW,EAIIiW,EAAAO,uBAFFxW,EAAgCwW,EAAAC,wFAPU,EAAAnZ,GAAA6Y,EAAAzT,QAAA1F,KAAUoZ,OAAVrT,EAAAoT,EAAAnZ,KAAUoZ,OAGV,EAAA9Y,GAAAgZ,EAAA5T,QAAA1F,KAAUuZ,UAAVxT,EAAAuT,EAAAtZ,KAAUuZ,sCAGEvZ,EAAO,2CAE3CA,EAAe,oDAHLA,EAAO,GAAG,gBAAkB,IAAE,wMA/F3D,IAAA0Z,GAAU,EACTC,GAAkB,EAClBC,GACFR,MAAO,GACPG,SAAU,kCAIV1G,EAAA,EAAA6G,GAAU,GACV7G,EAAA,EAAA8G,GAAkB,WAEZE,QAAkBvB,GAAWsB,GACjCE,aAAaC,QAAQ,YAAaF,EAAUG,KAC5CF,aAAaC,QAAQ,MAAOF,EAAUtS,KACtC5F,OAAO8S,SAASwF,eACTxN,GACPoG,EAAA,EAAA8G,GAAkB,GAClB9G,EAAA,EAAA6G,GAAU,GACVQ,QAAQC,IAAI1N,gBAwE8BmN,EAAUR,MAAKpK,KAAAtJ,yBAGfkU,EAAUL,SAAQvK,KAAAtJ,iFCnGlE,SAAS0U,KACL,MAAMpO,EAAQ8N,aAAaO,QAAQ,aAEnC,IAAKrO,EACD,OAAO,EAGX,IAEI,MAAMsO,EAAU1B,KAAK2B,MAAMC,KAAKxO,EAAMrD,MAAM,KAAK,KAG3C8R,EAAc3Y,KAAKF,MAAQ,IACjC,QAAI0Y,EAAQI,IAAMD,EAOrB,CAAC,MAAO9T,GAEL,OAAO,CACV,CACL,2HC0D6CgU,8EAKI3a,EAAY,qEAGNA,EAAY,uFAGAA,EAAY,+fAZvEiE,EAEMhB,EAAAwW,EAAAvV,yBACND,EAWMhB,EAAA2X,EAAA1W,uBATFlB,EAEM4X,EAAApB,uBACNxW,EAEM4X,EAAA3B,uBACNjW,EAEM4X,EAAAC,+yBAlBR7a,EAAU,KAAA,8DADpBiE,EAuBOhB,EAAA6X,EAAA5W,mPApEMyW,KACLb,aAAa3Q,QACb4R,eAAe5R,QACf6R,gBAAiBrZ,OAAO8S,SAASwF,UAAU,wBAjB3C,IAAAgB,GAAa,SAGjB1R,GAAO,KAEmB,oBAAX5H,SACFyY,KAGDvH,EAAA,EAAAoI,GAAa,GAFbpI,EAAA,EAAAoI,GAAa,qBAVrBhG,GAAS,iFCMjB,SAASiG,GAAOxV,GACd,OAAc,OAAVA,EACK,OAELA,IAAUjH,OAAOiH,UACLA,EAET,CAAE,EAACoN,SACPiF,KAAKrS,GACLtF,MAAM,GAAI,GACV+a,aACL,CAOA,SAASC,GAAQpV,GACf,MAAsB,WAAlBkV,GAAOlV,KAGHA,EAAMnF,MAChB,CASA,SAASwa,GAAcC,EAAO,GAAIlI,EAAOuD,GACvC,GAAIyE,GAAQE,GAAO,OAAO,EAC1B,MAAMC,EAAOD,EAAKxT,WAAW,GAC7B,OAAOsL,GAASmI,GAAQA,GAAQ5E,CAClC,CAIA,MAAM6E,GAAkB,CACtBC,SAAU,aACVC,SAAU,cAGNC,GACK,UAkCLC,GAAkB,CACtBC,iBAAiB,EACjBC,YAAY,EACZC,gBAAgB,EAChBC,SAAS,EACTC,sBAAsB,EACtBC,aAAcP,IAEVQ,GAAwB,GACxBC,GAAsB,GAKtBC,GAAiB,MACjBC,GAAe,MACfC,GAAiB,MACjBC,GAAe,MACfC,GAAc,MACdC,GAAY,MAEZC,GAAuB,MACvBC,GAAuB,MACvBC,GAAiB,MA+DjBC,GAAgB,CAbC,CAAC,EAAQ,KAE9B,CAAC,IAAQ,KACT,CAAC,IAAQ,KACT,CAAC,IAAQ,KACT,CAAC,IAAQ,KACT,CAAC,IAAQ,MASLC,GAAwB,CAC5B,CAAC,GAAM,IACP,CAAC,GAAM,IACP,CAAC,GAAM,IACP,CAAC,IAAM,KAVP,CAAC,KAAQ,MACT,CAAC,KAAQ,OAqDX,IAAIC,GAAYC,OAAOC,OACnB,SAAkBxX,GACd,MAAwB,iBAAVA,GAAsBA,GAAUA,CACtD,EAUA,SAASyX,GAAeC,EAAWC,GAC/B,GAAID,EAAUvc,SAAWwc,EAAWxc,OAChC,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIsc,EAAUvc,OAAQC,IAClC,GAdSwc,EAcIF,EAAUtc,GAdPyc,EAcWF,EAAWvc,KAbtCwc,IAAUC,GAGVP,GAAUM,IAAUN,GAAUO,IAW1B,OAAO,EAfnB,IAAiBD,EAAOC,EAkBpB,OAAO,CACX,CAEA,SAASC,GAAWC,EAAUC,QACV,IAAZA,IAAsBA,EAAUP,IACpC,IAAIQ,EAAQ,KACZ,SAASC,IAEL,IADA,IAAIC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAUld,OAAQid,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,GAAIH,GAASA,EAAMK,WAAahP,MAAQ0O,EAAQG,EAASF,EAAMM,UAC3D,OAAON,EAAMO,WAEjB,IAAIA,EAAaT,EAASU,MAAMnP,KAAM6O,GAMtC,OALAF,EAAQ,CACJO,WAAYA,EACZD,SAAUJ,EACVG,SAAUhP,MAEPkP,CACV,CAID,OAHAN,EAASzU,MAAQ,WACbwU,EAAQ,IAChB,EACWC,CACX,CAEA,IAAIlT,GAAMjM,OAAO2f,UAAUC,eAE3B,SAASC,GAAKC,EAAMpgB,EAAK+H,GACxB,IAAKA,KAAOqY,EAAKhP,OAChB,GAAIiP,GAAOtY,EAAK/H,GAAM,OAAO+H,CAE/B,CAEA,SAASsY,GAAOC,EAAKC,GACpB,IAAIC,EAAMje,EAAKke,EACf,GAAIH,IAAQC,EAAK,OAAO,EAExB,GAAID,GAAOC,IAAQC,EAAKF,EAAII,eAAiBH,EAAIG,YAAa,CAC7D,GAAIF,IAAS7c,KAAM,OAAO2c,EAAIK,YAAcJ,EAAII,UAChD,GAAIH,IAASI,OAAQ,OAAON,EAAI3L,aAAe4L,EAAI5L,WAEnD,GAAI6L,IAASnQ,MAAO,CACnB,IAAK9N,EAAI+d,EAAI5d,UAAY6d,EAAI7d,OAC5B,KAAOH,KAAS8d,GAAOC,EAAI/d,GAAMge,EAAIhe,MAEtC,OAAgB,IAATA,CACP,CAED,GAAIie,IAASxc,IAAK,CACjB,GAAIsc,EAAIhc,OAASic,EAAIjc,KACpB,OAAO,EAER,IAAK/B,KAAO+d,EAAK,CAEhB,IADAG,EAAMle,IACoB,iBAARke,KACjBA,EAAMN,GAAKI,EAAKE,IACN,OAAO,EAElB,IAAKF,EAAIhU,IAAIkU,GAAM,OAAO,CAC1B,CACD,OAAO,CACP,CAED,GAAID,IAAS3X,IAAK,CACjB,GAAIyX,EAAIhc,OAASic,EAAIjc,KACpB,OAAO,EAER,IAAK/B,KAAO+d,EAAK,CAEhB,IADAG,EAAMle,EAAI,KACgB,iBAARke,KACjBA,EAAMN,GAAKI,EAAKE,IACN,OAAO,EAElB,IAAKJ,GAAO9d,EAAI,GAAIge,EAAIxW,IAAI0W,IAC3B,OAAO,CAER,CACD,OAAO,CACP,CAED,GAAID,IAASK,YACZP,EAAM,IAAIQ,WAAWR,GACrBC,EAAM,IAAIO,WAAWP,QACf,GAAIC,IAASO,SAAU,CAC7B,IAAKxe,EAAI+d,EAAIU,cAAgBT,EAAIS,WAChC,KAAOze,KAAS+d,EAAIW,QAAQ1e,KAASge,EAAIU,QAAQ1e,KAElD,OAAgB,IAATA,CACP,CAED,GAAIse,YAAYK,OAAOZ,GAAM,CAC5B,IAAK/d,EAAI+d,EAAIU,cAAgBT,EAAIS,WAChC,KAAOze,KAAS+d,EAAI/d,KAASge,EAAIhe,KAElC,OAAgB,IAATA,CACP,CAED,IAAKie,GAAuB,iBAARF,EAAkB,CAErC,IAAKE,KADLje,EAAM,EACO+d,EAAK,CACjB,GAAI/T,GAAIqN,KAAK0G,EAAKE,MAAWje,IAAQgK,GAAIqN,KAAK2G,EAAKC,GAAO,OAAO,EACjE,KAAMA,KAAQD,KAASF,GAAOC,EAAIE,GAAOD,EAAIC,IAAQ,OAAO,CAC5D,CACD,OAAOlgB,OAAO8Q,KAAKmP,GAAK7d,SAAWH,CACnC,CACD,CAED,OAAO+d,GAAQA,GAAOC,GAAQA,CAC/B,CAOA,MAAMY,GAA0B,CAACC,EAAO,KAAO9gB,OAAOP,OAAO,CAAE,EAAE0d,GAAiB2D,GAElF,SAASC,GAAaxP,EAAQyP,EAASC,GACrC,MAAMpc,EAAOmc,EAWb,SAASE,EAASC,EAAWC,GAE3B,MAAMC,EAAYF,EAAUG,OAAO,GAEnC,OAAOxF,EACL9b,OAAOP,OAAO,CAAE,GAAI4hB,GAAaxc,EAAKwc,IACtCF,EAAUxf,MAAM,GAChByf,EACAA,EAAgB,EAEnB,CAED,SAAStF,EAAMyF,EAAMJ,EAAWK,EAAYJ,GAC1C,IAAKD,EACH,OAAIF,GAA8C,IAA7BjhB,OAAO8Q,KAAKyQ,GAAMnf,OAG9Bmf,EAAK,IAAM,CAAC,CAACC,EAAYJ,EAAeG,EAAK,MAAQ,GAIvD,CAAC,CAACC,EAAYJ,EAAe,OAGtC,GAAiC,IAA7BphB,OAAO8Q,KAAKyQ,GAAMnf,OACpB,MAAO,CAAC,CAACof,EAAYJ,EAAeG,EAAK,MAAME,OAC7CP,EAASC,EAAWC,IAIxB,MAAMM,EAvCR,SAAqBH,EAAMI,GAEzB,QAAgB5f,IADAwf,EAAKI,GAKrB,OAAO3hB,OAAOP,OAAO,CAAE,GAAI8hB,EAAK,IAAMI,GAAYJ,EAAKI,GACxD,CAgCiBC,CAAYL,EAAMJ,EAAUG,OAAO,IAEnD,YAAgBvf,IAAZ2f,EACK,CAAC,CAACF,EAAYJ,EAAeG,EAAK,MAAME,OAC7CP,EAASC,EAAWC,IAIjBtF,EAAM4F,EAASP,EAAUxf,MAAM,GAAI6f,EAAYJ,EAAgB,EACvE,CAED,OAAOF,EAAS3P,EAAQ,EAC1B,CAIA,SAASsQ,GAAUN,GACjB,OAAOvhB,OAAOoX,QAAQmK,GAAM1P,QAAO,CAACnD,GAAMmO,EAAM6E,MAC9C,MAAMI,EAAkC,WAApBrF,GAAOiF,GAG3B,OADAhT,EAAImO,GAAQiF,EAAc,CAAE,GAAIJ,GAAYG,GAAUH,GAC/ChT,CAAG,GACT,CAAE,EACP,CAEA,SAASqT,GAAaR,EAAMhQ,GAC1B,OAAOA,EAAOrH,MAAM,IAAI2H,QAAO,CAACmQ,EAAgBnF,UACjB9a,IAAzBigB,EAAenF,KAEjBmF,EAAenF,GAAQ,IAElBmF,EAAenF,KACrB0E,EACL,CAaA,SAASU,GAAoBC,EAAY,IACvC,MAAMC,EAAa,CAAA,EAenB,MAb0B,WAAtB1F,GAAOyF,IACTliB,OAAOoX,QAAQ8K,GAAW9hB,SAAQ,EAAEgiB,EAAMC,MACxC,IAAIC,EAAUH,EACdC,EAAKlY,MAAM,IAAI9J,SAASyc,SACA9a,IAAlBugB,EAAQzF,KACVyF,EAAQzF,GAAQ,IAElByF,EAAUA,EAAQzF,EAAK,IAEzByF,EAAQ,IAAMD,CAAI,IAIf,SAAiB3T,GAiBtB,OAdA,SAAS6T,EAAaC,EAAYC,GAChC,YAAmB1gB,IAAfygB,GAAmD,WAAvB/F,GAAO+F,GAC9BC,EAEFziB,OAAOoX,QAAQqL,GAAe5Q,QACnC,CAAC6Q,GAAa7F,EAAM6E,MAElBgB,EAAW7F,GAAQ0F,EAAaC,EAAW3F,GAAO6E,GAC3CgB,IAETF,EAEH,CAEMD,CAhBSpI,KAAK2B,MAAM3B,KAAKC,UAAU1L,IAgBbyT,EACjC,CACA,CAGA,SAASQ,GAAmBjU,EAAKkU,GAC/B,OAAKA,EAG4B,aAA1BnG,GAAOmG,GACVA,EAAclU,GACduT,GAAoBW,EAApBX,CAAmCvT,GAJ9BA,CAKX,CAKA,MAAMmU,GAAe,CACnBriB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,IACnCxN,EAAG,CAAEY,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxC2V,EAAG,CAAEviB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCnE,EAAG,CAAEzI,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCuG,EAAG,CAAEnT,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxC4V,EAAG,CAAExiB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCU,EAAG,CAAEtN,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxC6V,EAAG,CAAEziB,EAAG,IAAKsiB,EAAG,IAAK1V,EAAG,KACxBN,EAAG,CAAEtM,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxC8V,EAAG,CAAE1iB,EAAG,IAAK6B,EAAG,IAAK6F,EAAG,IAAKkF,EAAG,KAChC+V,EAAG,CAAE3iB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCgW,EAAG,CAAE5iB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCnH,EAAG,CAAEzF,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxC3M,EAAG,CAAED,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCxK,EAAG,CAAEpC,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KACxCiW,EAAG,CAAE7iB,EAAG,KAAM6B,EAAG,KAAMygB,EAAG,IAAK5a,EAAG,KAAMkF,EAAG,OAGvCkW,GAAoB,CACxB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAGDC,GAAa,CACjB3jB,EAAG,IACHmjB,EAAG,IACH9Z,EAAG,IACH0K,EAAG,IACHqP,EAAG,IACHlV,EAAG,IACHhB,EAAG,IACHqW,EAAG,IACHC,EAAG,IACHnd,EAAG,IACHxF,EAAG,IACHmC,EAAG,IACHygB,EAAG,IACHG,EAAG,IACHzf,EAAG,KAEC0f,GAAY,CAAEC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,KACtDC,GAAe,CAAEvjB,EAAG,IAAK6B,EAAG,IAAKygB,EAAG,IAAK5a,EAAG,IAAKkF,EAAG,KAGpD4W,GAAU,CACdC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,KACLC,IAAK,KACLC,EAAG,KACHC,GAAI,KAGJC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,GAAI,KACJC,GAAI,MAIAC,GAAgB7kB,OAAOP,OAC3B,CACEqlB,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KAENlB,GACAN,IAIIyB,GAAgB,CACpBvB,GAAI,IACJwB,GAAI,IACJtB,GAAI,KACJuB,GAAI,KACJC,GAAI,KACJC,IAAK,KACLC,IAAK,IAGLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,MAGDC,GAAsB,CAC1BC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJzC,EAAG,IACH0C,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJ1iB,EAAG,KAIL,SAAS2iB,KACP,MAAMC,EAAW9E,GAAUgB,IAErB+D,EAAarV,GAAWwQ,GAAa4E,EAAUpV,GAsErD,SAASsV,EAAOtF,GACd,OAAOvhB,OAAOoX,QAAQmK,GAAM1P,QAAO,CAACiV,GAAUrf,EAAKR,MAQ/C6f,EAAQrf,GAPLA,EAOYof,EAAO5f,GAJP,IAAIA,IAMd6f,IACN,CAAE,EACN,CASD,OAzFA9mB,OAAOoX,QAAQmM,IAAYnjB,SAAQ,EAAE2mB,EAAWC,MAC9ChnB,OAAOoX,QAAQqM,IAAWrjB,SAAQ,EAAEgiB,EAAMC,MAExCuE,EAAUG,EAAY3E,GAAM,IAAM4E,EAAQ3E,CAAI,GAC9C,IAGJriB,OAAOoX,QAAQkM,IAAmBljB,SAAQ,EAAE6mB,EAAQC,MAClDN,EAAUK,GAAQ,IAAMC,CAAO,IAIjClnB,OAAOoX,QAAQ0O,IAAqB1lB,SAAQ,EAAE2mB,EAAWI,MACvDnnB,OAAOoX,QAAQ2M,IAAc3jB,SAAQ,EAAEgnB,EAAO/E,MAC5BuE,EAAUG,EAAYK,GAC9B,IAAMD,EAAY9E,CAAI,GAC9B,IAIJ,CAAC,IAAK,KAAM,MAAMjiB,SAASinB,IACzBT,EAAUS,GAAO,IAAM,GAAG,IAI5BV,EAAS9iB,EAAIsW,KAAK2B,MAAM3B,KAAKC,UAAUuM,EAAS/mB,IAEhDI,OAAOoX,QAAQ4M,IAAS5jB,SAAQ,EAAEmR,EAAQ+V,MACxC,MAAMC,EAAgBhW,EAAO5P,MAAM,EAAG4P,EAAOnP,OAAS,GAChDolB,EAAOjW,EAAO+P,OAAO/P,EAAOnP,OAAS,GACxBwkB,EAAUW,GAElBC,GAAQrN,KAAK2B,MAAM3B,KAAKC,UAAUwM,EAAUU,IAAc,IAUvEtnB,OAAOoX,QAAQyN,IAAezkB,SAAQ,EAAEqnB,EAAYpF,MAClD,MAAMmF,EAAQ3K,GAASA,EAAKyE,OAAOzE,EAAKza,OAAS,GAC3CmlB,EAAiBG,GAAUA,EAAM/lB,MAAM,EAAG+lB,EAAMtlB,OAAS,GAEzDulB,EAAWf,EADH,IAAIa,KAElBE,EAAS,IAAMtF,EAZjB,IAAyB9Q,EAeJqV,EAAU,IAAIW,EAAcE,MACpCD,EAAKC,IAAeE,GAhBRpW,EAmBPkW,EAlBT,IAAIznB,OAAOoX,QAAQ4M,IAAc,CAAC,IAAK,MAAOnS,QACnD,CAAC+V,GAAOC,EAAKzF,KAAW7Q,EAAO+C,WAAW8N,GAAQwF,EAAKnG,OAAOlQ,EAAOF,QAAQ+Q,EAAMyF,IAAQD,GAC3F,KAgB0BxnB,SAAS0nB,IACnC,CAAC,IAAK,KAAK1nB,SAAS2nB,IACInB,EAAUmB,EAASR,EAAcO,IACzCN,EAAKM,IAAYlB,EAAUmB,EAASN,EAAW,GAC7D,GACF,IAGJznB,OAAOoX,QAAQ8N,IAAe9kB,SAAQ,EAAEmR,EAAQ8Q,MAC9CuE,EAAUrV,GAAQ,IAAM8Q,CAAI,IAmB9B,IAAIriB,OAAO8Q,KAAKyS,IAAa,IAAK,IAAK,IAAK,KAAKnjB,SAAS2mB,IACxD,MAAMrF,EAAUiF,EAASI,GACzBrF,EAAQqF,GAAaF,EAAOnF,EAAQ,WAG/BiF,EAAShT,EAAEA,EAEX3T,OAAOgoB,OAAO7N,KAAK2B,MAAM3B,KAAKC,UAAUuM,IACjD,CAEA,IAAIsB,GAAkB,KAStB,MAAMC,GAAwBjG,GAAoB,CAChDmD,GAAI,IACJC,GAAI,MAgBN,SAAS8C,GAAgBtL,EAAO,IAC9B,OAAIF,GAAQE,IACLD,GAAcC,EAAMa,GAAuBC,GACpD,CAOA,SAASyK,GAAevL,EAAO,IAC7B,OAAIF,GAAQE,IACLA,EAAKxT,WAAW,KAAO8U,EAChC,CAOA,SAASkK,GAAexL,EAAO,IAC7B,OAAIF,GAAQE,IACLA,EAAKxT,WAAW,KAAO+U,EAChC,CAOA,SAASkK,GAAezL,EAAO,IAC7B,OAAIF,GAAQE,OACRuL,GAAevL,IACZD,GAAcC,EAAMe,GAAgBC,IAC7C,CAkCA,MAAM0K,GAAwBxJ,IAC5B,CAACxB,EAASH,EAAiBoL,KACzB,IAAI9Z,GA9FiB,MAAnBuZ,KACFA,GAAkBvB,MAEbuB,IAoGL,OAPAvZ,EAAM6O,EArFV,SAAsB7O,GAEpB,MAAM+Z,EAAUtO,KAAK2B,MAAM3B,KAAKC,UAAU1L,IAG1C,OAFA+Z,EAAQ9U,EAAEA,EAAI,CAAE,GAAI,KACpB8U,EAAQ9U,EAAE,KAAO,CAAE,GAAI,KAChB8U,CACT,CA+EoBC,CAAaha,GAAOA,EACpCA,EAAM0O,EAAkB8K,GAAsBxZ,GAAOA,EAEjD8Z,IACF9Z,EAAMiU,GAAmBjU,EAAK8Z,IAGzB9Z,CAAG,GAEZqR,IAwBF,SAAS4I,GAAOphB,EAAQ,GAAIX,EAAU,CAAA,EAAI8H,GACxC,IAAIgJ,EAaJ,OAZKhJ,EAQHgJ,EAAS9Q,GAPT8Q,EAASmJ,GAAwBja,GACjC8H,EAAM6Z,GACJ7Q,EAAO6F,QACP7F,EAAO0F,gBACP1F,EAAO8Q,oBAoCb,SAAgCjhB,EAAQ,GAAIX,EAAU,CAAA,EAAI8H,GACxD,MAAM6O,QAAEA,EAAOH,gBAAEA,EAAeoL,kBAAEA,GAAsB5hB,EAEnD8H,IACHA,EAAM6Z,GAAsBhL,EAASH,EAAiBoL,IAGxD,OAAOzH,GAAaxZ,EAAMmV,cAAehO,GAAM6O,EACjD,CArCSqL,CAAuBrhB,EAAOmQ,EAAQhJ,GAC1CA,KAAKma,IACJ,MAAOlU,EAAOuD,EAAKmK,GAAQwG,EAC3B,GAAa,OAATxG,EAEF,OAAO9a,EAAM5F,MAAMgT,GAErB,MAAMmU,EAAkBpR,EAAO6F,UAAYR,GAAgBC,SACrD+L,EAAkBrR,EAAO6F,UAAYR,GAAgBE,UACtD,IAAI1V,EAAM5F,MAAMgT,EAAOuD,IAAM8Q,MAAMb,IAExC,OAAOW,IAAoBC,EACvB1G,EAnFV,SAA4B9a,EAAQ,IAClC,MAAM0hB,EAAO,GAeb,OAdA1hB,EAAM2C,MAAM,IAAI9J,SAASyc,IAEvB,GAAIuL,GAAevL,IAASwL,GAAexL,GACzCoM,EAAK7nB,KAAKyb,QACL,GAAIyL,GAAezL,GAAO,CAE/B,MAAMC,EAAOD,EAAKxT,WAAW,IAAMyU,GAAiBF,IAC9CsL,EAAWC,OAAOC,aAAatM,GACrCmM,EAAK7nB,KAAK8nB,EAChB,MAEMD,EAAK7nB,KAAKyb,EACX,IAEIoM,EAAKze,KAAK,GACnB,CAmEU6e,CAAmBhH,EAAK,IAE7B7X,KAAK,GACV,CA4UA,SAAS8e,GAAS/hB,EAAQ,GAAIgiB,GAC5B,MAAMC,EAAgC,WAApB/M,GAAO8M,GACzB,OAAO5M,GAAQpV,IAEX,IAAIA,GAAOyhB,OAAOnM,IAClB,MAAM4M,EA7BZ,SAAsB5M,EAAO,IAC3B,OAAIF,GAAQE,IACLwB,GAAcqL,MAAK,EAAE/U,EAAOuD,KAAS0E,GAAcC,EAAMlI,EAAOuD,IACzE,CA0BqByR,CAAa9M,GAC5B,OAAQ2M,EAAqBC,GAAUF,EAAQxX,KAAK8K,GAAhC4M,CAAqC,GAE/D,CAOA,SAASG,GAAe/M,EAAO,IAC7B,OAAOD,GAAcC,EAAMiB,GAAgBC,GAC7C,CA6CA,SAAS8L,GAAWtiB,EAAQ,IAC1B,OAAIoV,GAAQpV,IACL,IAAIA,GAAOyhB,MAAMV,GAC1B,CAgBA,SAASwB,GAAWviB,EAAQ,IAC1B,OAAIoV,GAAQpV,IACL,IAAIA,GAAOyhB,MAAMY,GAC1B,CAiBA,SAASG,GAAYlN,EAAO,IAC1B,OAAOD,GAAcC,EAAMmB,GAAaC,KAX1C,SAA6BpB,EAAO,IAClC,OAAIF,GAAQE,IACLA,EAAKxT,WAAW,KAAO6U,EAChC,CAQwD8L,CAAoBnN,EAC5E,CAkBA,SAASoN,GAAQ1iB,EAAQ,IACvB,OAAIoV,GAAQpV,IACL,IAAIA,GAAOyhB,MAAMe,GAC1B,CA4BA,MAAMG,GAAwB,CAACrN,EAAMrP,IAAU4a,GAAevL,IAASrP,EAAQ,EACzE2c,GAAsB,CAACtN,EAAMrP,IAAU4a,GAAevL,IAASrP,EAAQ,EACvE4c,GAAkBvN,GAAS,CAAC,IAAK,KAAKwN,SAASxN,GAC/CyN,GAAc,CAClB9pB,EAAG,IACH6B,EAAG,IACHygB,EAAG,IACH5a,EAAG,IACHkF,EAAG,KAIL,SAASmd,GACPhjB,EAAQ,GACRijB,GACAC,oBAAEA,EAAmBjN,qBAAEA,GAAyB,CAAE,GAElD,IAAIkN,EAAe,GAEnB,OAAOnjB,EACJ2C,MAAM,IACN2H,QAAO,CAAC8Y,EAAM9N,EAAMrP,KAEnB,GACE6a,GAAexL,IACZqN,GAAsBrN,EAAMrP,IAC5B4c,GAAevN,GAElB,OAAO8N,EAAKlJ,OAAO5E,GAIrB,GACEW,GACGkN,GACAP,GAAoBtN,EAAMrP,GAC7B,CAEA,MAAMod,EAASJ,EAASE,GAAc/oB,OAAO,GAE7C,OACEioB,GAAeriB,EAAMiG,EAAQ,KACf,MAAXod,GACAH,EAEIE,EAAKlJ,OAAO,KAEdkJ,EAAKlJ,OAAO6I,GAAYM,GAEhC,CAED,IAAKxC,GAAevL,IAAS+M,GAAe/M,GAAO,CACjD,MAAMC,EAAOD,EAAKxT,WAAW,IAAMuU,GAAiBE,IAC9C+M,EAAW1B,OAAOC,aAAatM,GAErC,OADA4N,EAAeG,EACRF,EAAKlJ,OAAOoJ,EACpB,CAID,OADAH,EAAe,GACRC,EAAKlJ,OAAO5E,EAAK,GACvB,IACFrS,KAAK,GACV,CAEA,IAAIsgB,GAAmB,KAIvB,MAAMC,GAAe,CACnB,IAAE,IAAQ,IAAE,IAAO,IAAE,IAAO,IAAE,IAAQ,IAAE,IACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,MAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,MAAO,IAAE,MAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KACrB,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAC9B,IAAG,IACH,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,IAAE,KAAQ,IAAE,KAAO,IAAE,KAAO,IAAE,KAAQ,IAAE,KACxC,KAAG,KAAM,KAAG,KAAM,IAAE,KAAO,KAAG,KAAM,KAAG,MAInCC,GAAkB,CACtB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAIDC,GAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvDC,GAAU,CAAE,IAAG,KAAM,IAAG,KAAM,IAAG,MACjCC,GAAgB,CAAE,IAAG,KAAM,IAAG,MAC9BC,GAAc,CAClB,IAAG,IACH,IAAG,IACH,IAAG,IACH,IAAG,IACH,IAAG,KAECC,GAAY,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEIC,GAAkB,CACtB,IAAG,KACH,IAAG,KACH,IAAG,IACH,IAAG,KAECC,GAAa,CACjB,IAAG,GACH,IAAG,KACH,IAAG,KACH,IAAG,KACH,IAAG,IACH,IAAG,IACH,IAAG,IACH,IAAG,IACH,IAAG,KAKCC,GAAmB,CACvB/qB,EAAG,IACHoD,EAAG,IACHoC,EAAG,IACHlC,EAAG,IACHof,EAAG,IACHH,EAAG,IACHsB,EAAG,IACH1kB,EAAG,IACHkO,EAAG,IACHlL,EAAG,IACH4gB,EAAG,IACH1W,EAAG,IACHiW,EAAG,IACH9Z,EAAG,IACHoa,EAAG,IACHH,EAAG,IACH1jB,EAAG,IACH4jB,EAAG,KAGL,SAASqI,KAIP,OAHwB,MAApBX,KACFA,GAcJ,WACE,MAAMY,EAAa7J,GAAUkJ,IAEvBnE,EAAarV,GAAWwQ,GAAa2J,EAAYna,GACjDoa,EAAW,CAACpa,EAAQqa,KACxBhF,EAAUrV,GAAQ,IAAMqa,CAAe,EAwDzC,OArDA5rB,OAAOoX,QAAQ4T,IAAiB5qB,SAAQ,EAAE8mB,EAASD,MACjDL,EAAUM,GAAS,IAAMD,CAAM,IAGjC,IAAIjnB,OAAOoX,QAAQ8T,OAAalrB,OAAOoX,QAAQgU,KAAchrB,SAC3D,EAAEgiB,EAAMC,MACNsJ,EAASvJ,EAAMC,EAAK,IAKxBgJ,GAAUjrB,SAASiiB,IACjB,MAAMwJ,EAAkBjF,EAAUvE,GAAM,IAAI,GAC5CriB,OAAOoX,QAAQ8T,IAAS9qB,SAAQ,EAAE4mB,EAAO8E,MACvCH,EAAStJ,EAAO2E,EAAO6E,EAAkBC,EAAM,IAGjD9rB,OAAOoX,QAAQ+T,IAAe/qB,SAAQ,EAAE4mB,EAAO8E,MAC7CH,EAAStJ,EAAO2E,EAAO6E,EAAkBC,EAAM,GAC/C,IAGJ9rB,OAAOoX,QAAQkU,IAAiBlrB,SAAQ,EAAEiiB,EAAMD,MAE9CpiB,OAAOoX,QAAQ8T,IAAS9qB,SAAQ,EAAE4mB,EAAO8E,MACvCH,EAAStJ,EAAO2E,EAAO5E,EAAO0J,EAAM,GAAG,IAGzCH,EAAS,GAAGtJ,KAAS,GAAGD,OACxBuJ,EAAS,GAAGtJ,KAAS,GAAGD,KAAQ,IAGlCsJ,EAAW,KAAOK,GAAWL,GAE7B1rB,OAAOoX,QAAQmU,IAAYnrB,SAAQ,EAAEiiB,EAAMD,MACzCuJ,EAAStJ,EAAMD,EAAK,IAGtB6I,GAAiB7qB,SAASiiB,IACxBsJ,EAAS,IAAItJ,IAAQ,KAAKuE,EAAUvE,GAAM,MAAM,IAc3CriB,OAAOgoB,OAAO7N,KAAK2B,MAAM3B,KAAKC,UAAUsR,IACjD,CA5EuBM,IAEdlB,EACT,CA2EA,SAASiB,GAAWxK,GAClB,OAAOvhB,OAAOoX,QAAQmK,GAAM1P,QAAO,CAACiV,GAAUrf,EAAKR,MACjD,GAAKQ,EAUHqf,EAAQrf,GAAOskB,GAAW9kB,OAVlB,CAER,MAAM8f,EAAY9f,EAAMqa,OAAO,GAE/BwF,EAAQrf,GAAOzH,OAAO8Q,KAAK0a,IAAkBnB,SAAStD,GAClDyE,GAAiBzE,GAAa9f,EAC9BA,CACV,CAKI,OAAO6f,CAAO,GACb,CAAE,EACP,CAGA,MAAMmF,GAAwBlN,IAC5B,CAACtB,EAAcyO,KACb,IAAIxd,EA9FR,SAA6B+O,GAC3B,OAAQA,IACDP,GACIuO,KAEA,EAEb,CAuFcU,CAAoB1O,GAM9B,OAJIyO,IACFxd,EAAMiU,GAAmBjU,EAAKwd,IAGzBxd,CAAG,GAEZqR,IAmBF,SAASyK,GAASjjB,EAAQ,GAAIX,EAAU,CAAA,EAAI8H,GAC1C,MAAMgJ,EAASmJ,GAAwBja,GAUvC,OARK8H,IACHA,EAAMud,GACJvU,EAAO+F,aACP/F,EAAOwU,sBAcb,SAAyB3kB,EAAOX,EAAS8H,GAClCA,IACHA,EAAMud,GACJrlB,EAAQ6W,aACR7W,EAAQslB,sBAIZ,MAAMxU,EAAS1X,OAAOP,OAAO,CAAA,EAAI,CAAEgrB,qBAAqB,GAAQ7jB,GAEhE,OAAOma,GACLwJ,GAAmBhjB,EAAOijB,GAAU9S,GACpChJ,GACC9H,EAAQ2W,QAEb,CAxBS6O,CAAgB7kB,EAAOmQ,EAAQhJ,GACnCA,KAAK2d,IACJ,MAAO1X,EAAOuD,EAAK0S,GAAUyB,EAE7B,OADsB3U,EAAO4F,gBAAkBwM,GAAWviB,EAAM5F,MAAMgT,EAAOuD,IACtD0S,EAAO0B,cAAgB1B,CAAM,IAErDpgB,KAAK,GACV,CA4CA,SAAS+hB,GAAWhlB,EAAQ,GAAIX,EAAU,CAAA,GACxC,MAAM8Q,EAASmJ,GAAwBja,GACvC,GAAI8Q,EAAO2F,WACT,OAAOkN,GAAmBhjB,EAAOijB,GAAU9S,GAG7C,GA9XF,SAAiBnQ,EAAQ,GAAIX,EAAU,CAAE4lB,WAAW,IAClD,MAAM9E,EAAQ,IAAIngB,GAClB,IAAIklB,GAAW,EAIf,OAHK7lB,EAAQ4lB,YACXC,EAAW/E,EAAMgC,KAAKO,MAEhBvC,EAAMgC,KAAKG,KAAenC,EAAMgC,KAAKI,MAAgBpC,EAAMgC,KAAKJ,MAAcmD,CACxF,CAuXMC,CAAQnlB,EAAO,CAAEilB,WAAW,IAAS,CAEvC,OAAO7D,GADmB4B,GAAmBhjB,EAAOijB,GAAU9S,GAC9BgF,cAAehF,EAChD,CAED,OAAI4R,GAAS/hB,IA/Bf,SAAkCsV,EAAO,IACvC,OAAIF,GAAQE,IACLyB,GAAsBoL,MAAK,EAAE/U,EAAOuD,KAAS0E,GAAcC,EAAMlI,EAAOuD,IACjF,CA4ByByU,CAAyBplB,GACvCohB,GAAOphB,EAAMmV,cAAehF,GAG9B6S,GAAmBhjB,EAAOijB,GAAU9S,EAC7C,CCtuDA,MAAMkV,GAAa,wBAEbC,GAAiB,GAAGD,6BACpBE,GAAkB,GAAGF,8BAErBG,GAAcxR,GACT,IAAI3B,QAAQ,CACf,eAAgB,mBAChBoT,cAAiB,UAAYzR,IAoB/B0R,GAAyBnT,MAAOoT,EAAcC,EAAYC,KAC5D,IAAI7R,EAAMF,aAAaO,QAAQ,aAC3ByR,EAAU,CACVC,eAAgB,IAAIH,IACpBI,cAAeL,EACfE,QAASA,EAAQI,QAErB,MAAMxT,QAAiBC,MAAM4S,GAvBC,EAAC9S,EAAMJ,KAC9B,CACHO,OAAQ,OACRP,QAASA,EACTI,KAAMI,KAAKC,UAAUL,KAmBoB0T,CAA0BJ,EAASN,GAAWxR,KAC3F,aAAavB,EAASM,MAAM,EAG1BoT,GAAqB5T,MAAO6T,IAE9B,IAAIC,EAAmBC,gBAAgBF,GACvC,IAAK,IAAIG,KAAQF,EAAiBG,sBACvBD,EAAKE,mBAGhB,IAAIzS,EAAMF,aAAaO,QAAQ,aAE/B,MAAM5B,QAAiBC,MAAM6S,GA5BH,EAAC/S,EAAMJ,KAC1B,CACHO,OAAQ,OACRP,QAASA,EACTI,KAAMI,KAAKC,UAAUL,KAwBqBkU,CAAsBN,EAAcZ,GAAWxR,KAC7F,IAAI2S,QAA2BlU,EAASM,OAExC,IAAK,IAAIwT,KAAQI,EAAmBH,eAAgB,CAChD,MAAMI,EAAYR,EAAaI,eAAelO,MAAKjd,GAAKA,EAAEwrB,IAAMN,EAAKM,KACxC,YAAzBT,EAAaU,WACbP,EAAKE,mBAAqBG,EAAUH,mBAE3C,CAED,OAAOE,GAMLI,GAAuB,CAACX,EAAcY,KACxC,IAAIC,EAA2B,GAC/B,IAAK,IAAIV,KAAQH,EAAaI,eAAgB,CAC1C,IAAIU,EAAqB,KAErBA,EADyB,YAAzBd,EAAaU,SACQE,EAAUG,SAASZ,EAAKa,UAEP,MAAjBb,EAAKc,SAAmBL,EAAUG,SAASZ,EAAKc,UAAY,GAIrF,IAAK,IAAIrhB,KAASkhB,EAAoB,CAClC,IAAII,EAAmBC,GAAoBvhB,EAAMwhB,SACjDxhB,EAAMwhB,QAAUF,CACnB,CAE4B,YAAzBlB,EAAaU,SACbP,EAAKE,mBAAqBS,EAE1BX,EAAKkB,mBAAqBP,EAG9BD,EAAyBptB,KAAK0sB,EACjC,CACDH,EAAaI,eAAiBS,CAAwB,sOC3D1DhpB,EAGMhB,EAAAuW,EAAAtV,2LC6BSlE,EAAO,wBAAZa,OAAIC,GAAA,qEADoCd,EAAK,uFAAlBA,EAAQ,4GAHdA,EAAQ,sBAChBA,EAAQ,GAAA,wBACbA,EAAQ,uDAL1BiE,EAcMhB,EAAAgW,EAAA/U,GAbFlB,EAYMiW,EAAAO,GAPNxW,EAA0DwW,EAAAC,sFAAZzZ,EAAK,sBACxCA,EAAO,WAAZa,OAAIC,GAAA,EAAA,mHAAJD,6BAHab,EAAQ,GAAA,oGAbMA,EAAK,2CAAlBA,EAAQ,8CAGVA,EAAO,oCACMA,EAAQ,sFAL3CiE,EAQMhB,EAAAgT,EAAA/R,GAPFlB,EAA8CiT,EAAAyX,iBAC9C1qB,EAKSiT,EAAA6B,qBADK9X,EAAW,2BALQA,EAAK,6BAGpBA,EAAO,0GAfQA,EAAK,gHAAlBA,EAAQ,wIAGVA,EAAO,oCACMA,EAAQ,qFAL3CiE,EAUMhB,EAAAgT,EAAA/R,GATFlB,EAA8CiT,EAAA0X,iBAC9C3qB,EAOSiT,EAAA6B,GAFD9U,EAAe8U,EAAA8V,UACf5qB,EAAgB8U,EAAA+V,qBAFV7tB,EAAW,2BALQA,EAAK,6BAGpBA,EAAO,6EA4BZA,EAAM,IAAA,YlBwfvB,SAA4B4W,GACxB,IAAIkX,EACJ,MAAO,CACQ,CAAAzsB,IAAK0sB,GACZD,EAAUC,EACVD,EAAQjvB,SAAQmH,GAAS4Q,EAAM/W,KAAKmG,IACvC,EACY,CAAAuF,GACTuiB,EAAQjvB,SAAQmH,GAAS4Q,EAAM1H,OAAO0H,EAAM7N,QAAQ/C,GAAQ,IAC/D,EAET,iFkBrgBuCR,EAAAQ,EAAA,KAAAgoB,EAAA,GAAAhuB,SAAUA,EAAQ,kBAAWA,EAAM,oDAC/CwF,EAAAyoB,EAAA,MAAAC,EAAA,GAAAluB,SAAUA,EAAQ,mDADjCiE,EAAmFhB,EAAA+C,EAAA9B,yBAAPlE,EAAK,YACjFiE,EAEQhB,EAAAgrB,EAAA/pB,wDAHmB,EAAA5D,GAAA0tB,KAAAA,EAAA,GAAAhuB,SAAUA,EAAQ,+BAAWA,EAAM,4EAAcA,EAAK,gBAE5EA,EAAM,IAAA,KAAA8F,EAAAqoB,EAAAC,GADI,EAAA9tB,GAAA4tB,KAAAA,EAAA,GAAAluB,SAAUA,EAAQ,wGAhCxC,MAAU,SAAVA,KAAiBsS,GAYF,UAAVtS,KAAkBquB,uNArCbC,GAAKlf,GACLmf,OAAAA,EAAS,eAAanf,WACtB/J,EAAO,IAAA+J,GACVof,SAAAA,EAAW,IAAEpf,GACb1J,MAAAA,GAAQ,GAAK0J,EAEjBqf,GAAU,QAEXC,EAAW/tB,KAAKguB,MAAsB,IAAhBhuB,KAAKiuB,qMAErB,SAAYzpB,SAGXuP,EAFSvP,EAAMlC,OAEA2C,aAAa,gBAElCiN,EAAA,EAAA4b,EAAoB,SAAV/Z,GAEV7B,EAAA,EAAAnN,GAAoB,IAAZ+oB,eAuCwE/oB,EAAKsJ,KAAA6f,kOCStF,cAAO7uB,EAAK,+EAHeA,EAAU,8EAAiDA,EAAK,6IAFlGiE,EAOMhB,EAAAgT,EAAA/R,GALFlB,EAA0HiT,EAAAjQ,UAG1HhD,EAAoBiT,EAAA6Y,wBACpB9rB,EAAoDiT,EAAA8Y,qBAJsD/uB,EAAY,6CAAxFA,EAAU,kBAAiDA,EAAK,aAGpFA,EAAK,+DAtEJ0F,MAAAA,EAAQqV,eAAeV,QAAQ,eAAiB,GAACjL,GACjD4f,cAAAA,EAAgB,MAAI5f,6HAE5ByD,EAAA,EAAAoc,EAA2D,6CAAa,IAAbvpB,EAAQ,gBAAmC,IAAbA,EAAQ,4BAG3F,SAAaP,GAClB0N,EAAA,EAAAnN,EAAQP,EAAMlC,OAAOyC,OACjBspB,GACAA,EAAc7pB,4fC8PHnF,EAAkB,yBAAvBa,OAAIC,GAAA,wKAACd,EAAkB,YAAvBa,OAAIC,GAAA,EAAA,2HAAJD,wDAFwBb,EAAQ,IAAA,kFAAlCiE,EAAuChB,EAAA5B,EAAA6C,8BAAblE,EAAQ,IAAA,KAAA8F,EAAA4B,EAAAwnB,8CASrBlvB,EAAY,IAAA,6EADjBiE,EAEOhB,EAAAksB,EAAAjrB,qCADFlE,EAAY,IAAA,KAAA8F,EAAAspB,EAAAC,kDAJZrvB,EAAY,IAAA,KAAMA,EAAO,IAAA,8FAD9BiE,EAEOhB,EAAAksB,EAAAjrB,UADWlB,EAAkBmsB,EAAAG,qCAA/BtvB,EAAY,IAAA,KAAA8F,EAAAspB,EAAAC,eAAMrvB,EAAO,IAAA,KAAA8F,EAAAqoB,EAAAC,+FAF7BpuB,EAAuB,GAACA,EAAY,OAAKA,EAAY,mNAgBnDA,EAAkB,yBAAvBa,OAAIC,GAAA,wKAACd,EAAkB,YAAvBa,OAAIC,GAAA,EAAA,2HAAJD,wDAFEb,EAAQ,IAAA,oEAAZiE,EAAiBhB,EAAA5B,EAAA6C,8BAAblE,EAAQ,IAAA,KAAA8F,EAAA4B,EAAAwnB,8CASClvB,EAAY,IAAA,2FADjBiE,EAEOhB,EAAAksB,EAAAjrB,qCADFlE,EAAY,IAAA,KAAA8F,EAAAspB,EAAAC,kDAJZrvB,EAAY,IAAA,KAA0BA,EAAO,IAAA,sJADlDiE,EAEOhB,EAAAksB,EAAAjrB,UADWlB,EAAsCmsB,EAAAG,qCAAnDtvB,EAAY,IAAA,KAAA8F,EAAAspB,EAAAC,eAA0BrvB,EAAO,IAAA,KAAA8F,EAAAqoB,EAAAC,+FAFjDpuB,EAAuB,GAACA,EAAY,OAAKA,EAAY,2OAWpCA,EAAK,IAAA,mBAhClC,OAAsB,MAAtBA,MAA0BuvB,yHAiBtB,OAAsB,MAAtBvvB,MAA0BsS,iHAeT,sBAAc,gKAhBRtS,EAAY,GAAG,WAAa,IAAE,kEAjBlEiE,EAmCMhB,EAAAuW,EAAAtV,sBAnBFlB,EAAwGwW,EAAAxT,OAAzEhG,EAAM,YACrCgD,EAiBMwW,EAAAC,sBADFzW,EAA0CyW,EAAApY,0JAjBfrB,EAAM,SAANA,EAAM,8EAiBHA,EAAK,IAAA,KAAA8F,EAAA0pB,EAAAC,sCAhBPzvB,EAAY,GAAG,WAAa,IAAE,kNAzB/C0vB,2DAG0DC,sBAA9CC,kDACC,IAAZ5vB,EAAY,aAAZA,EAAY,oCpB+xDxC,SAAcP,EAAWkF,EAAMjF,GAC3B,MAAMuM,EAAQxM,EAAUE,GAAG6B,MAAMmD,QACnBnE,IAAVyL,IACAxM,EAAUE,GAAGqO,MAAM/B,GAASvM,EAC5BA,EAASD,EAAUE,GAAGK,IAAIiM,IAElC,2EoBpyDwC4jB,IAE7B,IAAAC,EAAA9vB,KAAawsB,oCAAlB3rB,OAAIC,GAAA,+DAuC+Cd,EAAS,oBAA9BA,EAAU,+BAEpBA,EAAS,qzBAHDA,EAAS,GAAG,aAAe,IAAE,+CAnDxCA,EAAS,GAAG,aAAe,IAAE,2BAApDiE,EAwDMhB,EAAA2X,EAAA1W,GAvDFlB,EAAkB4X,EAAA/C,UAClB7U,EAGM4X,EAAAnB,GAFFzW,EAA6HyW,EAAAzT,OAA9EhG,EAAO,WACtDgD,EAAqFyW,EAAApY,8BAGzF2B,EAKM4X,EAAApB,GAJFxW,EAAiCwW,EAAAuW,8HA2CrC/sB,EAIM4X,EAAAC,uBAFF7X,EAAgC6X,EAAA5B,yGAlDejZ,EAAO,QAAPA,EAAO,epBw/B9D,IAA4BzB,6BoBj/BAyB,EAAY,GpBi/BZzB,WACxBwL,EAAgBlK,KAAKtB,+BoB/+BduxB,EAAA9vB,KAAawsB,uBAAlB3rB,OAAIC,GAAA,EAAA,gHAAJD,kCAuCmDb,EAAS,4CAExCA,EAAS,oDAHDA,EAAS,GAAG,aAAe,IAAE,mEAnDxCA,EAAS,GAAG,aAAe,IAAE,6XA1LvC6vB,KACL9U,eAAeiV,WAAW,gBAC1BruB,OAAO8S,SAASwF,kBAGX0V,WAE8B,aADhB5U,eAAeV,QAAQ,kBAAoB,YACd,UAAY,oBAIvDuV,KACL7U,eAAehB,QAAQ,gBAAiB4V,MACxC5U,eAAeiV,WAAW,gBAC1BruB,OAAO8S,SAASwF,SAGX,SAAAyV,GAAuBvqB,GAC5B4V,eAAehB,QAAQ,aAAc5U,EAAMlC,OAAOyC,2CAtE3C0mB,EAAY,IAAAhd,GACZ4d,UAAAA,EAAY,MAAI5d,EACvByc,EAAU9Q,eAAeV,QAAQ,YAAc,GAE/C4V,GAAY,EACZC,GAAe,EACfC,GAAe,EACfnX,GAAY,WASPoX,EAAYjrB,EAAO0nB,GAElB,MAAAN,EAAOH,EAAaI,eAAelO,MAAKjd,GAAKA,EAAEwrB,KAAOA,IACxDN,IACAA,EAAK8D,OAASlrB,EAAMlC,OAAOyC,OAEzB,MAAA4qB,EAAYlE,EAAaI,eAAerf,KAAI9L,GAC1CA,EAAEwrB,IAAMN,EAAKM,GAEN,IAAAxrB,EACHgvB,OAAQ9D,EAAK8D,QAGVhvB,QAGf+qB,EAAaI,eAAiB8D,EAASlE,GAvB3C7iB,GAAOgP,UAC4C,IAA3C6T,EAAaI,eAAe,GAAGa,UAC/Bxa,EAAA,EAAAqd,GAAe,wIAyBnBrd,EAAA,EAAAmG,GAAY,GACZnG,EAAA,EAAAod,GAAY,aAEFtD,QAA2BR,GAAmBC,GACpDW,GAAqBJ,EAAoBK,GACzCna,EAAA,EAAAuZ,EAAeO,GACf9Z,EAAA,EAAAqd,GAAe,GAEfnV,eAAehB,QAAQ,eAAgBnB,KAAKC,UAAUuT,UACjD3f,GACLyN,QAAQzN,MAAM,uBAAwBA,GACtCoG,EAAA,EAAAmG,GAAY,GAEhBnG,EAAA,EAAAod,GAAY,IA6BP,SAAwBjkB,GAClB,IAAA,MAAAsP,KAAQtP,KACXukB,GAAiBjV,UACV,SAGR,gBA6JwCuQ,EAAO7c,KAAAtJ,cAAaP,GAxK9D,SAAmBA,GACxB+U,QAAQC,IAAIhV,EAAMlC,OAAOyC,OACzBqV,eAAehB,QAAQ,UAAW5U,EAAMlC,OAAOyC,OAsK8B8qB,CAAmBrrB,eAO5EgrB,EAAYzqB,uDAoBsB,CAAAmnB,EAAA1nB,IAAUirB,EAAYjrB,EAAO0nB,kMCvGhD7sB,EAAU,kEACRA,EAAY,kCAEpBA,EAAI,aAAaA,EAAS,sJAJvDiE,EAGMhB,EAAAgT,EAAA/R,oGACuBlE,EAAI,sBAAaA,EAAS,odAb7BywB,+DACczwB,EAAU,kOAJlDiE,EAMMhB,EAAAuW,EAAAtV,GALFlB,EAAoDwW,EAAA3B,UACpD7U,EAGMwW,EAAAC,8PAPTzZ,EAAK,GAAA,EASS,OAATA,KAAa,gEAV3BiE,EAqBOhB,EAAA6X,EAAA5W,mPAlEMusB,KACL1V,eAAeiV,WAAW,gBAJ1BruB,OAAO8S,SAASwF,4BArGhB,IAAAnV,EAAO,KACP2H,GAAQ,EACRugB,EAAY,YAEhBzjB,GAAOgP,UACmB,oBAAX5W,SACFyY,MACDnF,GAAS,MAKjBpC,EAAA,EAAAma,QAAsB,IAAApqB,SAAS,CAAAqH,EAASymB,KACpCC,SAASC,QAAO,CAAGC,QAAS,WAAYC,OAAK,CAAEC,EAAKC,KAC5CD,EACAL,EAAOK,GAEP9mB,EAAQ+mB,cAOZ,IAAArF,EAAe5Q,eAAeV,QAAQ,kBAAoB,WAC1DuR,EAAa7Q,eAAeV,QAAQ,eAAiB,EACrDwR,EAAU9Q,eAAeV,QAAQ,YAAc,GAC/C4W,EAAcrY,KAAK2B,MAAMQ,eAAeV,QAAQ,iBACjC,MAAf4W,EACApe,EAAA,EAAA/N,EAAOmsB,IAEPpe,EAAA,EAAA/N,QAAa4mB,GAAuBC,EAAcC,EAAYC,IAC9D9Q,eAAehB,QAAQ,eAAgBnB,KAAKC,UAAU/T,KA6D1DioB,GAAqBjoB,EAAMkoB,SACtBrmB,GACLuT,QAAQzN,MAAM,uCAAwC9F,GACtDkM,EAAA,EAAApG,GAAQ,yBAcZwI,GAAS,iBAIT+F,YAAiB,IAAA/F,GAAS,MAAM,KAChC6E,aAAa3Q,QACb4R,eAAe5R,kJCrHQ+nB,kDACQC,+gBCR3B,sEAAQ,CACnBluB,OAAQI,SAASmV","x_google_ignoreList":[0,1,2,3,4,5,6,15]}